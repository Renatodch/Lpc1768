<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\ByRenato.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\ByRenato.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Mon Mar 19 15:41:41 2018
<BR><P>
<H3>Maximum Stack Usage =        272 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
USBH_MSC_Init &rArr; USBH_MSC_RequestSense &rArr; USBH_MSC_Send_Data &rArr; usbh_transfer
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[60]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[5]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">NMI_Handler</a><BR>
 <LI><a href="#[6]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">HardFault_Handler</a><BR>
 <LI><a href="#[7]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">MemManage_Handler</a><BR>
 <LI><a href="#[8]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">BusFault_Handler</a><BR>
 <LI><a href="#[9]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">UsageFault_Handler</a><BR>
 <LI><a href="#[a]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SVC_Handler</a><BR>
 <LI><a href="#[b]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">DebugMon_Handler</a><BR>
 <LI><a href="#[c]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">PendSV_Handler</a><BR>
 <LI><a href="#[d]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">SysTick_Handler</a><BR>
 <LI><a href="#[24]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[24]">ADC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[25]">BOD_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[8]">BusFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[30]">CANActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[27]">CAN_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[28]">DMA_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[b]">DebugMon_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[20]">EINT0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[21]">EINT1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[22]">EINT2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[23]">EINT3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2a]">ENET_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[6]">HardFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[18]">I2C0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[19]">I2C1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1a]">I2C2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[29]">I2S_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2c]">MCPWM_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[7]">MemManage_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[5]">NMI_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1e]">PLL0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2e]">PLL1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[17]">PWM1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[c]">PendSV_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2d]">QEI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2b]">RIT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1f]">RTC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[4]">Reset_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1b]">SPI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1c]">SSP0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1d]">SSP1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[a]">SVC_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[d]">SysTick_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[31]">SystemInit</a> from system_lpc17xx.o(i.SystemInit) referenced from startup_lpc17xx.o(.text)
 <LI><a href="#[f]">TIMER0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[10]">TIMER1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[11]">TIMER2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[12]">TIMER3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[13]">UART0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[14]">UART1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[15]">UART2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[16]">UART3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2f]">USBActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[3b]">USBH_MSC_Config</a> from usbh_msc.o(i.USBH_MSC_Config) referenced from usbh_msc.o(.data)
 <LI><a href="#[3f]">USBH_MSC_GetLastError</a> from usbh_msc.o(i.USBH_MSC_GetLastError) referenced from usbh_msc.o(.data)
 <LI><a href="#[3d]">USBH_MSC_Init</a> from usbh_msc.o(i.USBH_MSC_Init) referenced from usbh_msc.o(.data)
 <LI><a href="#[3c]">USBH_MSC_UnConfig</a> from usbh_msc.o(i.USBH_MSC_UnConfig) referenced from usbh_msc.o(.data)
 <LI><a href="#[3e]">USBH_MSC_UnInit</a> from usbh_msc.o(i.USBH_MSC_UnInit) referenced from usbh_msc.o(.data)
 <LI><a href="#[41]">USBH_OHCI_Delay_ms</a> from usbh_ohci.o(i.USBH_OHCI_Delay_ms) referenced from usbh_ohci.o(.data)
 <LI><a href="#[48]">USBH_OHCI_EP_Add</a> from usbh_ohci.o(i.USBH_OHCI_EP_Add) referenced from usbh_ohci.o(.data)
 <LI><a href="#[49]">USBH_OHCI_EP_Config</a> from usbh_ohci.o(i.USBH_OHCI_EP_Config) referenced from usbh_ohci.o(.data)
 <LI><a href="#[4a]">USBH_OHCI_EP_Remove</a> from usbh_ohci.o(i.USBH_OHCI_EP_Remove) referenced from usbh_ohci.o(.data)
 <LI><a href="#[40]">USBH_OHCI_Get_Capabilities</a> from usbh_ohci.o(i.USBH_OHCI_Get_Capabilities) referenced from usbh_ohci.o(.data)
 <LI><a href="#[46]">USBH_OHCI_Get_Connect</a> from usbh_ohci.o(i.USBH_OHCI_Get_Connect) referenced from usbh_ohci.o(.data)
 <LI><a href="#[47]">USBH_OHCI_Get_Speed</a> from usbh_ohci.o(i.USBH_OHCI_Get_Speed) referenced from usbh_ohci.o(.data)
 <LI><a href="#[43]">USBH_OHCI_Init</a> from usbh_ohci.o(i.USBH_OHCI_Init) referenced from usbh_ohci.o(.data)
 <LI><a href="#[42]">USBH_OHCI_Pins_Config</a> from usbh_ohci.o(i.USBH_OHCI_Pins_Config) referenced from usbh_ohci.o(.data)
 <LI><a href="#[44]">USBH_OHCI_Port_Power</a> from usbh_ohci.o(i.USBH_OHCI_Port_Power) referenced from usbh_ohci.o(.data)
 <LI><a href="#[45]">USBH_OHCI_Port_Reset</a> from usbh_ohci.o(i.USBH_OHCI_Port_Reset) referenced from usbh_ohci.o(.data)
 <LI><a href="#[4c]">USBH_OHCI_URB_Cancel</a> from usbh_ohci.o(i.USBH_OHCI_URB_Cancel) referenced from usbh_ohci.o(.data)
 <LI><a href="#[4b]">USBH_OHCI_URB_Submit</a> from usbh_ohci.o(i.USBH_OHCI_URB_Submit) referenced from usbh_ohci.o(.data)
 <LI><a href="#[26]">USB_IRQHandler</a> from usbh_ohci_lpc17xx.o(i.USB_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[9]">UsageFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[e]">WDT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[4d]">__main</a> from __main.o(!!!main) referenced from startup_lpc17xx.o(.text)
 <LI><a href="#[34]">usbh_ohci_hw_delay_ms</a> from usbh_ohci_lpc17xx.o(i.usbh_ohci_hw_delay_ms) referenced from usbh_ohci_lpc17xx.o(.data)
 <LI><a href="#[33]">usbh_ohci_hw_get_capabilities</a> from usbh_ohci_lpc17xx.o(i.usbh_ohci_hw_get_capabilities) referenced from usbh_ohci_lpc17xx.o(.data)
 <LI><a href="#[38]">usbh_ohci_hw_init</a> from usbh_ohci_lpc17xx.o(i.usbh_ohci_hw_init) referenced from usbh_ohci_lpc17xx.o(.data)
 <LI><a href="#[3a]">usbh_ohci_hw_irq_en</a> from usbh_ohci_lpc17xx.o(i.usbh_ohci_hw_irq_en) referenced from usbh_ohci_lpc17xx.o(.data)
 <LI><a href="#[37]">usbh_ohci_hw_pins_config</a> from usbh_ohci_lpc17xx.o(i.usbh_ohci_hw_pins_config) referenced from usbh_ohci_lpc17xx.o(.data)
 <LI><a href="#[39]">usbh_ohci_hw_port_power</a> from usbh_ohci_lpc17xx.o(i.usbh_ohci_hw_port_power) referenced from usbh_ohci_lpc17xx.o(.data)
 <LI><a href="#[36]">usbh_ohci_hw_reg_rd</a> from usbh_ohci_lpc17xx.o(i.usbh_ohci_hw_reg_rd) referenced from usbh_ohci_lpc17xx.o(.data)
 <LI><a href="#[35]">usbh_ohci_hw_reg_wr</a> from usbh_ohci_lpc17xx.o(i.usbh_ohci_hw_reg_wr) referenced from usbh_ohci_lpc17xx.o(.data)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[4d]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[4e]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[50]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[84]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[85]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[51]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[86]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[55]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[87]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[88]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[89]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[8a]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[8b]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[8c]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[8d]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[8e]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[8f]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[90]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[91]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[92]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[93]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[94]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[95]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[96]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[97]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[98]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[99]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[9a]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[9b]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[5a]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[9c]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[9d]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[9e]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[9f]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[a0]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[a1]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[a2]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[4f]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[a3]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[52]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[54]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[a4]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[56]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; exit
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[a5]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[61]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[59]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[a6]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[5b]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[4]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>CANActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USBActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[79]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TD_Clear
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_IRQHandler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Init
</UL>

<P><STRONG><a name="[5d]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[a7]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_UnConfig
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Config
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Send_Data
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Rece_Data
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_mem_init_lib
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Send_Setup
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Send_Data
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Rece_Data
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Init
</UL>

<P><STRONG><a name="[a8]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[a9]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[aa]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[53]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[58]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[ad]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[ae]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[5c]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[af]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[b0]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[b1]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>USBH_OHCI_Delay_ms</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbh_ohci.o(i.USBH_OHCI_Delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_URB_Submit
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Port_Reset
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Get_Connect
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP_Remove
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_ohci.o(.data)
</UL>
<P><STRONG><a name="[40]"></a>USBH_OHCI_Get_Capabilities</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbh_ohci.o(i.USBH_OHCI_Get_Capabilities))
<BR>[Address Reference Count : 1]<UL><LI> usbh_ohci.o(.data)
</UL>
<P><STRONG><a name="[31]"></a>SystemInit</STRONG> (Thumb, 302 bytes, Stack size 0 bytes, system_lpc17xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(.text)
</UL>
<P><STRONG><a name="[3b]"></a>USBH_MSC_Config</STRONG> (Thumb, 328 bytes, Stack size 56 bytes, usbh_msc.o(i.USBH_MSC_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = USBH_MSC_Config &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_SetLastError
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_msc.o(.data)
</UL>
<P><STRONG><a name="[3d]"></a>USBH_MSC_Init</STRONG> (Thumb, 292 bytes, Stack size 40 bytes, usbh_msc.o(i.USBH_MSC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = USBH_MSC_Init &rArr; USBH_MSC_RequestSense &rArr; USBH_MSC_Send_Data &rArr; usbh_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_TestUnitReady
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_SetLastError
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_RequestSense
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_ReadCapacity
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Inquiry
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_GetMaxLUN
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_mem_free
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_mem_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_msc.o(.data)
</UL>
<P><STRONG><a name="[3c]"></a>USBH_MSC_UnConfig</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, usbh_msc.o(i.USBH_MSC_UnConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USBH_MSC_UnConfig &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_SetLastError
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_msc.o(.data)
</UL>
<P><STRONG><a name="[3e]"></a>USBH_MSC_UnInit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, usbh_msc.o(i.USBH_MSC_UnInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBH_MSC_UnInit
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_SetLastError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_msc.o(.data)
</UL>
<P><STRONG><a name="[48]"></a>USBH_OHCI_EP_Add</STRONG> (Thumb, 314 bytes, Stack size 24 bytes, usbh_ohci.o(i.USBH_OHCI_EP_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = USBH_OHCI_EP_Add &rArr; USBH_OHCI_ED_IntFindSlot
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ED_IntFindSlot
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ED_GetLast
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_ohci.o(.data)
</UL>
<P><STRONG><a name="[49]"></a>USBH_OHCI_EP_Config</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, usbh_ohci.o(i.USBH_OHCI_EP_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USBH_OHCI_EP_Config &rArr; USBH_OHCI_ED_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ED_Stop
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Delay_ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_ohci.o(.data)
</UL>
<P><STRONG><a name="[4a]"></a>USBH_OHCI_EP_Remove</STRONG> (Thumb, 402 bytes, Stack size 16 bytes, usbh_ohci.o(i.USBH_OHCI_EP_Remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USBH_OHCI_EP_Remove &rArr; USBH_OHCI_ED_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TD_Clear
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TDURB_FindTD
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TDURB_Clear
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ED_Stop
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ED_Clear
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Delay_ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_ohci.o(.data)
</UL>
<P><STRONG><a name="[46]"></a>USBH_OHCI_Get_Connect</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, usbh_ohci.o(i.USBH_OHCI_Get_Connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBH_OHCI_Get_Connect
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Delay_ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_ohci.o(.data)
</UL>
<P><STRONG><a name="[47]"></a>USBH_OHCI_Get_Speed</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbh_ohci.o(i.USBH_OHCI_Get_Speed))
<BR>[Address Reference Count : 1]<UL><LI> usbh_ohci.o(.data)
</UL>
<P><STRONG><a name="[78]"></a>USBH_OHCI_IRQHandler</STRONG> (Thumb, 412 bytes, Stack size 40 bytes, usbh_ohci.o(i.USBH_OHCI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USBH_OHCI_IRQHandler &rArr; USBH_OHCI_URB_Cancel &rArr; USBH_OHCI_TD_Dequeue &rArr; USBH_OHCI_TD_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TDURB_FindTD
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_URB_Cancel
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IRQHandler
</UL>

<P><STRONG><a name="[43]"></a>USBH_OHCI_Init</STRONG> (Thumb, 428 bytes, Stack size 16 bytes, usbh_ohci.o(i.USBH_OHCI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBH_OHCI_Init &rArr; USBH_OHCI_TD_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TD_Clear
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ED_Clear
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_ohci.o(.data)
</UL>
<P><STRONG><a name="[42]"></a>USBH_OHCI_Pins_Config</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usbh_ohci.o(i.USBH_OHCI_Pins_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBH_OHCI_Pins_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_ohci.o(.data)
</UL>
<P><STRONG><a name="[44]"></a>USBH_OHCI_Port_Power</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, usbh_ohci.o(i.USBH_OHCI_Port_Power))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_OHCI_Port_Power
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_ohci.o(.data)
</UL>
<P><STRONG><a name="[45]"></a>USBH_OHCI_Port_Reset</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, usbh_ohci.o(i.USBH_OHCI_Port_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_OHCI_Port_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Delay_ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_ohci.o(.data)
</UL>
<P><STRONG><a name="[4c]"></a>USBH_OHCI_URB_Cancel</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, usbh_ohci.o(i.USBH_OHCI_URB_Cancel))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USBH_OHCI_URB_Cancel &rArr; USBH_OHCI_TD_Dequeue &rArr; USBH_OHCI_TD_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TD_Dequeue
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TDURB_FindURB
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TDURB_Clear
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ED_Stop
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ED_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_ohci.o(.data)
</UL>
<P><STRONG><a name="[4b]"></a>USBH_OHCI_URB_Submit</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, usbh_ohci.o(i.USBH_OHCI_URB_Submit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USBH_OHCI_URB_Submit &rArr; USBH_OHCI_TD_Enqueue
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TD_Enqueue
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TDURB_GetFree
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_ED_Start
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Delay_ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_ohci.o(.data)
</UL>
<P><STRONG><a name="[68]"></a>USBH_Rece_Data</STRONG> (Thumb, 192 bytes, Stack size 80 bytes, usbh_core.o(i.USBH_Rece_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USBH_Rece_Data &rArr; usbh_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_transfer
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetLastError
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_GetMaxLUN
</UL>

<P><STRONG><a name="[69]"></a>USBH_Send_Data</STRONG> (Thumb, 192 bytes, Stack size 80 bytes, usbh_core.o(i.USBH_Send_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USBH_Send_Data &rArr; usbh_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_transfer
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetLastError
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_GetMaxLUN
</UL>

<P><STRONG><a name="[66]"></a>USBH_Send_Setup</STRONG> (Thumb, 118 bytes, Stack size 64 bytes, usbh_core.o(i.USBH_Send_Setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USBH_Send_Setup &rArr; usbh_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_transfer
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetLastError
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_GetMaxLUN
</UL>

<P><STRONG><a name="[26]"></a>USB_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, usbh_ohci_lpc17xx.o(i.USB_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = USB_IRQHandler &rArr; USBH_OHCI_IRQHandler &rArr; USBH_OHCI_URB_Cancel &rArr; USBH_OHCI_TD_Dequeue &rArr; USBH_OHCI_TD_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>main</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[65]"></a>usbh_mem_alloc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, usbh_core.o(i.usbh_mem_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usbh_mem_alloc &rArr; usbh_mem_alloc_lib
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_mem_alloc_lib
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetLastError
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_TestUnitReady
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_RequestSense
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_ReadCapacity
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Inquiry
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_GetMaxLUN
</UL>

<P><STRONG><a name="[80]"></a>usbh_mem_alloc_lib</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, usbh_mem.o(i.usbh_mem_alloc_lib))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usbh_mem_alloc_lib
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_mem_alloc
</UL>

<P><STRONG><a name="[67]"></a>usbh_mem_free</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usbh_core.o(i.usbh_mem_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usbh_mem_free &rArr; usbh_mem_free_lib
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_mem_free_lib
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetLastError
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_TestUnitReady
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_RequestSense
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_ReadCapacity
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Inquiry
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_GetMaxLUN
</UL>

<P><STRONG><a name="[81]"></a>usbh_mem_free_lib</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, usbh_mem.o(i.usbh_mem_free_lib))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usbh_mem_free_lib
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_mem_free
</UL>

<P><STRONG><a name="[82]"></a>usbh_mem_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usbh_core.o(i.usbh_mem_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = usbh_mem_init &rArr; usbh_mem_init_lib &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_mem_init_lib
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetLastError
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_ohci_hw_init
</UL>

<P><STRONG><a name="[83]"></a>usbh_mem_init_lib</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, usbh_mem.o(i.usbh_mem_init_lib))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = usbh_mem_init_lib &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_mem_init
</UL>

<P><STRONG><a name="[34]"></a>usbh_ohci_hw_delay_ms</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, usbh_ohci_lpc17xx.o(i.usbh_ohci_hw_delay_ms))
<BR>[Address Reference Count : 1]<UL><LI> usbh_ohci_lpc17xx.o(.data)
</UL>
<P><STRONG><a name="[33]"></a>usbh_ohci_hw_get_capabilities</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usbh_ohci_lpc17xx.o(i.usbh_ohci_hw_get_capabilities))
<BR>[Address Reference Count : 1]<UL><LI> usbh_ohci_lpc17xx.o(.data)
</UL>
<P><STRONG><a name="[38]"></a>usbh_ohci_hw_init</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, usbh_ohci_lpc17xx.o(i.usbh_ohci_hw_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = usbh_ohci_hw_init &rArr; usbh_mem_init &rArr; usbh_mem_init_lib &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_mem_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_ohci_lpc17xx.o(.data)
</UL>
<P><STRONG><a name="[3a]"></a>usbh_ohci_hw_irq_en</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, usbh_ohci_lpc17xx.o(i.usbh_ohci_hw_irq_en))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usbh_ohci_hw_irq_en
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_ohci_lpc17xx.o(.data)
</UL>
<P><STRONG><a name="[37]"></a>usbh_ohci_hw_pins_config</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, usbh_ohci_lpc17xx.o(i.usbh_ohci_hw_pins_config))
<BR>[Address Reference Count : 1]<UL><LI> usbh_ohci_lpc17xx.o(.data)
</UL>
<P><STRONG><a name="[39]"></a>usbh_ohci_hw_port_power</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbh_ohci_lpc17xx.o(i.usbh_ohci_hw_port_power))
<BR>[Address Reference Count : 1]<UL><LI> usbh_ohci_lpc17xx.o(.data)
</UL>
<P><STRONG><a name="[36]"></a>usbh_ohci_hw_reg_rd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbh_ohci_lpc17xx.o(i.usbh_ohci_hw_reg_rd))
<BR>[Address Reference Count : 1]<UL><LI> usbh_ohci_lpc17xx.o(.data)
</UL>
<P><STRONG><a name="[35]"></a>usbh_ohci_hw_reg_wr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbh_ohci_lpc17xx.o(i.usbh_ohci_hw_reg_wr))
<BR>[Address Reference Count : 1]<UL><LI> usbh_ohci_lpc17xx.o(.data)
</UL>
<P><STRONG><a name="[70]"></a>usbh_transfer</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, usbh_core.o(i.usbh_transfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = usbh_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetLastError
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Send_Data
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Rece_Data
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Send_Setup
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Send_Data
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Rece_Data
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[7f]"></a>USBH_SetLastError</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usbh_core.o(i.USBH_SetLastError))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_transfer
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_mem_free
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_mem_alloc
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Send_Setup
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Send_Data
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Rece_Data
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_mem_init
</UL>

<P><STRONG><a name="[3f]"></a>USBH_MSC_GetLastError</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, usbh_msc.o(i.USBH_MSC_GetLastError))
<BR>[Address Reference Count : 1]<UL><LI> usbh_msc.o(.data)
</UL>
<P><STRONG><a name="[64]"></a>USBH_MSC_GetMaxLUN</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, usbh_msc.o(i.USBH_MSC_GetMaxLUN))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = USBH_MSC_GetMaxLUN &rArr; USBH_Send_Data &rArr; usbh_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_mem_free
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_mem_alloc
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Send_Setup
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Send_Data
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Rece_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Init
</UL>

<P><STRONG><a name="[6a]"></a>USBH_MSC_Inquiry</STRONG> (Thumb, 280 bytes, Stack size 40 bytes, usbh_msc.o(i.USBH_MSC_Inquiry))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = USBH_MSC_Inquiry &rArr; USBH_MSC_Send_Data &rArr; usbh_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_SetLastError
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Send_Data
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Rece_Data
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_mem_free
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_mem_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Init
</UL>

<P><STRONG><a name="[6d]"></a>USBH_MSC_ReadCapacity</STRONG> (Thumb, 290 bytes, Stack size 40 bytes, usbh_msc.o(i.USBH_MSC_ReadCapacity))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = USBH_MSC_ReadCapacity &rArr; USBH_MSC_Send_Data &rArr; usbh_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_SetLastError
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Send_Data
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Rece_Data
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_mem_free
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_mem_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Init
</UL>

<P><STRONG><a name="[6f]"></a>USBH_MSC_Rece_Data</STRONG> (Thumb, 216 bytes, Stack size 72 bytes, usbh_msc.o(i.USBH_MSC_Rece_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USBH_MSC_Rece_Data &rArr; usbh_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_SetLastError
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_transfer
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_TestUnitReady
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_RequestSense
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_ReadCapacity
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Inquiry
</UL>

<P><STRONG><a name="[6c]"></a>USBH_MSC_RequestSense</STRONG> (Thumb, 280 bytes, Stack size 40 bytes, usbh_msc.o(i.USBH_MSC_RequestSense))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = USBH_MSC_RequestSense &rArr; USBH_MSC_Send_Data &rArr; usbh_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_SetLastError
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Send_Data
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Rece_Data
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_mem_free
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_mem_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Init
</UL>

<P><STRONG><a name="[6e]"></a>USBH_MSC_Send_Data</STRONG> (Thumb, 360 bytes, Stack size 160 bytes, usbh_msc.o(i.USBH_MSC_Send_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = USBH_MSC_Send_Data &rArr; usbh_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_SetLastError
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_transfer
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_TestUnitReady
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_RequestSense
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_ReadCapacity
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Inquiry
</UL>

<P><STRONG><a name="[63]"></a>USBH_MSC_SetLastError</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usbh_msc.o(i.USBH_MSC_SetLastError))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_UnInit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_UnConfig
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Config
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_TestUnitReady
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Send_Data
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_RequestSense
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Rece_Data
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_ReadCapacity
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Inquiry
</UL>

<P><STRONG><a name="[6b]"></a>USBH_MSC_TestUnitReady</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, usbh_msc.o(i.USBH_MSC_TestUnitReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = USBH_MSC_TestUnitReady &rArr; USBH_MSC_Send_Data &rArr; usbh_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_SetLastError
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Send_Data
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Rece_Data
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_mem_free
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbh_mem_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Init
</UL>

<P><STRONG><a name="[77]"></a>USBH_OHCI_ED_Clear</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usbh_ohci.o(i.USBH_OHCI_ED_Clear))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP_Remove
</UL>

<P><STRONG><a name="[71]"></a>USBH_OHCI_ED_GetLast</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usbh_ohci.o(i.USBH_OHCI_ED_GetLast))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP_Add
</UL>

<P><STRONG><a name="[72]"></a>USBH_OHCI_ED_IntFindSlot</STRONG> (Thumb, 136 bytes, Stack size 36 bytes, usbh_ohci.o(i.USBH_OHCI_ED_IntFindSlot))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USBH_OHCI_ED_IntFindSlot
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP_Add
</UL>

<P><STRONG><a name="[7c]"></a>USBH_OHCI_ED_Start</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, usbh_ohci.o(i.USBH_OHCI_ED_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBH_OHCI_ED_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_URB_Submit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_URB_Cancel
</UL>

<P><STRONG><a name="[73]"></a>USBH_OHCI_ED_Stop</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, usbh_ohci.o(i.USBH_OHCI_ED_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_OHCI_ED_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_URB_Cancel
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP_Remove
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP_Config
</UL>

<P><STRONG><a name="[75]"></a>USBH_OHCI_TDURB_Clear</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usbh_ohci.o(i.USBH_OHCI_TDURB_Clear))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_URB_Cancel
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP_Remove
</UL>

<P><STRONG><a name="[74]"></a>USBH_OHCI_TDURB_FindTD</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, usbh_ohci.o(i.USBH_OHCI_TDURB_FindTD))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBH_OHCI_TDURB_FindTD
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_IRQHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP_Remove
</UL>

<P><STRONG><a name="[7b]"></a>USBH_OHCI_TDURB_FindURB</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, usbh_ohci.o(i.USBH_OHCI_TDURB_FindURB))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBH_OHCI_TDURB_FindURB
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_URB_Cancel
</UL>

<P><STRONG><a name="[7e]"></a>USBH_OHCI_TDURB_GetFree</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, usbh_ohci.o(i.USBH_OHCI_TDURB_GetFree))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_URB_Submit
</UL>

<P><STRONG><a name="[76]"></a>USBH_OHCI_TD_Clear</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, usbh_ohci.o(i.USBH_OHCI_TD_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBH_OHCI_TD_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TD_Dequeue
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_EP_Remove
</UL>

<P><STRONG><a name="[7a]"></a>USBH_OHCI_TD_Dequeue</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, usbh_ohci.o(i.USBH_OHCI_TD_Dequeue))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBH_OHCI_TD_Dequeue &rArr; USBH_OHCI_TD_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_TD_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_URB_Cancel
</UL>

<P><STRONG><a name="[7d]"></a>USBH_OHCI_TD_Enqueue</STRONG> (Thumb, 178 bytes, Stack size 20 bytes, usbh_ohci.o(i.USBH_OHCI_TD_Enqueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USBH_OHCI_TD_Enqueue
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_URB_Submit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
