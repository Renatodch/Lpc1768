; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\lpc17xx_pwm.o --asm_dir=.\Flash\ --list_dir=.\Flash\ --depend=.\flash\lpc17xx_pwm.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\Lib\Drivers\include -I.\Inc -I.\Lib\Usb_Drivers\Inc -I.\Lib\CLib__1_0_0_4\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\NXP\LPC17xx -D__UVISION_VERSION=525 --omf_browse=.\flash\lpc17xx_pwm.crf Lib\Drivers\source\lpc17xx_pwm.c]
                          THUMB

                          AREA ||i.PWM_ChannelCmd||, CODE, READONLY, ALIGN=2

                  PWM_ChannelCmd PROC
;;;562     *********************************************************************/
;;;563    void PWM_ChannelCmd(LPC_PWM_TypeDef *PWMx, uint8_t PWMChannel, FunctionalState NewState)
000000  b570              PUSH     {r4-r6,lr}
;;;564    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
000006  4616              MOV      r6,r2
;;;565    	CHECK_PARAM(PARAM_PWMx(PWMx));
000008  481a              LDR      r0,|L1.116|
00000a  4285              CMP      r5,r0
00000c  d100              BNE      |L1.16|
00000e  e004              B        |L1.26|
                  |L1.16|
000010  f2402135          MOV      r1,#0x235
000014  a018              ADR      r0,|L1.120|
000016  f7fffffe          BL       check_failed
                  |L1.26|
;;;566    	CHECK_PARAM(PARAM_PWM1_CHANNEL(PWMChannel));
00001a  2c01              CMP      r4,#1
00001c  db02              BLT      |L1.36|
00001e  2c06              CMP      r4,#6
000020  dc00              BGT      |L1.36|
000022  e004              B        |L1.46|
                  |L1.36|
000024  f2402136          MOV      r1,#0x236
000028  a013              ADR      r0,|L1.120|
00002a  f7fffffe          BL       check_failed
                  |L1.46|
;;;567    
;;;568    	if (NewState == ENABLE)
00002e  2e01              CMP      r6,#1
000030  d10e              BNE      |L1.80|
;;;569    	{
;;;570    		PWMx->PCR |= PWM_PCR_PWMENAn(PWMChannel);
000032  6ce9              LDR      r1,[r5,#0x4c]
000034  f0040007          AND      r0,r4,#7
000038  2801              CMP      r0,#1
00003a  da01              BGE      |L1.64|
00003c  2000              MOVS     r0,#0
00003e  e004              B        |L1.74|
                  |L1.64|
000040  f1040008          ADD      r0,r4,#8
000044  2201              MOVS     r2,#1
000046  fa02f000          LSL      r0,r2,r0
                  |L1.74|
00004a  4301              ORRS     r1,r1,r0
00004c  64e9              STR      r1,[r5,#0x4c]
00004e  e010              B        |L1.114|
                  |L1.80|
;;;571    	}
;;;572    	else
;;;573    	{
;;;574    		PWMx->PCR &= (~PWM_PCR_PWMENAn(PWMChannel)) & PWM_PCR_BITMASK;
000050  6ce9              LDR      r1,[r5,#0x4c]
000052  f0040007          AND      r0,r4,#7
000056  2801              CMP      r0,#1
000058  da01              BGE      |L1.94|
00005a  2000              MOVS     r0,#0
00005c  e004              B        |L1.104|
                  |L1.94|
00005e  f1040008          ADD      r0,r4,#8
000062  2201              MOVS     r2,#1
000064  fa02f000          LSL      r0,r2,r0
                  |L1.104|
000068  f647627c          MOV      r2,#0x7e7c
00006c  4382              BICS     r2,r2,r0
00006e  4011              ANDS     r1,r1,r2
000070  64e9              STR      r1,[r5,#0x4c]
                  |L1.114|
;;;575    	}
;;;576    }
000072  bd70              POP      {r4-r6,pc}
;;;577    
                          ENDP

                  |L1.116|
                          DCD      0x40018000
                  |L1.120|
000078  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_pwm.c",0
00007c  44726976
000080  6572735c
000084  736f7572
000088  63655c6c
00008c  70633137
000090  78785f70
000094  776d2e63
000098  00      
000099  00                DCB      0
00009a  00                DCB      0
00009b  00                DCB      0

                          AREA ||i.PWM_ChannelConfig||, CODE, READONLY, ALIGN=2

                  PWM_ChannelConfig PROC
;;;533     *********************************************************************/
;;;534    void PWM_ChannelConfig(LPC_PWM_TypeDef *PWMx, uint8_t PWMChannel, uint8_t ModeOption)
000000  b570              PUSH     {r4-r6,lr}
;;;535    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
000006  4616              MOV      r6,r2
;;;536    	CHECK_PARAM(PARAM_PWMx(PWMx));
000008  481b              LDR      r0,|L2.120|
00000a  4285              CMP      r5,r0
00000c  d100              BNE      |L2.16|
00000e  e004              B        |L2.26|
                  |L2.16|
000010  f44f7106          MOV      r1,#0x218
000014  a019              ADR      r0,|L2.124|
000016  f7fffffe          BL       check_failed
                  |L2.26|
;;;537    	CHECK_PARAM(PARAM_PWM1_EDGE_MODE_CHANNEL(PWMChannel));
00001a  2c02              CMP      r4,#2
00001c  db02              BLT      |L2.36|
00001e  2c06              CMP      r4,#6
000020  dc00              BGT      |L2.36|
000022  e004              B        |L2.46|
                  |L2.36|
000024  f2402119          MOV      r1,#0x219
000028  a014              ADR      r0,|L2.124|
00002a  f7fffffe          BL       check_failed
                  |L2.46|
;;;538    	CHECK_PARAM(PARAM_PWM_CHANNEL_EDGE(ModeOption));
00002e  b10e              CBZ      r6,|L2.52|
000030  2e01              CMP      r6,#1
000032  d100              BNE      |L2.54|
                  |L2.52|
000034  e004              B        |L2.64|
                  |L2.54|
000036  f240211a          MOV      r1,#0x21a
00003a  a010              ADR      r0,|L2.124|
00003c  f7fffffe          BL       check_failed
                  |L2.64|
;;;539    
;;;540    	// Single edge mode
;;;541    	if (ModeOption == PWM_CHANNEL_SINGLE_EDGE)
000040  b976              CBNZ     r6,|L2.96|
;;;542    	{
;;;543    		PWMx->PCR &= (~PWM_PCR_PWMSELn(PWMChannel)) & PWM_PCR_BITMASK;
000042  6ce9              LDR      r1,[r5,#0x4c]
000044  f0040007          AND      r0,r4,#7
000048  2802              CMP      r0,#2
00004a  da01              BGE      |L2.80|
00004c  2000              MOVS     r0,#0
00004e  e001              B        |L2.84|
                  |L2.80|
000050  2001              MOVS     r0,#1
000052  40a0              LSLS     r0,r0,r4
                  |L2.84|
000054  f647627c          MOV      r2,#0x7e7c
000058  4382              BICS     r2,r2,r0
00005a  4011              ANDS     r1,r1,r2
00005c  64e9              STR      r1,[r5,#0x4c]
00005e  e00a              B        |L2.118|
                  |L2.96|
;;;544    	}
;;;545    	// Double edge mode
;;;546    	else if (PWM_CHANNEL_DUAL_EDGE)
;;;547    	{
;;;548    		PWMx->PCR |= PWM_PCR_PWMSELn(PWMChannel);
000060  6ce9              LDR      r1,[r5,#0x4c]
000062  f0040007          AND      r0,r4,#7
000066  2802              CMP      r0,#2
000068  da01              BGE      |L2.110|
00006a  2000              MOVS     r0,#0
00006c  e001              B        |L2.114|
                  |L2.110|
00006e  2001              MOVS     r0,#1
000070  40a0              LSLS     r0,r0,r4
                  |L2.114|
000072  4301              ORRS     r1,r1,r0
000074  64e9              STR      r1,[r5,#0x4c]
                  |L2.118|
;;;549    	}
;;;550    }
000076  bd70              POP      {r4-r6,pc}
;;;551    
                          ENDP

                  |L2.120|
                          DCD      0x40018000
                  |L2.124|
00007c  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_pwm.c",0
000080  44726976
000084  6572735c
000088  736f7572
00008c  63655c6c
000090  70633137
000094  78785f70
000098  776d2e63
00009c  00      
00009d  00                DCB      0
00009e  00                DCB      0
00009f  00                DCB      0

                          AREA ||i.PWM_ClearIntPending||, CODE, READONLY, ALIGN=2

                  PWM_ClearIntPending PROC
;;;100     **********************************************************************/
;;;101    void PWM_ClearIntPending(LPC_PWM_TypeDef *PWMx, uint32_t IntFlag)
000000  b570              PUSH     {r4-r6,lr}
;;;102    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;103    	CHECK_PARAM(PARAM_PWMx(PWMx));
000006  4812              LDR      r0,|L3.80|
000008  4285              CMP      r5,r0
00000a  d100              BNE      |L3.14|
00000c  e003              B        |L3.22|
                  |L3.14|
00000e  2167              MOVS     r1,#0x67
000010  a010              ADR      r0,|L3.84|
000012  f7fffffe          BL       check_failed
                  |L3.22|
;;;104    	CHECK_PARAM(PARAM_PWM_INTSTAT(IntFlag));
000016  2c01              CMP      r4,#1
000018  d012              BEQ      |L3.64|
00001a  2c02              CMP      r4,#2
00001c  d010              BEQ      |L3.64|
00001e  2c04              CMP      r4,#4
000020  d00e              BEQ      |L3.64|
000022  2c08              CMP      r4,#8
000024  d00c              BEQ      |L3.64|
000026  f5b47f80          CMP      r4,#0x100
00002a  d009              BEQ      |L3.64|
00002c  f5b46f80          CMP      r4,#0x400
000030  d006              BEQ      |L3.64|
000032  f5b47f00          CMP      r4,#0x200
000036  d003              BEQ      |L3.64|
000038  2c10              CMP      r4,#0x10
00003a  d001              BEQ      |L3.64|
00003c  2c20              CMP      r4,#0x20
00003e  d100              BNE      |L3.66|
                  |L3.64|
000040  e003              B        |L3.74|
                  |L3.66|
000042  2168              MOVS     r1,#0x68
000044  a003              ADR      r0,|L3.84|
000046  f7fffffe          BL       check_failed
                  |L3.74|
;;;105    	PWMx->IR = IntFlag;
00004a  602c              STR      r4,[r5,#0]
;;;106    }
00004c  bd70              POP      {r4-r6,pc}
;;;107    
                          ENDP

00004e  0000              DCW      0x0000
                  |L3.80|
                          DCD      0x40018000
                  |L3.84|
000054  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_pwm.c",0
000058  44726976
00005c  6572735c
000060  736f7572
000064  63655c6c
000068  70633137
00006c  78785f70
000070  776d2e63
000074  00      
000075  00                DCB      0
000076  00                DCB      0
000077  00                DCB      0

                          AREA ||i.PWM_Cmd||, CODE, READONLY, ALIGN=2

                  PWM_Cmd PROC
;;;241     **********************************************************************/
;;;242    void PWM_Cmd(LPC_PWM_TypeDef *PWMx, FunctionalState NewState)
000000  b570              PUSH     {r4-r6,lr}
;;;243    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;244    	CHECK_PARAM(PARAM_PWMx(PWMx));
000006  480e              LDR      r0,|L4.64|
000008  4284              CMP      r4,r0
00000a  d100              BNE      |L4.14|
00000c  e003              B        |L4.22|
                  |L4.14|
00000e  21f4              MOVS     r1,#0xf4
000010  a00c              ADR      r0,|L4.68|
000012  f7fffffe          BL       check_failed
                  |L4.22|
;;;245    	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
000016  b10d              CBZ      r5,|L4.28|
000018  2d01              CMP      r5,#1
00001a  d100              BNE      |L4.30|
                  |L4.28|
00001c  e003              B        |L4.38|
                  |L4.30|
00001e  21f5              MOVS     r1,#0xf5
000020  a008              ADR      r0,|L4.68|
000022  f7fffffe          BL       check_failed
                  |L4.38|
;;;246    
;;;247    	if (NewState == ENABLE)
000026  2d01              CMP      r5,#1
000028  d104              BNE      |L4.52|
;;;248    	{
;;;249    		PWMx->TCR	|=  PWM_TCR_PWM_ENABLE;
00002a  6860              LDR      r0,[r4,#4]
00002c  f0400008          ORR      r0,r0,#8
000030  6060              STR      r0,[r4,#4]
000032  e003              B        |L4.60|
                  |L4.52|
;;;250    	}
;;;251    	else
;;;252    	{
;;;253    		PWMx->TCR &= (~PWM_TCR_PWM_ENABLE) & PWM_TCR_BITMASK;
000034  6860              LDR      r0,[r4,#4]
000036  f0000003          AND      r0,r0,#3
00003a  6060              STR      r0,[r4,#4]
                  |L4.60|
;;;254    	}
;;;255    }
00003c  bd70              POP      {r4-r6,pc}
;;;256    
                          ENDP

00003e  0000              DCW      0x0000
                  |L4.64|
                          DCD      0x40018000
                  |L4.68|
000044  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_pwm.c",0
000048  44726976
00004c  6572735c
000050  736f7572
000054  63655c6c
000058  70633137
00005c  78785f70
000060  776d2e63
000064  00      
000065  00                DCB      0
000066  00                DCB      0
000067  00                DCB      0

                          AREA ||i.PWM_ConfigCapture||, CODE, READONLY, ALIGN=2

                  PWM_ConfigCapture PROC
;;;352     **********************************************************************/
;;;353    void PWM_ConfigCapture(LPC_PWM_TypeDef *PWMx, PWM_CAPTURECFG_Type *PWM_CaptureConfigStruct)
000000  b570              PUSH     {r4-r6,lr}
;;;354    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;355    	CHECK_PARAM(PARAM_PWMx(PWMx));
000006  4845              LDR      r0,|L5.284|
000008  4285              CMP      r5,r0
00000a  d100              BNE      |L5.14|
00000c  e004              B        |L5.24|
                  |L5.14|
00000e  f2401163          MOV      r1,#0x163
000012  a043              ADR      r0,|L5.288|
000014  f7fffffe          BL       check_failed
                  |L5.24|
;;;356    	CHECK_PARAM(PARAM_PWM1_CAPTURE_CHANNEL(PWM_CaptureConfigStruct->CaptureChannel));
000018  7820              LDRB     r0,[r4,#0]
00001a  b110              CBZ      r0,|L5.34|
00001c  7820              LDRB     r0,[r4,#0]
00001e  2801              CMP      r0,#1
000020  d100              BNE      |L5.36|
                  |L5.34|
000022  e004              B        |L5.46|
                  |L5.36|
000024  f44f71b2          MOV      r1,#0x164
000028  a03d              ADR      r0,|L5.288|
00002a  f7fffffe          BL       check_failed
                  |L5.46|
;;;357    	CHECK_PARAM(PARAM_FUNCTIONALSTATE(PWM_CaptureConfigStruct->FallingEdge));
00002e  78a0              LDRB     r0,[r4,#2]
000030  b110              CBZ      r0,|L5.56|
000032  78a0              LDRB     r0,[r4,#2]
000034  2801              CMP      r0,#1
000036  d100              BNE      |L5.58|
                  |L5.56|
000038  e004              B        |L5.68|
                  |L5.58|
00003a  f2401165          MOV      r1,#0x165
00003e  a038              ADR      r0,|L5.288|
000040  f7fffffe          BL       check_failed
                  |L5.68|
;;;358    	CHECK_PARAM(PARAM_FUNCTIONALSTATE(PWM_CaptureConfigStruct->IntOnCaption));
000044  78e0              LDRB     r0,[r4,#3]
000046  b110              CBZ      r0,|L5.78|
000048  78e0              LDRB     r0,[r4,#3]
00004a  2801              CMP      r0,#1
00004c  d100              BNE      |L5.80|
                  |L5.78|
00004e  e004              B        |L5.90|
                  |L5.80|
000050  f44f71b3          MOV      r1,#0x166
000054  a032              ADR      r0,|L5.288|
000056  f7fffffe          BL       check_failed
                  |L5.90|
;;;359    	CHECK_PARAM(PARAM_FUNCTIONALSTATE(PWM_CaptureConfigStruct->RisingEdge));
00005a  7860              LDRB     r0,[r4,#1]
00005c  b110              CBZ      r0,|L5.100|
00005e  7860              LDRB     r0,[r4,#1]
000060  2801              CMP      r0,#1
000062  d100              BNE      |L5.102|
                  |L5.100|
000064  e004              B        |L5.112|
                  |L5.102|
000066  f2401167          MOV      r1,#0x167
00006a  a02d              ADR      r0,|L5.288|
00006c  f7fffffe          BL       check_failed
                  |L5.112|
;;;360    
;;;361    	if (PWM_CaptureConfigStruct->RisingEdge == ENABLE)
000070  7860              LDRB     r0,[r4,#1]
000072  2801              CMP      r0,#1
000074  d10b              BNE      |L5.142|
;;;362    	{
;;;363    		PWMx->CCR |= PWM_CCR_CAP_RISING(PWM_CaptureConfigStruct->CaptureChannel);
000076  7820              LDRB     r0,[r4,#0]
000078  f0000102          AND      r1,r0,#2
00007c  f361005f          BFI      r0,r1,#1,#31
000080  2101              MOVS     r1,#1
000082  fa01f000          LSL      r0,r1,r0
000086  6aa9              LDR      r1,[r5,#0x28]
000088  4308              ORRS     r0,r0,r1
00008a  62a8              STR      r0,[r5,#0x28]
00008c  e00b              B        |L5.166|
                  |L5.142|
;;;364    	}
;;;365    	else
;;;366    	{
;;;367    		PWMx->CCR &= (~PWM_CCR_CAP_RISING(PWM_CaptureConfigStruct->CaptureChannel)) \
00008e  7820              LDRB     r0,[r4,#0]
000090  f0000102          AND      r1,r0,#2
000094  f361005f          BFI      r0,r1,#1,#31
000098  2101              MOVS     r1,#1
00009a  4081              LSLS     r1,r1,r0
00009c  203f              MOVS     r0,#0x3f
00009e  4388              BICS     r0,r0,r1
0000a0  6aa9              LDR      r1,[r5,#0x28]
0000a2  4008              ANDS     r0,r0,r1
0000a4  62a8              STR      r0,[r5,#0x28]
                  |L5.166|
;;;368    					& PWM_CCR_BITMASK;
;;;369    	}
;;;370    
;;;371    	if (PWM_CaptureConfigStruct->FallingEdge == ENABLE)
0000a6  78a0              LDRB     r0,[r4,#2]
0000a8  2801              CMP      r0,#1
0000aa  d10c              BNE      |L5.198|
;;;372    	{
;;;373    		PWMx->CCR |= PWM_CCR_CAP_FALLING(PWM_CaptureConfigStruct->CaptureChannel);
0000ac  7820              LDRB     r0,[r4,#0]
0000ae  f0000102          AND      r1,r0,#2
0000b2  f361005f          BFI      r0,r1,#1,#31
0000b6  1c40              ADDS     r0,r0,#1
0000b8  2101              MOVS     r1,#1
0000ba  fa01f000          LSL      r0,r1,r0
0000be  6aa9              LDR      r1,[r5,#0x28]
0000c0  4308              ORRS     r0,r0,r1
0000c2  62a8              STR      r0,[r5,#0x28]
0000c4  e00c              B        |L5.224|
                  |L5.198|
;;;374    	}
;;;375    	else
;;;376    	{
;;;377    		PWMx->CCR &= (~PWM_CCR_CAP_FALLING(PWM_CaptureConfigStruct->CaptureChannel)) \
0000c6  7820              LDRB     r0,[r4,#0]
0000c8  f0000102          AND      r1,r0,#2
0000cc  f361005f          BFI      r0,r1,#1,#31
0000d0  1c40              ADDS     r0,r0,#1
0000d2  2101              MOVS     r1,#1
0000d4  4081              LSLS     r1,r1,r0
0000d6  203f              MOVS     r0,#0x3f
0000d8  4388              BICS     r0,r0,r1
0000da  6aa9              LDR      r1,[r5,#0x28]
0000dc  4008              ANDS     r0,r0,r1
0000de  62a8              STR      r0,[r5,#0x28]
                  |L5.224|
;;;378    					& PWM_CCR_BITMASK;
;;;379    	}
;;;380    
;;;381    	if (PWM_CaptureConfigStruct->IntOnCaption == ENABLE)
0000e0  78e0              LDRB     r0,[r4,#3]
0000e2  2801              CMP      r0,#1
0000e4  d10c              BNE      |L5.256|
;;;382    	{
;;;383    		PWMx->CCR |= PWM_CCR_INT_ON_CAP(PWM_CaptureConfigStruct->CaptureChannel);
0000e6  7820              LDRB     r0,[r4,#0]
0000e8  f0000102          AND      r1,r0,#2
0000ec  f361005f          BFI      r0,r1,#1,#31
0000f0  1c80              ADDS     r0,r0,#2
0000f2  2101              MOVS     r1,#1
0000f4  fa01f000          LSL      r0,r1,r0
0000f8  6aa9              LDR      r1,[r5,#0x28]
0000fa  4308              ORRS     r0,r0,r1
0000fc  62a8              STR      r0,[r5,#0x28]
0000fe  e00c              B        |L5.282|
                  |L5.256|
;;;384    	}
;;;385    	else
;;;386    	{
;;;387    		PWMx->CCR &= (~PWM_CCR_INT_ON_CAP(PWM_CaptureConfigStruct->CaptureChannel)) \
000100  7820              LDRB     r0,[r4,#0]
000102  f0000102          AND      r1,r0,#2
000106  f361005f          BFI      r0,r1,#1,#31
00010a  1c80              ADDS     r0,r0,#2
00010c  2101              MOVS     r1,#1
00010e  4081              LSLS     r1,r1,r0
000110  203f              MOVS     r0,#0x3f
000112  4388              BICS     r0,r0,r1
000114  6aa9              LDR      r1,[r5,#0x28]
000116  4008              ANDS     r0,r0,r1
000118  62a8              STR      r0,[r5,#0x28]
                  |L5.282|
;;;388    					& PWM_CCR_BITMASK;
;;;389    	}
;;;390    }
00011a  bd70              POP      {r4-r6,pc}
;;;391    
                          ENDP

                  |L5.284|
                          DCD      0x40018000
                  |L5.288|
000120  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_pwm.c",0
000124  44726976
000128  6572735c
00012c  736f7572
000130  63655c6c
000134  70633137
000138  78785f70
00013c  776d2e63
000140  00      
000141  00                DCB      0
000142  00                DCB      0
000143  00                DCB      0

                          AREA ||i.PWM_ConfigMatch||, CODE, READONLY, ALIGN=2

                  PWM_ConfigMatch PROC
;;;301     **********************************************************************/
;;;302    void PWM_ConfigMatch(LPC_PWM_TypeDef *PWMx, PWM_MATCHCFG_Type *PWM_MatchConfigStruct)
000000  b570              PUSH     {r4-r6,lr}
;;;303    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;304    	CHECK_PARAM(PARAM_PWMx(PWMx));
000006  4844              LDR      r0,|L6.280|
000008  4285              CMP      r5,r0
00000a  d100              BNE      |L6.14|
00000c  e004              B        |L6.24|
                  |L6.14|
00000e  f44f7198          MOV      r1,#0x130
000012  a042              ADR      r0,|L6.284|
000014  f7fffffe          BL       check_failed
                  |L6.24|
;;;305    	CHECK_PARAM(PARAM_PWM1_MATCH_CHANNEL(PWM_MatchConfigStruct->MatchChannel));
000018  7820              LDRB     r0,[r4,#0]
00001a  2806              CMP      r0,#6
00001c  dc00              BGT      |L6.32|
00001e  e004              B        |L6.42|
                  |L6.32|
000020  f2401131          MOV      r1,#0x131
000024  a03d              ADR      r0,|L6.284|
000026  f7fffffe          BL       check_failed
                  |L6.42|
;;;306    	CHECK_PARAM(PARAM_FUNCTIONALSTATE(PWM_MatchConfigStruct->IntOnMatch));
00002a  7860              LDRB     r0,[r4,#1]
00002c  b110              CBZ      r0,|L6.52|
00002e  7860              LDRB     r0,[r4,#1]
000030  2801              CMP      r0,#1
000032  d100              BNE      |L6.54|
                  |L6.52|
000034  e004              B        |L6.64|
                  |L6.54|
000036  f44f7199          MOV      r1,#0x132
00003a  a038              ADR      r0,|L6.284|
00003c  f7fffffe          BL       check_failed
                  |L6.64|
;;;307    	CHECK_PARAM(PARAM_FUNCTIONALSTATE(PWM_MatchConfigStruct->ResetOnMatch));
000040  78e0              LDRB     r0,[r4,#3]
000042  b110              CBZ      r0,|L6.74|
000044  78e0              LDRB     r0,[r4,#3]
000046  2801              CMP      r0,#1
000048  d100              BNE      |L6.76|
                  |L6.74|
00004a  e004              B        |L6.86|
                  |L6.76|
00004c  f2401133          MOV      r1,#0x133
000050  a032              ADR      r0,|L6.284|
000052  f7fffffe          BL       check_failed
                  |L6.86|
;;;308    	CHECK_PARAM(PARAM_FUNCTIONALSTATE(PWM_MatchConfigStruct->StopOnMatch));
000056  78a0              LDRB     r0,[r4,#2]
000058  b110              CBZ      r0,|L6.96|
00005a  78a0              LDRB     r0,[r4,#2]
00005c  2801              CMP      r0,#1
00005e  d100              BNE      |L6.98|
                  |L6.96|
000060  e004              B        |L6.108|
                  |L6.98|
000062  f44f719a          MOV      r1,#0x134
000066  a02d              ADR      r0,|L6.284|
000068  f7fffffe          BL       check_failed
                  |L6.108|
;;;309    
;;;310    	//interrupt on MRn
;;;311    	if (PWM_MatchConfigStruct->IntOnMatch == ENABLE)
00006c  7860              LDRB     r0,[r4,#1]
00006e  2801              CMP      r0,#1
000070  d10a              BNE      |L6.136|
;;;312    	{
;;;313    		PWMx->MCR |= PWM_MCR_INT_ON_MATCH(PWM_MatchConfigStruct->MatchChannel);
000072  7820              LDRB     r0,[r4,#0]
000074  f0000007          AND      r0,r0,#7
000078  eb000140          ADD      r1,r0,r0,LSL #1
00007c  2001              MOVS     r0,#1
00007e  4088              LSLS     r0,r0,r1
000080  6969              LDR      r1,[r5,#0x14]
000082  4308              ORRS     r0,r0,r1
000084  6168              STR      r0,[r5,#0x14]
000086  e00c              B        |L6.162|
                  |L6.136|
;;;314    	}
;;;315    	else
;;;316    	{
;;;317    		PWMx->MCR &= (~PWM_MCR_INT_ON_MATCH(PWM_MatchConfigStruct->MatchChannel)) \
000088  7820              LDRB     r0,[r4,#0]
00008a  f0000007          AND      r0,r0,#7
00008e  eb000140          ADD      r1,r0,r0,LSL #1
000092  2001              MOVS     r0,#1
000094  4088              LSLS     r0,r0,r1
000096  492a              LDR      r1,|L6.320|
000098  ea210000          BIC      r0,r1,r0
00009c  6969              LDR      r1,[r5,#0x14]
00009e  4008              ANDS     r0,r0,r1
0000a0  6168              STR      r0,[r5,#0x14]
                  |L6.162|
;;;318    					& PWM_MCR_BITMASK;
;;;319    	}
;;;320    
;;;321    	//reset on MRn
;;;322    	if (PWM_MatchConfigStruct->ResetOnMatch == ENABLE)
0000a2  78e0              LDRB     r0,[r4,#3]
0000a4  2801              CMP      r0,#1
0000a6  d10c              BNE      |L6.194|
;;;323    	{
;;;324    		PWMx->MCR |= PWM_MCR_RESET_ON_MATCH(PWM_MatchConfigStruct->MatchChannel);
0000a8  7820              LDRB     r0,[r4,#0]
0000aa  f0000007          AND      r0,r0,#7
0000ae  eb000040          ADD      r0,r0,r0,LSL #1
0000b2  1c40              ADDS     r0,r0,#1
0000b4  2101              MOVS     r1,#1
0000b6  fa01f000          LSL      r0,r1,r0
0000ba  6969              LDR      r1,[r5,#0x14]
0000bc  4308              ORRS     r0,r0,r1
0000be  6168              STR      r0,[r5,#0x14]
0000c0  e00c              B        |L6.220|
                  |L6.194|
;;;325    	}
;;;326    	else
;;;327    	{
;;;328    		PWMx->MCR &= (~PWM_MCR_RESET_ON_MATCH(PWM_MatchConfigStruct->MatchChannel)) \
0000c2  7820              LDRB     r0,[r4,#0]
0000c4  f0000007          AND      r0,r0,#7
0000c8  eb000040          ADD      r0,r0,r0,LSL #1
0000cc  1c40              ADDS     r0,r0,#1
0000ce  2101              MOVS     r1,#1
0000d0  4081              LSLS     r1,r1,r0
0000d2  481b              LDR      r0,|L6.320|
0000d4  4388              BICS     r0,r0,r1
0000d6  6969              LDR      r1,[r5,#0x14]
0000d8  4008              ANDS     r0,r0,r1
0000da  6168              STR      r0,[r5,#0x14]
                  |L6.220|
;;;329    					& PWM_MCR_BITMASK;
;;;330    	}
;;;331    
;;;332    	//stop on MRn
;;;333    	if (PWM_MatchConfigStruct->StopOnMatch == ENABLE)
0000dc  78a0              LDRB     r0,[r4,#2]
0000de  2801              CMP      r0,#1
0000e0  d10c              BNE      |L6.252|
;;;334    	{
;;;335    		PWMx->MCR |= PWM_MCR_STOP_ON_MATCH(PWM_MatchConfigStruct->MatchChannel);
0000e2  7820              LDRB     r0,[r4,#0]
0000e4  f0000007          AND      r0,r0,#7
0000e8  eb000040          ADD      r0,r0,r0,LSL #1
0000ec  1c80              ADDS     r0,r0,#2
0000ee  2101              MOVS     r1,#1
0000f0  fa01f000          LSL      r0,r1,r0
0000f4  6969              LDR      r1,[r5,#0x14]
0000f6  4308              ORRS     r0,r0,r1
0000f8  6168              STR      r0,[r5,#0x14]
0000fa  e00c              B        |L6.278|
                  |L6.252|
;;;336    	}
;;;337    	else
;;;338    	{
;;;339    		PWMx->MCR &= (~PWM_MCR_STOP_ON_MATCH(PWM_MatchConfigStruct->MatchChannel)) \
0000fc  7820              LDRB     r0,[r4,#0]
0000fe  f0000007          AND      r0,r0,#7
000102  eb000040          ADD      r0,r0,r0,LSL #1
000106  1c80              ADDS     r0,r0,#2
000108  2101              MOVS     r1,#1
00010a  4081              LSLS     r1,r1,r0
00010c  480c              LDR      r0,|L6.320|
00010e  4388              BICS     r0,r0,r1
000110  6969              LDR      r1,[r5,#0x14]
000112  4008              ANDS     r0,r0,r1
000114  6168              STR      r0,[r5,#0x14]
                  |L6.278|
;;;340    					& PWM_MCR_BITMASK;
;;;341    	}
;;;342    }
000116  bd70              POP      {r4-r6,pc}
;;;343    
                          ENDP

                  |L6.280|
                          DCD      0x40018000
                  |L6.284|
00011c  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_pwm.c",0
000120  44726976
000124  6572735c
000128  736f7572
00012c  63655c6c
000130  70633137
000134  78785f70
000138  776d2e63
00013c  00      
00013d  00                DCB      0
00013e  00                DCB      0
00013f  00                DCB      0
                  |L6.320|
                          DCD      0x001fffff

                          AREA ||i.PWM_ConfigStructInit||, CODE, READONLY, ALIGN=2

                  PWM_ConfigStructInit PROC
;;;126    *******************************************************************************/
;;;127    void PWM_ConfigStructInit(uint8_t PWMTimerCounterMode, void *PWM_InitStruct)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;128    {
000004  4604              MOV      r4,r0
000006  460f              MOV      r7,r1
;;;129    	PWM_TIMERCFG_Type *pTimeCfg;
;;;130    	PWM_COUNTERCFG_Type *pCounterCfg;
;;;131    	CHECK_PARAM(PARAM_PWM_TC_MODE(PWMTimerCounterMode));
000008  b10c              CBZ      r4,|L7.14|
00000a  2c01              CMP      r4,#1
00000c  d100              BNE      |L7.16|
                  |L7.14|
00000e  e003              B        |L7.24|
                  |L7.16|
000010  2183              MOVS     r1,#0x83
000012  a009              ADR      r0,|L7.56|
000014  f7fffffe          BL       check_failed
                  |L7.24|
;;;132    
;;;133    	pTimeCfg = (PWM_TIMERCFG_Type *) PWM_InitStruct;
000018  463d              MOV      r5,r7
;;;134    	pCounterCfg = (PWM_COUNTERCFG_Type *) PWM_InitStruct;
00001a  462e              MOV      r6,r5
;;;135    
;;;136    	if (PWMTimerCounterMode == PWM_MODE_TIMER )
00001c  b91c              CBNZ     r4,|L7.38|
;;;137    	{
;;;138    		pTimeCfg->PrescaleOption = PWM_TIMER_PRESCALE_USVAL;
00001e  2001              MOVS     r0,#1
000020  7028              STRB     r0,[r5,#0]
;;;139    		pTimeCfg->PrescaleValue = 1;
000022  6068              STR      r0,[r5,#4]
000024  e005              B        |L7.50|
                  |L7.38|
;;;140    	}
;;;141    	else if (PWMTimerCounterMode == PWM_MODE_COUNTER)
000026  2c01              CMP      r4,#1
000028  d103              BNE      |L7.50|
;;;142    	{
;;;143    		pCounterCfg->CountInputSelect = PWM_COUNTER_PCAP1_0;
00002a  2000              MOVS     r0,#0
00002c  7070              STRB     r0,[r6,#1]
;;;144    		pCounterCfg->CounterOption = PWM_COUNTER_RISING;
00002e  2001              MOVS     r0,#1
000030  7030              STRB     r0,[r6,#0]
                  |L7.50|
;;;145    	}
;;;146    }
000032  e8bd81f0          POP      {r4-r8,pc}
;;;147    
                          ENDP

000036  0000              DCW      0x0000
                  |L7.56|
000038  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_pwm.c",0
00003c  44726976
000040  6572735c
000044  736f7572
000048  63655c6c
00004c  70633137
000050  78785f70
000054  776d2e63
000058  00      
000059  00                DCB      0
00005a  00                DCB      0
00005b  00                DCB      0

                          AREA ||i.PWM_CounterCmd||, CODE, READONLY, ALIGN=2

                  PWM_CounterCmd PROC
;;;265     **********************************************************************/
;;;266    void PWM_CounterCmd(LPC_PWM_TypeDef *PWMx, FunctionalState NewState)
000000  b570              PUSH     {r4-r6,lr}
;;;267    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;268    	CHECK_PARAM(PARAM_PWMx(PWMx));
000006  480f              LDR      r0,|L8.68|
000008  4284              CMP      r4,r0
00000a  d100              BNE      |L8.14|
00000c  e004              B        |L8.24|
                  |L8.14|
00000e  f44f7186          MOV      r1,#0x10c
000012  a00d              ADR      r0,|L8.72|
000014  f7fffffe          BL       check_failed
                  |L8.24|
;;;269    	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
000018  b10d              CBZ      r5,|L8.30|
00001a  2d01              CMP      r5,#1
00001c  d100              BNE      |L8.32|
                  |L8.30|
00001e  e004              B        |L8.42|
                  |L8.32|
000020  f240110d          MOV      r1,#0x10d
000024  a008              ADR      r0,|L8.72|
000026  f7fffffe          BL       check_failed
                  |L8.42|
;;;270    	if (NewState == ENABLE)
00002a  2d01              CMP      r5,#1
00002c  d104              BNE      |L8.56|
;;;271    	{
;;;272    		PWMx->TCR	|=  PWM_TCR_COUNTER_ENABLE;
00002e  6860              LDR      r0,[r4,#4]
000030  f0400001          ORR      r0,r0,#1
000034  6060              STR      r0,[r4,#4]
000036  e003              B        |L8.64|
                  |L8.56|
;;;273    	}
;;;274    	else
;;;275    	{
;;;276    		PWMx->TCR &= (~PWM_TCR_COUNTER_ENABLE) & PWM_TCR_BITMASK;
000038  6860              LDR      r0,[r4,#4]
00003a  f000000a          AND      r0,r0,#0xa
00003e  6060              STR      r0,[r4,#4]
                  |L8.64|
;;;277    	}
;;;278    }
000040  bd70              POP      {r4-r6,pc}
;;;279    
                          ENDP

000042  0000              DCW      0x0000
                  |L8.68|
                          DCD      0x40018000
                  |L8.72|
000048  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_pwm.c",0
00004c  44726976
000050  6572735c
000054  736f7572
000058  63655c6c
00005c  70633137
000060  78785f70
000064  776d2e63
000068  00      
000069  00                DCB      0
00006a  00                DCB      0
00006b  00                DCB      0

                          AREA ||i.PWM_DeInit||, CODE, READONLY, ALIGN=2

                  PWM_DeInit PROC
;;;222     **********************************************************************/
;;;223    void PWM_DeInit (LPC_PWM_TypeDef *PWMx)
000000  b510              PUSH     {r4,lr}
;;;224    {
000002  4604              MOV      r4,r0
;;;225    	CHECK_PARAM(PARAM_PWMx(PWMx));
000004  4807              LDR      r0,|L9.36|
000006  4284              CMP      r4,r0
000008  d100              BNE      |L9.12|
00000a  e003              B        |L9.20|
                  |L9.12|
00000c  21e1              MOVS     r1,#0xe1
00000e  a006              ADR      r0,|L9.40|
000010  f7fffffe          BL       check_failed
                  |L9.20|
;;;226    
;;;227    	// Disable PWM control (timer, counter and PWM)
;;;228    	PWMx->TCR = 0x00;
000014  2000              MOVS     r0,#0
000016  6060              STR      r0,[r4,#4]
;;;229    	CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCPWM1, DISABLE);
000018  2100              MOVS     r1,#0
00001a  2040              MOVS     r0,#0x40
00001c  f7fffffe          BL       CLKPWR_ConfigPPWR
;;;230    
;;;231    }
000020  bd10              POP      {r4,pc}
;;;232    
                          ENDP

000022  0000              DCW      0x0000
                  |L9.36|
                          DCD      0x40018000
                  |L9.40|
000028  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_pwm.c",0
00002c  44726976
000030  6572735c
000034  736f7572
000038  63655c6c
00003c  70633137
000040  78785f70
000044  776d2e63
000048  00      
000049  00                DCB      0
00004a  00                DCB      0
00004b  00                DCB      0

                          AREA ||i.PWM_GetCaptureValue||, CODE, READONLY, ALIGN=2

                  PWM_GetCaptureValue PROC
;;;399     **********************************************************************/
;;;400    uint32_t PWM_GetCaptureValue(LPC_PWM_TypeDef *PWMx, uint8_t CaptureChannel)
000000  b570              PUSH     {r4-r6,lr}
;;;401    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;402    	CHECK_PARAM(PARAM_PWMx(PWMx));
000006  480e              LDR      r0,|L10.64|
000008  4284              CMP      r4,r0
00000a  d100              BNE      |L10.14|
00000c  e004              B        |L10.24|
                  |L10.14|
00000e  f44f71c9          MOV      r1,#0x192
000012  a00c              ADR      r0,|L10.68|
000014  f7fffffe          BL       check_failed
                  |L10.24|
;;;403    	CHECK_PARAM(PARAM_PWM1_CAPTURE_CHANNEL(CaptureChannel));
000018  b10d              CBZ      r5,|L10.30|
00001a  2d01              CMP      r5,#1
00001c  d100              BNE      |L10.32|
                  |L10.30|
00001e  e004              B        |L10.42|
                  |L10.32|
000020  f2401193          MOV      r1,#0x193
000024  a007              ADR      r0,|L10.68|
000026  f7fffffe          BL       check_failed
                  |L10.42|
;;;404    
;;;405    	switch (CaptureChannel)
00002a  b115              CBZ      r5,|L10.50|
00002c  2d01              CMP      r5,#1
00002e  d104              BNE      |L10.58|
000030  e001              B        |L10.54|
                  |L10.50|
;;;406    	{
;;;407    	case 0:
;;;408    		return PWMx->CR0;
000032  6ae0              LDR      r0,[r4,#0x2c]
                  |L10.52|
;;;409    
;;;410    	case 1:
;;;411    		return PWMx->CR1;
;;;412    
;;;413    	default:
;;;414    		return (0);
;;;415    	}
;;;416    }
000034  bd70              POP      {r4-r6,pc}
                  |L10.54|
000036  6b20              LDR      r0,[r4,#0x30]         ;411
000038  e7fc              B        |L10.52|
                  |L10.58|
00003a  2000              MOVS     r0,#0                 ;414
00003c  e7fa              B        |L10.52|
;;;417    
                          ENDP

00003e  0000              DCW      0x0000
                  |L10.64|
                          DCD      0x40018000
                  |L10.68|
000044  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_pwm.c",0
000048  44726976
00004c  6572735c
000050  736f7572
000054  63655c6c
000058  70633137
00005c  78785f70
000060  776d2e63
000064  00      
000065  00                DCB      0
000066  00                DCB      0
000067  00                DCB      0

                          AREA ||i.PWM_GetIntStatus||, CODE, READONLY, ALIGN=2

                  PWM_GetIntStatus PROC
;;;75      **********************************************************************/
;;;76     IntStatus PWM_GetIntStatus(LPC_PWM_TypeDef *PWMx, uint32_t IntFlag)
000000  b570              PUSH     {r4-r6,lr}
;;;77     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;78     	CHECK_PARAM(PARAM_PWMx(PWMx));
000006  4814              LDR      r0,|L11.88|
000008  4285              CMP      r5,r0
00000a  d100              BNE      |L11.14|
00000c  e003              B        |L11.22|
                  |L11.14|
00000e  214e              MOVS     r1,#0x4e
000010  a012              ADR      r0,|L11.92|
000012  f7fffffe          BL       check_failed
                  |L11.22|
;;;79     	CHECK_PARAM(PARAM_PWM_INTSTAT(IntFlag));
000016  2c01              CMP      r4,#1
000018  d012              BEQ      |L11.64|
00001a  2c02              CMP      r4,#2
00001c  d010              BEQ      |L11.64|
00001e  2c04              CMP      r4,#4
000020  d00e              BEQ      |L11.64|
000022  2c08              CMP      r4,#8
000024  d00c              BEQ      |L11.64|
000026  f5b47f80          CMP      r4,#0x100
00002a  d009              BEQ      |L11.64|
00002c  f5b46f80          CMP      r4,#0x400
000030  d006              BEQ      |L11.64|
000032  f5b47f00          CMP      r4,#0x200
000036  d003              BEQ      |L11.64|
000038  2c10              CMP      r4,#0x10
00003a  d001              BEQ      |L11.64|
00003c  2c20              CMP      r4,#0x20
00003e  d100              BNE      |L11.66|
                  |L11.64|
000040  e003              B        |L11.74|
                  |L11.66|
000042  214f              MOVS     r1,#0x4f
000044  a005              ADR      r0,|L11.92|
000046  f7fffffe          BL       check_failed
                  |L11.74|
;;;80     
;;;81     	return ((PWMx->IR & IntFlag) ? SET : RESET);
00004a  6828              LDR      r0,[r5,#0]
00004c  4020              ANDS     r0,r0,r4
00004e  b108              CBZ      r0,|L11.84|
000050  2001              MOVS     r0,#1
                  |L11.82|
;;;82     }
000052  bd70              POP      {r4-r6,pc}
                  |L11.84|
000054  2000              MOVS     r0,#0                 ;81
000056  e7fc              B        |L11.82|
;;;83     
                          ENDP

                  |L11.88|
                          DCD      0x40018000
                  |L11.92|
00005c  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_pwm.c",0
000060  44726976
000064  6572735c
000068  736f7572
00006c  63655c6c
000070  70633137
000074  78785f70
000078  776d2e63
00007c  00      
00007d  00                DCB      0
00007e  00                DCB      0
00007f  00                DCB      0

                          AREA ||i.PWM_Init||, CODE, READONLY, ALIGN=2

                  PWM_Init PROC
;;;161     **********************************************************************/
;;;162    void PWM_Init(LPC_PWM_TypeDef *PWMx, uint32_t PWMTimerCounterMode, void *PWM_ConfigStruct)
000000  e92d5ffc          PUSH     {r2-r12,lr}
;;;163    {
000004  4604              MOV      r4,r0
000006  4689              MOV      r9,r1
000008  4692              MOV      r10,r2
;;;164    	PWM_TIMERCFG_Type *pTimeCfg;
;;;165    	PWM_COUNTERCFG_Type *pCounterCfg;
;;;166    	uint64_t clkdlycnt;
;;;167    
;;;168    	CHECK_PARAM(PARAM_PWMx(PWMx));
00000a  483d              LDR      r0,|L12.256|
00000c  4284              CMP      r4,r0
00000e  d100              BNE      |L12.18|
000010  e003              B        |L12.26|
                  |L12.18|
000012  21a8              MOVS     r1,#0xa8
000014  a03b              ADR      r0,|L12.260|
000016  f7fffffe          BL       check_failed
                  |L12.26|
;;;169    	CHECK_PARAM(PARAM_PWM_TC_MODE(PWMTimerCounterMode));
00001a  f1b90f00          CMP      r9,#0
00001e  d002              BEQ      |L12.38|
000020  f1b90f01          CMP      r9,#1
000024  d100              BNE      |L12.40|
                  |L12.38|
000026  e003              B        |L12.48|
                  |L12.40|
000028  21a9              MOVS     r1,#0xa9
00002a  a036              ADR      r0,|L12.260|
00002c  f7fffffe          BL       check_failed
                  |L12.48|
;;;170    
;;;171    	pTimeCfg = (PWM_TIMERCFG_Type *)PWM_ConfigStruct;
000030  4656              MOV      r6,r10
;;;172    	pCounterCfg = (PWM_COUNTERCFG_Type *)PWM_ConfigStruct;
000032  4655              MOV      r5,r10
;;;173    
;;;174    
;;;175    	CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCPWM1, ENABLE);
000034  2101              MOVS     r1,#1
000036  2040              MOVS     r0,#0x40
000038  f7fffffe          BL       CLKPWR_ConfigPPWR
;;;176    	CLKPWR_SetPCLKDiv (CLKPWR_PCLKSEL_PWM1, CLKPWR_PCLKSEL_CCLK_DIV_4);
00003c  2100              MOVS     r1,#0
00003e  200c              MOVS     r0,#0xc
000040  f7fffffe          BL       CLKPWR_SetPCLKDiv
;;;177    	// Get peripheral clock of PWM1
;;;178    	clkdlycnt = (uint64_t) CLKPWR_GetPCLK (CLKPWR_PCLKSEL_PWM1);
000044  200c              MOVS     r0,#0xc
000046  f7fffffe          BL       CLKPWR_GetPCLK
00004a  f04f0800          MOV      r8,#0
00004e  4607              MOV      r7,r0
;;;179    
;;;180    
;;;181    	// Clear all interrupts pending
;;;182    	PWMx->IR = 0xFF & PWM_IR_BITMASK;
000050  203f              MOVS     r0,#0x3f
000052  6020              STR      r0,[r4,#0]
;;;183    	PWMx->TCR = 0x00;
000054  2000              MOVS     r0,#0
000056  6060              STR      r0,[r4,#4]
;;;184    	PWMx->CTCR = 0x00;
000058  6720              STR      r0,[r4,#0x70]
;;;185    	PWMx->MCR = 0x00;
00005a  6160              STR      r0,[r4,#0x14]
;;;186    	PWMx->CCR = 0x00;
00005c  62a0              STR      r0,[r4,#0x28]
;;;187    	PWMx->PCR = 0x00;
00005e  64e0              STR      r0,[r4,#0x4c]
;;;188    	PWMx->LER = 0x00;
000060  6520              STR      r0,[r4,#0x50]
;;;189    
;;;190    	if (PWMTimerCounterMode == PWM_MODE_TIMER)
000062  f1b90f00          CMP      r9,#0
000066  d124              BNE      |L12.178|
;;;191    	{
;;;192    		CHECK_PARAM(PARAM_PWM_TIMER_PRESCALE(pTimeCfg->PrescaleOption));
000068  7830              LDRB     r0,[r6,#0]
00006a  b110              CBZ      r0,|L12.114|
00006c  7830              LDRB     r0,[r6,#0]
00006e  2801              CMP      r0,#1
000070  d100              BNE      |L12.116|
                  |L12.114|
000072  e003              B        |L12.124|
                  |L12.116|
000074  21c0              MOVS     r1,#0xc0
000076  a023              ADR      r0,|L12.260|
000078  f7fffffe          BL       check_failed
                  |L12.124|
;;;193    
;;;194    		/* Absolute prescale value */
;;;195    		if (pTimeCfg->PrescaleOption == PWM_TIMER_PRESCALE_TICKVAL)
00007c  7830              LDRB     r0,[r6,#0]
00007e  b918              CBNZ     r0,|L12.136|
;;;196    		{
;;;197    			PWMx->PR   = pTimeCfg->PrescaleValue - 1;
000080  6870              LDR      r0,[r6,#4]
000082  1e40              SUBS     r0,r0,#1
000084  60e0              STR      r0,[r4,#0xc]
000086  e038              B        |L12.250|
                  |L12.136|
;;;198    		}
;;;199    		/* uSecond prescale value */
;;;200    		else
;;;201    		{
;;;202    			clkdlycnt = (clkdlycnt * pTimeCfg->PrescaleValue) / 1000000;
000088  2100              MOVS     r1,#0
00008a  463a              MOV      r2,r7
00008c  6870              LDR      r0,[r6,#4]
00008e  fba03b02          UMULL    r3,r11,r0,r2
000092  fb01b107          MLA      r1,r1,r7,r11
000096  fb001008          MLA      r0,r0,r8,r1
00009a  4a23              LDR      r2,|L12.296|
00009c  e9cd3000          STRD     r3,r0,[sp,#0]
0000a0  2300              MOVS     r3,#0
0000a2  e9dd0100          LDRD     r0,r1,[sp,#0]
0000a6  f7fffffe          BL       __aeabi_uldivmod
0000aa  4607              MOV      r7,r0
;;;203    			PWMx->PR = ((uint32_t) clkdlycnt) - 1;
0000ac  1e78              SUBS     r0,r7,#1
0000ae  60e0              STR      r0,[r4,#0xc]
0000b0  e023              B        |L12.250|
                  |L12.178|
;;;204    		}
;;;205    
;;;206    	}
;;;207    	else if (PWMTimerCounterMode == PWM_MODE_COUNTER)
0000b2  f1b90f01          CMP      r9,#1
0000b6  d120              BNE      |L12.250|
;;;208    	{
;;;209    		CHECK_PARAM(PARAM_PWM_COUNTER_INPUTSEL(pCounterCfg->CountInputSelect));
0000b8  7868              LDRB     r0,[r5,#1]
0000ba  b110              CBZ      r0,|L12.194|
0000bc  7868              LDRB     r0,[r5,#1]
0000be  2801              CMP      r0,#1
0000c0  d100              BNE      |L12.196|
                  |L12.194|
0000c2  e003              B        |L12.204|
                  |L12.196|
0000c4  21d1              MOVS     r1,#0xd1
0000c6  a00f              ADR      r0,|L12.260|
0000c8  f7fffffe          BL       check_failed
                  |L12.204|
;;;210    		CHECK_PARAM(PARAM_PWM_COUNTER_EDGE(pCounterCfg->CounterOption));
0000cc  7828              LDRB     r0,[r5,#0]
0000ce  2801              CMP      r0,#1
0000d0  d005              BEQ      |L12.222|
0000d2  7828              LDRB     r0,[r5,#0]
0000d4  2802              CMP      r0,#2
0000d6  d002              BEQ      |L12.222|
0000d8  7828              LDRB     r0,[r5,#0]
0000da  2803              CMP      r0,#3
0000dc  d100              BNE      |L12.224|
                  |L12.222|
0000de  e003              B        |L12.232|
                  |L12.224|
0000e0  21d2              MOVS     r1,#0xd2
0000e2  a008              ADR      r0,|L12.260|
0000e4  f7fffffe          BL       check_failed
                  |L12.232|
;;;211    
;;;212    		PWMx->CTCR |= (PWM_CTCR_MODE((uint32_t)pCounterCfg->CounterOption)) \
0000e8  7868              LDRB     r0,[r5,#1]
0000ea  f0000103          AND      r1,r0,#3
0000ee  7828              LDRB     r0,[r5,#0]
0000f0  f361009f          BFI      r0,r1,#2,#30
0000f4  6f21              LDR      r1,[r4,#0x70]
0000f6  4308              ORRS     r0,r0,r1
0000f8  6720              STR      r0,[r4,#0x70]
                  |L12.250|
;;;213    						| (PWM_CTCR_SELECT_INPUT((uint32_t)pCounterCfg->CountInputSelect));
;;;214    	}
;;;215    }
0000fa  e8bd9ffc          POP      {r2-r12,pc}
;;;216    
                          ENDP

0000fe  0000              DCW      0x0000
                  |L12.256|
                          DCD      0x40018000
                  |L12.260|
000104  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_pwm.c",0
000108  44726976
00010c  6572735c
000110  736f7572
000114  63655c6c
000118  70633137
00011c  78785f70
000120  776d2e63
000124  00      
000125  00                DCB      0
000126  00                DCB      0
000127  00                DCB      0
                  |L12.296|
                          DCD      0x000f4240

                          AREA ||i.PWM_MatchUpdate||, CODE, READONLY, ALIGN=2

                  PWM_MatchUpdate PROC
;;;430     *********************************************************************/
;;;431    void PWM_MatchUpdate(LPC_PWM_TypeDef *PWMx, uint8_t MatchChannel, \
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;432    					uint32_t MatchValue, uint8_t UpdateType)
;;;433    {
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;434    	CHECK_PARAM(PARAM_PWMx(PWMx));
00000c  4822              LDR      r0,|L13.152|
00000e  4284              CMP      r4,r0
000010  d100              BNE      |L13.20|
000012  e004              B        |L13.30|
                  |L13.20|
000014  f44f71d9          MOV      r1,#0x1b2
000018  a020              ADR      r0,|L13.156|
00001a  f7fffffe          BL       check_failed
                  |L13.30|
;;;435    	CHECK_PARAM(PARAM_PWM1_MATCH_CHANNEL(MatchChannel));
00001e  2e06              CMP      r6,#6
000020  dc00              BGT      |L13.36|
000022  e004              B        |L13.46|
                  |L13.36|
000024  f24011b3          MOV      r1,#0x1b3
000028  a01c              ADR      r0,|L13.156|
00002a  f7fffffe          BL       check_failed
                  |L13.46|
;;;436    	CHECK_PARAM(PARAM_PWM_MATCH_UPDATE(UpdateType));
00002e  b10f              CBZ      r7,|L13.52|
000030  2f01              CMP      r7,#1
000032  d100              BNE      |L13.54|
                  |L13.52|
000034  e004              B        |L13.64|
                  |L13.54|
000036  f44f71da          MOV      r1,#0x1b4
00003a  a018              ADR      r0,|L13.156|
00003c  f7fffffe          BL       check_failed
                  |L13.64|
;;;437    
;;;438    	switch (MatchChannel)
000040  2e07              CMP      r6,#7
000042  d213              BCS      |L13.108|
000044  e8dff006          TBB      [pc,r6]
000048  0406080a          DCB      0x04,0x06,0x08,0x0a
00004c  0c0e1000          DCB      0x0c,0x0e,0x10,0x00
;;;439    	{
;;;440    	case 0:
;;;441    		PWMx->MR0 = MatchValue;
000050  61a5              STR      r5,[r4,#0x18]
;;;442    		break;
000052  e00b              B        |L13.108|
;;;443    
;;;444    	case 1:
;;;445    		PWMx->MR1 = MatchValue;
000054  61e5              STR      r5,[r4,#0x1c]
;;;446    		break;
000056  e009              B        |L13.108|
;;;447    
;;;448    	case 2:
;;;449    		PWMx->MR2 = MatchValue;
000058  6225              STR      r5,[r4,#0x20]
;;;450    		break;
00005a  e007              B        |L13.108|
;;;451    
;;;452    	case 3:
;;;453    		PWMx->MR3 = MatchValue;
00005c  6265              STR      r5,[r4,#0x24]
;;;454    		break;
00005e  e005              B        |L13.108|
;;;455    
;;;456    	case 4:
;;;457    		PWMx->MR4 = MatchValue;
000060  6425              STR      r5,[r4,#0x40]
;;;458    		break;
000062  e003              B        |L13.108|
;;;459    
;;;460    	case 5:
;;;461    		PWMx->MR5 = MatchValue;
000064  6465              STR      r5,[r4,#0x44]
;;;462    		break;
000066  e001              B        |L13.108|
;;;463    
;;;464    	case 6:
;;;465    		PWMx->MR6 = MatchValue;
000068  64a5              STR      r5,[r4,#0x48]
;;;466    		break;
00006a  bf00              NOP      
                  |L13.108|
00006c  bf00              NOP                            ;442
;;;467    	}
;;;468    
;;;469    	// Write Latch register
;;;470    	PWMx->LER |= PWM_LER_EN_MATCHn_LATCH(MatchChannel);
00006e  6d21              LDR      r1,[r4,#0x50]
000070  2e07              CMP      r6,#7
000072  da02              BGE      |L13.122|
000074  2001              MOVS     r0,#1
000076  40b0              LSLS     r0,r0,r6
000078  e000              B        |L13.124|
                  |L13.122|
00007a  2000              MOVS     r0,#0
                  |L13.124|
00007c  4301              ORRS     r1,r1,r0
00007e  6521              STR      r1,[r4,#0x50]
;;;471    
;;;472    	// In case of update now
;;;473    	if (UpdateType == PWM_MATCH_UPDATE_NOW)
000080  b93f              CBNZ     r7,|L13.146|
;;;474    	{
;;;475    		PWMx->TCR |= PWM_TCR_COUNTER_RESET;
000082  6860              LDR      r0,[r4,#4]
000084  f0400002          ORR      r0,r0,#2
000088  6060              STR      r0,[r4,#4]
;;;476    		PWMx->TCR &= (~PWM_TCR_COUNTER_RESET) & PWM_TCR_BITMASK;
00008a  6860              LDR      r0,[r4,#4]
00008c  f0000009          AND      r0,r0,#9
000090  6060              STR      r0,[r4,#4]
                  |L13.146|
;;;477    	}
;;;478    }
000092  e8bd81f0          POP      {r4-r8,pc}
;;;479    
                          ENDP

000096  0000              DCW      0x0000
                  |L13.152|
                          DCD      0x40018000
                  |L13.156|
00009c  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_pwm.c",0
0000a0  44726976
0000a4  6572735c
0000a8  736f7572
0000ac  63655c6c
0000b0  70633137
0000b4  78785f70
0000b8  776d2e63
0000bc  00      
0000bd  00                DCB      0
0000be  00                DCB      0
0000bf  00                DCB      0

                          AREA ||i.PWM_MultiMatchUpdate||, CODE, READONLY, ALIGN=2

                  PWM_MultiMatchUpdate PROC
;;;491     *********************************************************************/
;;;492    void PWM_MultiMatchUpdate(LPC_PWM_TypeDef *PWMx, PWM_Match_T *MatchStruct , uint8_t UpdateType)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;493    {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;494    	uint8_t LatchValue = 0;
00000a  f04f0800          MOV      r8,#0
;;;495    	uint8_t i;
;;;496    
;;;497    	CHECK_PARAM(PARAM_PWMx(PWMx));
00000e  4820              LDR      r0,|L14.144|
000010  4285              CMP      r5,r0
000012  d100              BNE      |L14.22|
000014  e004              B        |L14.32|
                  |L14.22|
000016  f24011f1          MOV      r1,#0x1f1
00001a  a01e              ADR      r0,|L14.148|
00001c  f7fffffe          BL       check_failed
                  |L14.32|
;;;498    	CHECK_PARAM(PARAM_PWM_MATCH_UPDATE(UpdateType));
000020  b10f              CBZ      r7,|L14.38|
000022  2f01              CMP      r7,#1
000024  d100              BNE      |L14.40|
                  |L14.38|
000026  e004              B        |L14.50|
                  |L14.40|
000028  f44f71f9          MOV      r1,#0x1f2
00002c  a019              ADR      r0,|L14.148|
00002e  f7fffffe          BL       check_failed
                  |L14.50|
;;;499    
;;;500    	//Update match value
;;;501    	for(i=0;i<7;i++)
000032  2400              MOVS     r4,#0
000034  e01c              B        |L14.112|
                  |L14.54|
;;;502    	{
;;;503    		if(MatchStruct[i].Status == SET)
000036  eb0600c4          ADD      r0,r6,r4,LSL #3
00003a  7900              LDRB     r0,[r0,#4]
00003c  2801              CMP      r0,#1
00003e  d115              BNE      |L14.108|
;;;504    		{
;;;505    			if(i<4)
000040  2c04              CMP      r4,#4
000042  da06              BGE      |L14.82|
;;;506    				*((volatile unsigned int *)(&(PWMx->MR0) + i)) = MatchStruct[i].Matchvalue;
000044  f8561034          LDR      r1,[r6,r4,LSL #3]
000048  f1050018          ADD      r0,r5,#0x18
00004c  f8401024          STR      r1,[r0,r4,LSL #2]
000050  e006              B        |L14.96|
                  |L14.82|
;;;507    			else
;;;508    			{
;;;509    				*((volatile unsigned int *)(&(PWMx->MR4) + (i-4))) = MatchStruct[i].Matchvalue;
000052  f8562034          LDR      r2,[r6,r4,LSL #3]
000056  1f20              SUBS     r0,r4,#4
000058  f1050140          ADD      r1,r5,#0x40
00005c  f8412020          STR      r2,[r1,r0,LSL #2]
                  |L14.96|
;;;510    			}
;;;511    			LatchValue |=(1<<i);
000060  2001              MOVS     r0,#1
000062  40a0              LSLS     r0,r0,r4
000064  ea400008          ORR      r0,r0,r8
000068  f00008ff          AND      r8,r0,#0xff
                  |L14.108|
00006c  1c60              ADDS     r0,r4,#1              ;501
00006e  b2c4              UXTB     r4,r0                 ;501
                  |L14.112|
000070  2c07              CMP      r4,#7                 ;501
000072  dbe0              BLT      |L14.54|
;;;512    		}
;;;513    	}
;;;514    	//set update for multi-channel at the same time
;;;515    	PWMx->LER = LatchValue;
000074  f8c58050          STR      r8,[r5,#0x50]
;;;516    
;;;517    	// In case of update now
;;;518    	if (UpdateType == PWM_MATCH_UPDATE_NOW)
000078  b93f              CBNZ     r7,|L14.138|
;;;519    	{
;;;520    		PWMx->TCR |= PWM_TCR_COUNTER_RESET;
00007a  6868              LDR      r0,[r5,#4]
00007c  f0400002          ORR      r0,r0,#2
000080  6068              STR      r0,[r5,#4]
;;;521    		PWMx->TCR &= (~PWM_TCR_COUNTER_RESET) & PWM_TCR_BITMASK;
000082  6868              LDR      r0,[r5,#4]
000084  f0000009          AND      r0,r0,#9
000088  6068              STR      r0,[r5,#4]
                  |L14.138|
;;;522    	}
;;;523    }
00008a  e8bd81f0          POP      {r4-r8,pc}
;;;524    /********************************************************************//**
                          ENDP

00008e  0000              DCW      0x0000
                  |L14.144|
                          DCD      0x40018000
                  |L14.148|
000094  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_pwm.c",0
000098  44726976
00009c  6572735c
0000a0  736f7572
0000a4  63655c6c
0000a8  70633137
0000ac  78785f70
0000b0  776d2e63
0000b4  00      
0000b5  00                DCB      0
0000b6  00                DCB      0
0000b7  00                DCB      0

                          AREA ||i.PWM_ResetCounter||, CODE, READONLY, ALIGN=2

                  PWM_ResetCounter PROC
;;;285     **********************************************************************/
;;;286    void PWM_ResetCounter(LPC_PWM_TypeDef *PWMx)
000000  b510              PUSH     {r4,lr}
;;;287    {
000002  4604              MOV      r4,r0
;;;288    	CHECK_PARAM(PARAM_PWMx(PWMx));
000004  4808              LDR      r0,|L15.40|
000006  4284              CMP      r4,r0
000008  d100              BNE      |L15.12|
00000a  e004              B        |L15.22|
                  |L15.12|
00000c  f44f7190          MOV      r1,#0x120
000010  a006              ADR      r0,|L15.44|
000012  f7fffffe          BL       check_failed
                  |L15.22|
;;;289    	PWMx->TCR |= PWM_TCR_COUNTER_RESET;
000016  6860              LDR      r0,[r4,#4]
000018  f0400002          ORR      r0,r0,#2
00001c  6060              STR      r0,[r4,#4]
;;;290    	PWMx->TCR &= (~PWM_TCR_COUNTER_RESET) & PWM_TCR_BITMASK;
00001e  6860              LDR      r0,[r4,#4]
000020  f0000009          AND      r0,r0,#9
000024  6060              STR      r0,[r4,#4]
;;;291    }
000026  bd10              POP      {r4,pc}
;;;292    
                          ENDP

                  |L15.40|
                          DCD      0x40018000
                  |L15.44|
00002c  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_pwm.c",0
000030  44726976
000034  6572735c
000038  736f7572
00003c  63655c6c
000040  70633137
000044  78785f70
000048  776d2e63
00004c  00      
00004d  00                DCB      0
00004e  00                DCB      0
00004f  00                DCB      0

;*** Start embedded assembler ***

#line 1 "Lib\\Drivers\\source\\lpc17xx_pwm.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_lpc17xx_pwm_c_11007e74____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_lpc17xx_pwm_c_11007e74____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_lpc17xx_pwm_c_11007e74____REVSH|
#line 144
|__asm___13_lpc17xx_pwm_c_11007e74____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
