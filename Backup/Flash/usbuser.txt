; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\usbuser.o --asm_dir=.\Flash\ --list_dir=.\Flash\ --depend=.\flash\usbuser.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\Lib\Drivers\include -I.\Inc -I.\Lib\Usb_Drivers\Inc -I.\Lib\CLib__1_0_0_4\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\NXP\LPC17xx -D__UVISION_VERSION=525 --omf_browse=.\flash\usbuser.crf Lib\Usb_Drivers\Src\usbuser.c]
                          THUMB

                          AREA ||i.USB_Configure_Event||, CODE, READONLY, ALIGN=1

                  USB_Configure_Event PROC
;;;113    #if USB_CONFIGURE_EVENT
;;;114    void USB_Configure_Event (void) {
000000  4770              BX       lr
;;;115    
;;;116      if (USB_Configuration) {                  /* Check if USB is configured */
;;;117        /* add your code here */
;;;118      }
;;;119    }
;;;120    #endif
                          ENDP


                          AREA ||i.USB_EndPoint1||, CODE, READONLY, ALIGN=2

                  USB_EndPoint1 PROC
;;;173    
;;;174    void USB_EndPoint1 (uint32_t event) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
;;;175      uint16_t temp;
;;;176      static uint16_t serialState;
;;;177    
;;;178      switch (event) {
000004  2d03              CMP      r5,#3
000006  d10b              BNE      |L2.32|
;;;179        case USB_EVT_IN:
;;;180          temp = CDC_GetSerialState();
000008  f7fffffe          BL       CDC_GetSerialState
00000c  4604              MOV      r4,r0
;;;181          if (serialState != temp) {
00000e  4805              LDR      r0,|L2.36|
000010  8800              LDRH     r0,[r0,#0]  ; serialState
000012  42a0              CMP      r0,r4
000014  d003              BEQ      |L2.30|
;;;182             serialState = temp;
000016  4803              LDR      r0,|L2.36|
000018  8004              STRH     r4,[r0,#0]
;;;183             CDC_NotificationIn();            /* send SERIAL_STATE notification */
00001a  f7fffffe          BL       CDC_NotificationIn
                  |L2.30|
;;;184          }
;;;185          break;
00001e  bf00              NOP      
                  |L2.32|
000020  bf00              NOP      
;;;186      }
;;;187    }
000022  bd70              POP      {r4-r6,pc}
;;;188    
                          ENDP

                  |L2.36|
                          DCD      serialState

                          AREA ||i.USB_EndPoint10||, CODE, READONLY, ALIGN=1

                  USB_EndPoint10 PROC
;;;284    
;;;285    void USB_EndPoint10 (uint32_t event) {
000000  4770              BX       lr
;;;286    }
;;;287    
                          ENDP


                          AREA ||i.USB_EndPoint11||, CODE, READONLY, ALIGN=1

                  USB_EndPoint11 PROC
;;;294    
;;;295    void USB_EndPoint11 (uint32_t event) {
000000  4770              BX       lr
;;;296    }
;;;297    
                          ENDP


                          AREA ||i.USB_EndPoint12||, CODE, READONLY, ALIGN=1

                  USB_EndPoint12 PROC
;;;304    
;;;305    void USB_EndPoint12 (uint32_t event) {
000000  4770              BX       lr
;;;306    }
;;;307    
                          ENDP


                          AREA ||i.USB_EndPoint13||, CODE, READONLY, ALIGN=1

                  USB_EndPoint13 PROC
;;;314    
;;;315    void USB_EndPoint13 (uint32_t event) {
000000  4770              BX       lr
;;;316    }
;;;317    
                          ENDP


                          AREA ||i.USB_EndPoint14||, CODE, READONLY, ALIGN=1

                  USB_EndPoint14 PROC
;;;324    
;;;325    void USB_EndPoint14 (uint32_t event) {
000000  4770              BX       lr
;;;326    }
;;;327    
                          ENDP


                          AREA ||i.USB_EndPoint15||, CODE, READONLY, ALIGN=1

                  USB_EndPoint15 PROC
;;;334    
;;;335    void USB_EndPoint15 (uint32_t event) {
000000  4770              BX       lr
;;;336    }
                          ENDP


                          AREA ||i.USB_EndPoint2||, CODE, READONLY, ALIGN=1

                  USB_EndPoint2 PROC
;;;195    
;;;196    void USB_EndPoint2 (uint32_t event) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;197    
;;;198      switch (event) {
000004  2c02              CMP      r4,#2
000006  d002              BEQ      |L9.14|
000008  2c03              CMP      r4,#3
00000a  d106              BNE      |L9.26|
00000c  e002              B        |L9.20|
                  |L9.14|
;;;199        case USB_EVT_OUT:
;;;200          CDC_BulkOut ();                /* data received from Host */
00000e  f7fffffe          BL       CDC_BulkOut
;;;201          break;
000012  e002              B        |L9.26|
                  |L9.20|
;;;202        case USB_EVT_IN:
;;;203          CDC_BulkIn ();                 /* data expected from Host */
000014  f7fffffe          BL       CDC_BulkIn
;;;204          break;
000018  bf00              NOP      
                  |L9.26|
00001a  bf00              NOP                            ;201
;;;205      }
;;;206    }
00001c  bd10              POP      {r4,pc}
;;;207    
                          ENDP


                          AREA ||i.USB_EndPoint3||, CODE, READONLY, ALIGN=1

                  USB_EndPoint3 PROC
;;;214    
;;;215    void USB_EndPoint3 (uint32_t event) {
000000  4770              BX       lr
;;;216    }
;;;217    
                          ENDP


                          AREA ||i.USB_EndPoint4||, CODE, READONLY, ALIGN=1

                  USB_EndPoint4 PROC
;;;224    
;;;225    void USB_EndPoint4 (uint32_t event) {
000000  4770              BX       lr
;;;226    }
;;;227    
                          ENDP


                          AREA ||i.USB_EndPoint5||, CODE, READONLY, ALIGN=1

                  USB_EndPoint5 PROC
;;;234    
;;;235    void USB_EndPoint5 (uint32_t event) {
000000  4770              BX       lr
;;;236    }
;;;237    
                          ENDP


                          AREA ||i.USB_EndPoint6||, CODE, READONLY, ALIGN=1

                  USB_EndPoint6 PROC
;;;244    
;;;245    void USB_EndPoint6 (uint32_t event) {
000000  4770              BX       lr
;;;246    }
;;;247    
                          ENDP


                          AREA ||i.USB_EndPoint7||, CODE, READONLY, ALIGN=1

                  USB_EndPoint7 PROC
;;;254    
;;;255    void USB_EndPoint7 (uint32_t event) {
000000  4770              BX       lr
;;;256    }
;;;257    
                          ENDP


                          AREA ||i.USB_EndPoint8||, CODE, READONLY, ALIGN=1

                  USB_EndPoint8 PROC
;;;264    
;;;265    void USB_EndPoint8 (uint32_t event) {
000000  4770              BX       lr
;;;266    }
;;;267    
                          ENDP


                          AREA ||i.USB_EndPoint9||, CODE, READONLY, ALIGN=1

                  USB_EndPoint9 PROC
;;;274    
;;;275    void USB_EndPoint9 (uint32_t event) {
000000  4770              BX       lr
;;;276    }
;;;277    
                          ENDP


                          AREA ||i.USB_Reset_Event||, CODE, READONLY, ALIGN=1

                  USB_Reset_Event PROC
;;;45     #if USB_RESET_EVENT
;;;46     void USB_Reset_Event (void) {
000000  b510              PUSH     {r4,lr}
;;;47       USB_ResetCore();
000002  f7fffffe          BL       USB_ResetCore
;;;48     }
000006  bd10              POP      {r4,pc}
;;;49     #endif
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  USB_P_EP
                          DCD      USB_EndPoint0
                          DCD      USB_EndPoint1
                          DCD      USB_EndPoint2
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000

                          AREA ||.data||, DATA, ALIGN=1

                  serialState
000000  0000              DCB      0x00,0x00
