; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\debug_frmwrk.o --asm_dir=.\Flash\ --list_dir=.\Flash\ --depend=.\flash\debug_frmwrk.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\Lib\Drivers\include -I.\Inc -I.\Lib\Usb_Drivers\Inc -I.\Lib\CLib__1_0_0_4\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\NXP\LPC17xx -D__UVISION_VERSION=525 --omf_browse=.\flash\debug_frmwrk.crf Lib\Drivers\source\debug_frmwrk.c]
                          THUMB

                          AREA ||i.UARTGetChar||, CODE, READONLY, ALIGN=1

                  UARTGetChar PROC
;;;76      **********************************************************************/
;;;77     uint8_t UARTGetChar (LPC_UART_TypeDef *UARTx)
000000  b538              PUSH     {r3-r5,lr}
;;;78     {
000002  4604              MOV      r4,r0
;;;79     	uint8_t tmp = 0;
000004  2000              MOVS     r0,#0
000006  9000              STR      r0,[sp,#0]
;;;80     	UART_Receive(UARTx, &tmp, 1, BLOCKING);
000008  2301              MOVS     r3,#1
00000a  461a              MOV      r2,r3
00000c  4669              MOV      r1,sp
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       UART_Receive
;;;81     	return(tmp);
000014  f89d0000          LDRB     r0,[sp,#0]
;;;82     }
000018  bd38              POP      {r3-r5,pc}
;;;83     
                          ENDP


                          AREA ||i.UARTPutChar||, CODE, READONLY, ALIGN=1

                  UARTPutChar PROC
;;;65      **********************************************************************/
;;;66     void UARTPutChar (LPC_UART_TypeDef *UARTx, uint8_t ch)
000000  b513              PUSH     {r0,r1,r4,lr}
;;;67     {
000002  4604              MOV      r4,r0
;;;68     	UART_Send(UARTx, &ch, 1, BLOCKING);
000004  2301              MOVS     r3,#1
000006  461a              MOV      r2,r3
000008  a901              ADD      r1,sp,#4
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       UART_Send
;;;69     }
000010  bd1c              POP      {r2-r4,pc}
;;;70     
                          ENDP


                          AREA ||i.UARTPutDec||, CODE, READONLY, ALIGN=1

                  UARTPutDec PROC
;;;120     **********************************************************************/
;;;121    void UARTPutDec(LPC_UART_TypeDef *UARTx, uint8_t decnum)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;122    {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
;;;123    	uint8_t c1=decnum%10;
000008  200a              MOVS     r0,#0xa
00000a  fb94f1f0          SDIV     r1,r4,r0
00000e  fb004011          MLS      r0,r0,r1,r4
000012  b2c6              UXTB     r6,r0
;;;124    	uint8_t c2=(decnum/10)%10;
000014  200a              MOVS     r0,#0xa
000016  fb94f0f0          SDIV     r0,r4,r0
00001a  210a              MOVS     r1,#0xa
00001c  fb90f2f1          SDIV     r2,r0,r1
000020  fb010012          MLS      r0,r1,r2,r0
000024  b2c7              UXTB     r7,r0
;;;125    	uint8_t c3=(decnum/100)%10;
000026  2064              MOVS     r0,#0x64
000028  fb94f0f0          SDIV     r0,r4,r0
00002c  fb90f2f1          SDIV     r2,r0,r1
000030  fb010012          MLS      r0,r1,r2,r0
000034  f00008ff          AND      r8,r0,#0xff
;;;126    	UARTPutChar(UARTx, '0'+c3);
000038  f1080030          ADD      r0,r8,#0x30
00003c  b2c1              UXTB     r1,r0
00003e  4628              MOV      r0,r5
000040  f7fffffe          BL       UARTPutChar
;;;127    	UARTPutChar(UARTx, '0'+c2);
000044  f1070030          ADD      r0,r7,#0x30
000048  b2c1              UXTB     r1,r0
00004a  4628              MOV      r0,r5
00004c  f7fffffe          BL       UARTPutChar
;;;128    	UARTPutChar(UARTx, '0'+c1);
000050  f1060030          ADD      r0,r6,#0x30
000054  b2c1              UXTB     r1,r0
000056  4628              MOV      r0,r5
000058  f7fffffe          BL       UARTPutChar
;;;129    }
00005c  e8bd81f0          POP      {r4-r8,pc}
;;;130    
                          ENDP


                          AREA ||i.UARTPutDec16||, CODE, READONLY, ALIGN=1

                  UARTPutDec16 PROC
;;;136     **********************************************************************/
;;;137    void UARTPutDec16(LPC_UART_TypeDef *UARTx, uint16_t decnum)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;138    {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
;;;139    	uint8_t c1=decnum%10;
000008  200a              MOVS     r0,#0xa
00000a  fb94f1f0          SDIV     r1,r4,r0
00000e  fb004011          MLS      r0,r0,r1,r4
000012  b2c6              UXTB     r6,r0
;;;140    	uint8_t c2=(decnum/10)%10;
000014  200a              MOVS     r0,#0xa
000016  fb94f0f0          SDIV     r0,r4,r0
00001a  210a              MOVS     r1,#0xa
00001c  fb90f2f1          SDIV     r2,r0,r1
000020  fb010012          MLS      r0,r1,r2,r0
000024  b2c7              UXTB     r7,r0
;;;141    	uint8_t c3=(decnum/100)%10;
000026  2064              MOVS     r0,#0x64
000028  fb94f0f0          SDIV     r0,r4,r0
00002c  fb90f2f1          SDIV     r2,r0,r1
000030  fb010012          MLS      r0,r1,r2,r0
000034  f00008ff          AND      r8,r0,#0xff
;;;142    	uint8_t c4=(decnum/1000)%10;
000038  f44f707a          MOV      r0,#0x3e8
00003c  fb94f0f0          SDIV     r0,r4,r0
000040  fb90f2f1          SDIV     r2,r0,r1
000044  fb010012          MLS      r0,r1,r2,r0
000048  f00009ff          AND      r9,r0,#0xff
;;;143    	uint8_t c5=(decnum/10000)%10;
00004c  f2427010          MOV      r0,#0x2710
000050  fb94f0f0          SDIV     r0,r4,r0
000054  fb90f2f1          SDIV     r2,r0,r1
000058  fb010012          MLS      r0,r1,r2,r0
00005c  f0000aff          AND      r10,r0,#0xff
;;;144    	UARTPutChar(UARTx, '0'+c5);
000060  f10a0030          ADD      r0,r10,#0x30
000064  b2c1              UXTB     r1,r0
000066  4628              MOV      r0,r5
000068  f7fffffe          BL       UARTPutChar
;;;145    	UARTPutChar(UARTx, '0'+c4);
00006c  f1090030          ADD      r0,r9,#0x30
000070  b2c1              UXTB     r1,r0
000072  4628              MOV      r0,r5
000074  f7fffffe          BL       UARTPutChar
;;;146    	UARTPutChar(UARTx, '0'+c3);
000078  f1080030          ADD      r0,r8,#0x30
00007c  b2c1              UXTB     r1,r0
00007e  4628              MOV      r0,r5
000080  f7fffffe          BL       UARTPutChar
;;;147    	UARTPutChar(UARTx, '0'+c2);
000084  f1070030          ADD      r0,r7,#0x30
000088  b2c1              UXTB     r1,r0
00008a  4628              MOV      r0,r5
00008c  f7fffffe          BL       UARTPutChar
;;;148    	UARTPutChar(UARTx, '0'+c1);
000090  f1060030          ADD      r0,r6,#0x30
000094  b2c1              UXTB     r1,r0
000096  4628              MOV      r0,r5
000098  f7fffffe          BL       UARTPutChar
;;;149    }
00009c  e8bd87f0          POP      {r4-r10,pc}
;;;150    
                          ENDP


                          AREA ||i.UARTPutDec32||, CODE, READONLY, ALIGN=2

                  UARTPutDec32 PROC
;;;156     **********************************************************************/
;;;157    void UARTPutDec32(LPC_UART_TypeDef *UARTx, uint32_t decnum)
000000  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
;;;158    {
000004  b083              SUB      sp,sp,#0xc
000006  460c              MOV      r4,r1
;;;159    	uint8_t c1=decnum%10;
000008  200a              MOVS     r0,#0xa
00000a  fbb4f1f0          UDIV     r1,r4,r0
00000e  fb004511          MLS      r5,r0,r1,r4
;;;160    	uint8_t c2=(decnum/10)%10;
000012  fbb4f0f0          UDIV     r0,r4,r0
000016  210a              MOVS     r1,#0xa
000018  fbb0f2f1          UDIV     r2,r0,r1
00001c  fb010612          MLS      r6,r1,r2,r0
;;;161    	uint8_t c3=(decnum/100)%10;
000020  2064              MOVS     r0,#0x64
000022  fbb4f0f0          UDIV     r0,r4,r0
000026  fbb0f2f1          UDIV     r2,r0,r1
00002a  fb010712          MLS      r7,r1,r2,r0
;;;162    	uint8_t c4=(decnum/1000)%10;
00002e  f44f707a          MOV      r0,#0x3e8
000032  fbb4f0f0          UDIV     r0,r4,r0
000036  fbb0f2f1          UDIV     r2,r0,r1
00003a  fb010812          MLS      r8,r1,r2,r0
;;;163    	uint8_t c5=(decnum/10000)%10;
00003e  f2427010          MOV      r0,#0x2710
000042  fbb4f0f0          UDIV     r0,r4,r0
000046  fbb0f2f1          UDIV     r2,r0,r1
00004a  fb010912          MLS      r9,r1,r2,r0
;;;164    	uint8_t c6=(decnum/100000)%10;
00004e  4832              LDR      r0,|L5.280|
000050  fbb4f0f0          UDIV     r0,r4,r0
000054  fbb0f2f1          UDIV     r2,r0,r1
000058  fb010a12          MLS      r10,r1,r2,r0
;;;165    	uint8_t c7=(decnum/1000000)%10;
00005c  482f              LDR      r0,|L5.284|
00005e  fbb4f0f0          UDIV     r0,r4,r0
000062  fbb0f2f1          UDIV     r2,r0,r1
000066  fb010b12          MLS      r11,r1,r2,r0
;;;166    	uint8_t c8=(decnum/10000000)%10;
00006a  482d              LDR      r0,|L5.288|
00006c  fbb4f0f0          UDIV     r0,r4,r0
000070  fbb0f2f1          UDIV     r2,r0,r1
000074  fb010012          MLS      r0,r1,r2,r0
000078  9002              STR      r0,[sp,#8]
;;;167    	uint8_t c9=(decnum/100000000)%10;
00007a  482a              LDR      r0,|L5.292|
00007c  fbb4f0f0          UDIV     r0,r4,r0
000080  fbb0f2f1          UDIV     r2,r0,r1
000084  fb010012          MLS      r0,r1,r2,r0
000088  9001              STR      r0,[sp,#4]
;;;168    	uint8_t c10=(decnum/1000000000)%10;
00008a  4827              LDR      r0,|L5.296|
00008c  fbb4f0f0          UDIV     r0,r4,r0
000090  fbb0f2f1          UDIV     r2,r0,r1
000094  fb010012          MLS      r0,r1,r2,r0
000098  9000              STR      r0,[sp,#0]
;;;169    	UARTPutChar(UARTx, '0'+c10);
00009a  9800              LDR      r0,[sp,#0]
00009c  3030              ADDS     r0,r0,#0x30
00009e  b2c1              UXTB     r1,r0
0000a0  9803              LDR      r0,[sp,#0xc]
0000a2  f7fffffe          BL       UARTPutChar
;;;170    	UARTPutChar(UARTx, '0'+c9);
0000a6  9801              LDR      r0,[sp,#4]
0000a8  3030              ADDS     r0,r0,#0x30
0000aa  b2c1              UXTB     r1,r0
0000ac  9803              LDR      r0,[sp,#0xc]
0000ae  f7fffffe          BL       UARTPutChar
;;;171    	UARTPutChar(UARTx, '0'+c8);
0000b2  9802              LDR      r0,[sp,#8]
0000b4  3030              ADDS     r0,r0,#0x30
0000b6  b2c1              UXTB     r1,r0
0000b8  9803              LDR      r0,[sp,#0xc]
0000ba  f7fffffe          BL       UARTPutChar
;;;172    	UARTPutChar(UARTx, '0'+c7);
0000be  f10b0030          ADD      r0,r11,#0x30
0000c2  b2c1              UXTB     r1,r0
0000c4  9803              LDR      r0,[sp,#0xc]
0000c6  f7fffffe          BL       UARTPutChar
;;;173    	UARTPutChar(UARTx, '0'+c6);
0000ca  f10a0030          ADD      r0,r10,#0x30
0000ce  b2c1              UXTB     r1,r0
0000d0  9803              LDR      r0,[sp,#0xc]
0000d2  f7fffffe          BL       UARTPutChar
;;;174    	UARTPutChar(UARTx, '0'+c5);
0000d6  f1090030          ADD      r0,r9,#0x30
0000da  b2c1              UXTB     r1,r0
0000dc  9803              LDR      r0,[sp,#0xc]
0000de  f7fffffe          BL       UARTPutChar
;;;175    	UARTPutChar(UARTx, '0'+c4);
0000e2  f1080030          ADD      r0,r8,#0x30
0000e6  b2c1              UXTB     r1,r0
0000e8  9803              LDR      r0,[sp,#0xc]
0000ea  f7fffffe          BL       UARTPutChar
;;;176    	UARTPutChar(UARTx, '0'+c3);
0000ee  f1070030          ADD      r0,r7,#0x30
0000f2  b2c1              UXTB     r1,r0
0000f4  9803              LDR      r0,[sp,#0xc]
0000f6  f7fffffe          BL       UARTPutChar
;;;177    	UARTPutChar(UARTx, '0'+c2);
0000fa  f1060030          ADD      r0,r6,#0x30
0000fe  b2c1              UXTB     r1,r0
000100  9803              LDR      r0,[sp,#0xc]
000102  f7fffffe          BL       UARTPutChar
;;;178    	UARTPutChar(UARTx, '0'+c1);
000106  f1050030          ADD      r0,r5,#0x30
00010a  b2c1              UXTB     r1,r0
00010c  9803              LDR      r0,[sp,#0xc]
00010e  f7fffffe          BL       UARTPutChar
;;;179    }
000112  b005              ADD      sp,sp,#0x14
000114  e8bd8ff0          POP      {r4-r11,pc}
;;;180    
                          ENDP

                  |L5.280|
                          DCD      0x000186a0
                  |L5.284|
                          DCD      0x000f4240
                  |L5.288|
                          DCD      0x00989680
                  |L5.292|
                          DCD      0x05f5e100
                  |L5.296|
                          DCD      0x3b9aca00

                          AREA ||i.UARTPutHex||, CODE, READONLY, ALIGN=2

                  UARTPutHex PROC
;;;186     **********************************************************************/
;;;187    void UARTPutHex (LPC_UART_TypeDef *UARTx, uint8_t hexnum)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;188    {
000004  4607              MOV      r7,r0
000006  460d              MOV      r5,r1
;;;189    	uint8_t nibble, i;
;;;190    
;;;191    	UARTPuts(UARTx, "0x");
000008  a10e              ADR      r1,|L6.68|
00000a  4638              MOV      r0,r7
00000c  f7fffffe          BL       UARTPuts
;;;192    	i = 1;
000010  2601              MOVS     r6,#1
;;;193    	do {
000012  bf00              NOP      
                  |L6.20|
;;;194    		nibble = (hexnum >> (4*i)) & 0x0F;
000014  00b0              LSLS     r0,r6,#2
000016  fa45f000          ASR      r0,r5,r0
00001a  f000040f          AND      r4,r0,#0xf
;;;195    		UARTPutChar(UARTx, (nibble > 9) ? ('A' + nibble - 10) : ('0' + nibble));
00001e  2c09              CMP      r4,#9
000020  dd02              BLE      |L6.40|
000022  f1040037          ADD      r0,r4,#0x37
000026  e001              B        |L6.44|
                  |L6.40|
000028  f1040030          ADD      r0,r4,#0x30
                  |L6.44|
00002c  b2c1              UXTB     r1,r0
00002e  4638              MOV      r0,r7
000030  f7fffffe          BL       UARTPutChar
;;;196    	} while (i--);
000034  1e30              SUBS     r0,r6,#0
000036  f1a60101          SUB      r1,r6,#1
00003a  b2ce              UXTB     r6,r1
00003c  d1ea              BNE      |L6.20|
;;;197    }
00003e  e8bd81f0          POP      {r4-r8,pc}
;;;198    
                          ENDP

000042  0000              DCW      0x0000
                  |L6.68|
000044  307800            DCB      "0x",0
000047  00                DCB      0

                          AREA ||i.UARTPutHex16||, CODE, READONLY, ALIGN=2

                  UARTPutHex16 PROC
;;;205     **********************************************************************/
;;;206    void UARTPutHex16 (LPC_UART_TypeDef *UARTx, uint16_t hexnum)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;207    {
000004  4607              MOV      r7,r0
000006  460d              MOV      r5,r1
;;;208    	uint8_t nibble, i;
;;;209    
;;;210    	UARTPuts(UARTx, "0x");
000008  a10e              ADR      r1,|L7.68|
00000a  4638              MOV      r0,r7
00000c  f7fffffe          BL       UARTPuts
;;;211    	i = 3;
000010  2603              MOVS     r6,#3
;;;212    	do {
000012  bf00              NOP      
                  |L7.20|
;;;213    		nibble = (hexnum >> (4*i)) & 0x0F;
000014  00b0              LSLS     r0,r6,#2
000016  fa45f000          ASR      r0,r5,r0
00001a  f000040f          AND      r4,r0,#0xf
;;;214    		UARTPutChar(UARTx, (nibble > 9) ? ('A' + nibble - 10) : ('0' + nibble));
00001e  2c09              CMP      r4,#9
000020  dd02              BLE      |L7.40|
000022  f1040037          ADD      r0,r4,#0x37
000026  e001              B        |L7.44|
                  |L7.40|
000028  f1040030          ADD      r0,r4,#0x30
                  |L7.44|
00002c  b2c1              UXTB     r1,r0
00002e  4638              MOV      r0,r7
000030  f7fffffe          BL       UARTPutChar
;;;215    	} while (i--);
000034  1e30              SUBS     r0,r6,#0
000036  f1a60101          SUB      r1,r6,#1
00003a  b2ce              UXTB     r6,r1
00003c  d1ea              BNE      |L7.20|
;;;216    }
00003e  e8bd81f0          POP      {r4-r8,pc}
;;;217    
                          ENDP

000042  0000              DCW      0x0000
                  |L7.68|
000044  307800            DCB      "0x",0
000047  00                DCB      0

                          AREA ||i.UARTPutHex32||, CODE, READONLY, ALIGN=2

                  UARTPutHex32 PROC
;;;223     **********************************************************************/
;;;224    void UARTPutHex32 (LPC_UART_TypeDef *UARTx, uint32_t hexnum)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;225    {
000004  4607              MOV      r7,r0
000006  460d              MOV      r5,r1
;;;226    	uint8_t nibble, i;
;;;227    
;;;228    	UARTPuts(UARTx, "0x");
000008  a10e              ADR      r1,|L8.68|
00000a  4638              MOV      r0,r7
00000c  f7fffffe          BL       UARTPuts
;;;229    	i = 7;
000010  2607              MOVS     r6,#7
;;;230    	do {
000012  bf00              NOP      
                  |L8.20|
;;;231    		nibble = (hexnum >> (4*i)) & 0x0F;
000014  00b0              LSLS     r0,r6,#2
000016  fa25f000          LSR      r0,r5,r0
00001a  f000040f          AND      r4,r0,#0xf
;;;232    		UARTPutChar(UARTx, (nibble > 9) ? ('A' + nibble - 10) : ('0' + nibble));
00001e  2c09              CMP      r4,#9
000020  dd02              BLE      |L8.40|
000022  f1040037          ADD      r0,r4,#0x37
000026  e001              B        |L8.44|
                  |L8.40|
000028  f1040030          ADD      r0,r4,#0x30
                  |L8.44|
00002c  b2c1              UXTB     r1,r0
00002e  4638              MOV      r0,r7
000030  f7fffffe          BL       UARTPutChar
;;;233    	} while (i--);
000034  1e30              SUBS     r0,r6,#0
000036  f1a60101          SUB      r1,r6,#1
00003a  b2ce              UXTB     r6,r1
00003c  d1ea              BNE      |L8.20|
;;;234    }
00003e  e8bd81f0          POP      {r4-r8,pc}
;;;235    
                          ENDP

000042  0000              DCW      0x0000
                  |L8.68|
000044  307800            DCB      "0x",0
000047  00                DCB      0

                          AREA ||i.UARTPuts||, CODE, READONLY, ALIGN=1

                  UARTPuts PROC
;;;90      **********************************************************************/
;;;91     void UARTPuts(LPC_UART_TypeDef *UARTx, const void *str)
000000  b570              PUSH     {r4-r6,lr}
;;;92     {
000002  4606              MOV      r6,r0
000004  460d              MOV      r5,r1
;;;93     	uint8_t *s = (uint8_t *) str;
000006  462c              MOV      r4,r5
;;;94     
;;;95     	while (*s)
000008  e004              B        |L9.20|
                  |L9.10|
;;;96     	{
;;;97     		UARTPutChar(UARTx, *s++);
00000a  f8141b01          LDRB     r1,[r4],#1
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       UARTPutChar
                  |L9.20|
000014  7820              LDRB     r0,[r4,#0]            ;95
000016  2800              CMP      r0,#0                 ;95
000018  d1f7              BNE      |L9.10|
;;;98     	}
;;;99     }
00001a  bd70              POP      {r4-r6,pc}
;;;100    
                          ENDP


                          AREA ||i.UARTPuts_||, CODE, READONLY, ALIGN=2

                  UARTPuts_ PROC
;;;107     **********************************************************************/
;;;108    void UARTPuts_(LPC_UART_TypeDef *UARTx, const void *str)
000000  b570              PUSH     {r4-r6,lr}
;;;109    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;110    	UARTPuts (UARTx, str);
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       UARTPuts
;;;111    	UARTPuts (UARTx, "\n\r");
00000e  a102              ADR      r1,|L10.24|
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       UARTPuts
;;;112    }
000016  bd70              POP      {r4-r6,pc}
;;;113    
                          ENDP

                  |L10.24|
000018  0a0d00            DCB      "\n\r",0
00001b  00                DCB      0

                          AREA ||i.debug_frmwrk_init||, CODE, READONLY, ALIGN=2

                  debug_frmwrk_init PROC
;;;258     **********************************************************************/
;;;259    void debug_frmwrk_init(void)
000000  b51f              PUSH     {r0-r4,lr}
;;;260    {
;;;261    	UART_CFG_Type UARTConfigStruct;
;;;262    	PINSEL_CFG_Type PinCfg;
;;;263    
;;;264    #if (USED_UART_DEBUG_PORT==0)
;;;265    	/*
;;;266    	 * Initialize UART0 pin connect
;;;267    	 */
;;;268    	PinCfg.Funcnum = 1;
000002  2001              MOVS     r0,#1
000004  f88d0002          STRB     r0,[sp,#2]
;;;269    	PinCfg.OpenDrain = 0;
000008  2000              MOVS     r0,#0
00000a  f88d0004          STRB     r0,[sp,#4]
;;;270    	PinCfg.Pinmode = 0;
00000e  f88d0003          STRB     r0,[sp,#3]
;;;271    	PinCfg.Pinnum = 2;
000012  2002              MOVS     r0,#2
000014  f88d0001          STRB     r0,[sp,#1]
;;;272    	PinCfg.Portnum = 0;
000018  2000              MOVS     r0,#0
00001a  f88d0000          STRB     r0,[sp,#0]
;;;273    	PINSEL_ConfigPin(&PinCfg);
00001e  4668              MOV      r0,sp
000020  f7fffffe          BL       PINSEL_ConfigPin
;;;274    	PinCfg.Pinnum = 3;
000024  2003              MOVS     r0,#3
000026  f88d0001          STRB     r0,[sp,#1]
;;;275    	PINSEL_ConfigPin(&PinCfg);
00002a  4668              MOV      r0,sp
00002c  f7fffffe          BL       PINSEL_ConfigPin
;;;276    
;;;277    #elif (USED_UART_DEBUG_PORT==1)
;;;278    	/*
;;;279    	 * Initialize UART1 pin connect
;;;280    	 */
;;;281    	PinCfg.Funcnum = 1;
;;;282    	PinCfg.OpenDrain = 0;
;;;283    	PinCfg.Pinmode = 0;
;;;284    	PinCfg.Pinnum = 15;
;;;285    	PinCfg.Portnum = 0;
;;;286    	PINSEL_ConfigPin(&PinCfg);
;;;287    	PinCfg.Pinnum = 16;
;;;288    	PINSEL_ConfigPin(&PinCfg);
;;;289    #endif
;;;290    
;;;291    	/* Initialize UART Configuration parameter structure to default state:
;;;292    	 * Baudrate = 9600bps
;;;293    	 * 8 data bit
;;;294    	 * 1 Stop bit
;;;295    	 * None parity
;;;296    	 */
;;;297    	UART_ConfigStructInit(&UARTConfigStruct);
000030  a802              ADD      r0,sp,#8
000032  f7fffffe          BL       UART_ConfigStructInit
;;;298    
;;;299    	// Re-configure baudrate to 115200bps
;;;300    	UARTConfigStruct.Baud_rate = 115200;
000036  f44f30e1          MOV      r0,#0x1c200
00003a  9002              STR      r0,[sp,#8]
;;;301    
;;;302    	// Initialize DEBUG_UART_PORT peripheral with given to corresponding parameter
;;;303    	UART_Init((LPC_UART_TypeDef *)DEBUG_UART_PORT, &UARTConfigStruct);
00003c  a902              ADD      r1,sp,#8
00003e  4813              LDR      r0,|L11.140|
000040  f7fffffe          BL       UART_Init
;;;304    
;;;305    	// Enable UART Transmit
;;;306    	UART_TxCmd((LPC_UART_TypeDef *)DEBUG_UART_PORT, ENABLE);
000044  2101              MOVS     r1,#1
000046  4811              LDR      r0,|L11.140|
000048  f7fffffe          BL       UART_TxCmd
;;;307    
;;;308    	_db_msg	= UARTPuts;
00004c  4810              LDR      r0,|L11.144|
00004e  4911              LDR      r1,|L11.148|
000050  6008              STR      r0,[r1,#0]  ; _db_msg
;;;309    	_db_msg_ = UARTPuts_;
000052  4811              LDR      r0,|L11.152|
000054  4911              LDR      r1,|L11.156|
000056  6008              STR      r0,[r1,#0]  ; _db_msg_
;;;310    	_db_char = UARTPutChar;
000058  4811              LDR      r0,|L11.160|
00005a  4912              LDR      r1,|L11.164|
00005c  6008              STR      r0,[r1,#0]  ; _db_char
;;;311    	_db_hex = UARTPutHex;
00005e  4812              LDR      r0,|L11.168|
000060  4912              LDR      r1,|L11.172|
000062  6008              STR      r0,[r1,#0]  ; _db_hex
;;;312    	_db_hex_16 = UARTPutHex16;
000064  4812              LDR      r0,|L11.176|
000066  4913              LDR      r1,|L11.180|
000068  6008              STR      r0,[r1,#0]  ; _db_hex_16
;;;313    	_db_hex_32 = UARTPutHex32;
00006a  4813              LDR      r0,|L11.184|
00006c  4913              LDR      r1,|L11.188|
00006e  6008              STR      r0,[r1,#0]  ; _db_hex_32
;;;314    	_db_dec = UARTPutDec;
000070  4813              LDR      r0,|L11.192|
000072  4914              LDR      r1,|L11.196|
000074  6008              STR      r0,[r1,#0]  ; _db_dec
;;;315    	_db_dec_16 = UARTPutDec16;
000076  4814              LDR      r0,|L11.200|
000078  4914              LDR      r1,|L11.204|
00007a  6008              STR      r0,[r1,#0]  ; _db_dec_16
;;;316    	_db_dec_32 = UARTPutDec32;
00007c  4814              LDR      r0,|L11.208|
00007e  4915              LDR      r1,|L11.212|
000080  6008              STR      r0,[r1,#0]  ; _db_dec_32
;;;317    	_db_get_char = UARTGetChar;
000082  4815              LDR      r0,|L11.216|
000084  4915              LDR      r1,|L11.220|
000086  6008              STR      r0,[r1,#0]  ; _db_get_char
;;;318    }
000088  bd1f              POP      {r0-r4,pc}
;;;319    #endif /*_DBGFWK */
                          ENDP

00008a  0000              DCW      0x0000
                  |L11.140|
                          DCD      0x4000c000
                  |L11.144|
                          DCD      UARTPuts
                  |L11.148|
                          DCD      _db_msg
                  |L11.152|
                          DCD      UARTPuts_
                  |L11.156|
                          DCD      _db_msg_
                  |L11.160|
                          DCD      UARTPutChar
                  |L11.164|
                          DCD      _db_char
                  |L11.168|
                          DCD      UARTPutHex
                  |L11.172|
                          DCD      _db_hex
                  |L11.176|
                          DCD      UARTPutHex16
                  |L11.180|
                          DCD      _db_hex_16
                  |L11.184|
                          DCD      UARTPutHex32
                  |L11.188|
                          DCD      _db_hex_32
                  |L11.192|
                          DCD      UARTPutDec
                  |L11.196|
                          DCD      _db_dec
                  |L11.200|
                          DCD      UARTPutDec16
                  |L11.204|
                          DCD      _db_dec_16
                  |L11.208|
                          DCD      UARTPutDec32
                  |L11.212|
                          DCD      _db_dec_32
                  |L11.216|
                          DCD      UARTGetChar
                  |L11.220|
                          DCD      _db_get_char

                          AREA ||.data||, DATA, ALIGN=2

                  _db_msg
                          DCD      0x00000000
                  _db_msg_
                          DCD      0x00000000
                  _db_char
                          DCD      0x00000000
                  _db_dec
                          DCD      0x00000000
                  _db_dec_16
                          DCD      0x00000000
                  _db_dec_32
                          DCD      0x00000000
                  _db_hex
                          DCD      0x00000000
                  _db_hex_16
                          DCD      0x00000000
                  _db_hex_32
                          DCD      0x00000000
                  _db_get_char
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "Lib\\Drivers\\source\\debug_frmwrk.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_debug_frmwrk_c_e73e2caf____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___14_debug_frmwrk_c_e73e2caf____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_debug_frmwrk_c_e73e2caf____REVSH|
#line 144
|__asm___14_debug_frmwrk_c_e73e2caf____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
