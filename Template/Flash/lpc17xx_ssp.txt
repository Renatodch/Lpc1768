; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\lpc17xx_ssp.o --asm_dir=.\Flash\ --list_dir=.\Flash\ --depend=.\flash\lpc17xx_ssp.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\Lib\Drivers\include -I.\Inc -I.\Lib\Usb_Drivers\Inc -I.\Lib\CLib__1_0_0_4\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\NXP\LPC17xx -D__UVISION_VERSION=525 --omf_browse=.\flash\lpc17xx_ssp.crf Lib\Drivers\source\lpc17xx_ssp.c]
                          THUMB

                          AREA ||i.SSP_ClearIntPending||, CODE, READONLY, ALIGN=2

                  SSP_ClearIntPending PROC
;;;644     **********************************************************************/
;;;645    void SSP_ClearIntPending(LPC_SSP_TypeDef *SSPx, uint32_t IntType)
000000  b570              PUSH     {r4-r6,lr}
;;;646    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;647    	CHECK_PARAM(PARAM_SSPx(SSPx));
000006  480c              LDR      r0,|L1.56|
000008  4284              CMP      r4,r0
00000a  d002              BEQ      |L1.18|
00000c  480b              LDR      r0,|L1.60|
00000e  4284              CMP      r4,r0
000010  d100              BNE      |L1.20|
                  |L1.18|
000012  e004              B        |L1.30|
                  |L1.20|
000014  f2402187          MOV      r1,#0x287
000018  a009              ADR      r0,|L1.64|
00001a  f7fffffe          BL       check_failed
                  |L1.30|
;;;648    	CHECK_PARAM(PARAM_SSP_INTCLR(IntType));
00001e  2d01              CMP      r5,#1
000020  d001              BEQ      |L1.38|
000022  2d02              CMP      r5,#2
000024  d100              BNE      |L1.40|
                  |L1.38|
000026  e004              B        |L1.50|
                  |L1.40|
000028  f44f7122          MOV      r1,#0x288
00002c  a004              ADR      r0,|L1.64|
00002e  f7fffffe          BL       check_failed
                  |L1.50|
;;;649    
;;;650    	SSPx->ICR = IntType;
000032  6225              STR      r5,[r4,#0x20]
;;;651    }
000034  bd70              POP      {r4-r6,pc}
;;;652    
                          ENDP

000036  0000              DCW      0x0000
                  |L1.56|
                          DCD      0x40088000
                  |L1.60|
                          DCD      0x40030000
                  |L1.64|
000040  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_ssp.c",0
000044  44726976
000048  6572735c
00004c  736f7572
000050  63655c6c
000054  70633137
000058  78785f73
00005c  73702e63
000060  00      
000061  00                DCB      0
000062  00                DCB      0
000063  00                DCB      0

                          AREA ||i.SSP_Cmd||, CODE, READONLY, ALIGN=2

                  SSP_Cmd PROC
;;;232     **********************************************************************/
;;;233    void SSP_Cmd(LPC_SSP_TypeDef* SSPx, FunctionalState NewState)
000000  b570              PUSH     {r4-r6,lr}
;;;234    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;235    	CHECK_PARAM(PARAM_SSPx(SSPx));
000006  480f              LDR      r0,|L2.68|
000008  4284              CMP      r4,r0
00000a  d002              BEQ      |L2.18|
00000c  480e              LDR      r0,|L2.72|
00000e  4284              CMP      r4,r0
000010  d100              BNE      |L2.20|
                  |L2.18|
000012  e003              B        |L2.28|
                  |L2.20|
000014  21eb              MOVS     r1,#0xeb
000016  a00d              ADR      r0,|L2.76|
000018  f7fffffe          BL       check_failed
                  |L2.28|
;;;236    	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
00001c  b10d              CBZ      r5,|L2.34|
00001e  2d01              CMP      r5,#1
000020  d100              BNE      |L2.36|
                  |L2.34|
000022  e003              B        |L2.44|
                  |L2.36|
000024  21ec              MOVS     r1,#0xec
000026  a009              ADR      r0,|L2.76|
000028  f7fffffe          BL       check_failed
                  |L2.44|
;;;237    
;;;238    	if (NewState == ENABLE)
00002c  2d01              CMP      r5,#1
00002e  d104              BNE      |L2.58|
;;;239    	{
;;;240    		SSPx->CR1 |= SSP_CR1_SSP_EN;
000030  6860              LDR      r0,[r4,#4]
000032  f0400002          ORR      r0,r0,#2
000036  6060              STR      r0,[r4,#4]
000038  e003              B        |L2.66|
                  |L2.58|
;;;241    	}
;;;242    	else
;;;243    	{
;;;244    		SSPx->CR1 &= (~SSP_CR1_SSP_EN) & SSP_CR1_BITMASK;
00003a  6860              LDR      r0,[r4,#4]
00003c  f000000d          AND      r0,r0,#0xd
000040  6060              STR      r0,[r4,#4]
                  |L2.66|
;;;245    	}
;;;246    }
000042  bd70              POP      {r4-r6,pc}
;;;247    
                          ENDP

                  |L2.68|
                          DCD      0x40088000
                  |L2.72|
                          DCD      0x40030000
                  |L2.76|
00004c  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_ssp.c",0
000050  44726976
000054  6572735c
000058  736f7572
00005c  63655c6c
000060  70633137
000064  78785f73
000068  73702e63
00006c  00      
00006d  00                DCB      0
00006e  00                DCB      0
00006f  00                DCB      0

                          AREA ||i.SSP_ConfigStructInit||, CODE, READONLY, ALIGN=2

                  SSP_ConfigStructInit PROC
;;;213    *******************************************************************************/
;;;214    void SSP_ConfigStructInit(SSP_CFG_Type *SSP_InitStruct)
000000  2100              MOVS     r1,#0
;;;215    {
;;;216    	SSP_InitStruct->CPHA = SSP_CPHA_FIRST;
000002  6041              STR      r1,[r0,#4]
;;;217    	SSP_InitStruct->CPOL = SSP_CPOL_HI;
000004  6081              STR      r1,[r0,#8]
;;;218    	SSP_InitStruct->ClockRate = 1000000;
000006  4904              LDR      r1,|L3.24|
000008  6141              STR      r1,[r0,#0x14]
;;;219    	SSP_InitStruct->Databit = SSP_DATABIT_8;
00000a  2107              MOVS     r1,#7
00000c  6001              STR      r1,[r0,#0]
;;;220    	SSP_InitStruct->Mode = SSP_MASTER_MODE;
00000e  2100              MOVS     r1,#0
000010  60c1              STR      r1,[r0,#0xc]
;;;221    	SSP_InitStruct->FrameFormat = SSP_FRAME_SPI;
000012  6101              STR      r1,[r0,#0x10]
;;;222    }
000014  4770              BX       lr
;;;223    
                          ENDP

000016  0000              DCW      0x0000
                  |L3.24|
                          DCD      0x000f4240

                          AREA ||i.SSP_DMACmd||, CODE, READONLY, ALIGN=2

                  SSP_DMACmd PROC
;;;666     **********************************************************************/
;;;667    void SSP_DMACmd(LPC_SSP_TypeDef *SSPx, uint32_t DMAMode, FunctionalState NewState)
000000  b570              PUSH     {r4-r6,lr}
;;;668    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;669    	CHECK_PARAM(PARAM_SSPx(SSPx));
000008  4815              LDR      r0,|L4.96|
00000a  4284              CMP      r4,r0
00000c  d002              BEQ      |L4.20|
00000e  4815              LDR      r0,|L4.100|
000010  4284              CMP      r4,r0
000012  d100              BNE      |L4.22|
                  |L4.20|
000014  e004              B        |L4.32|
                  |L4.22|
000016  f240219d          MOV      r1,#0x29d
00001a  a013              ADR      r0,|L4.104|
00001c  f7fffffe          BL       check_failed
                  |L4.32|
;;;670    	CHECK_PARAM(PARAM_SSP_DMA(DMAMode));
000020  2d02              CMP      r5,#2
000022  d001              BEQ      |L4.40|
000024  2d01              CMP      r5,#1
000026  d100              BNE      |L4.42|
                  |L4.40|
000028  e004              B        |L4.52|
                  |L4.42|
00002a  f240219e          MOV      r1,#0x29e
00002e  a00e              ADR      r0,|L4.104|
000030  f7fffffe          BL       check_failed
                  |L4.52|
;;;671    	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
000034  b10e              CBZ      r6,|L4.58|
000036  2e01              CMP      r6,#1
000038  d100              BNE      |L4.60|
                  |L4.58|
00003a  e004              B        |L4.70|
                  |L4.60|
00003c  f240219f          MOV      r1,#0x29f
000040  a009              ADR      r0,|L4.104|
000042  f7fffffe          BL       check_failed
                  |L4.70|
;;;672    
;;;673    	if (NewState == ENABLE)
000046  2e01              CMP      r6,#1
000048  d103              BNE      |L4.82|
;;;674    	{
;;;675    		SSPx->DMACR |= DMAMode;
00004a  6a60              LDR      r0,[r4,#0x24]
00004c  4328              ORRS     r0,r0,r5
00004e  6260              STR      r0,[r4,#0x24]
000050  e004              B        |L4.92|
                  |L4.82|
;;;676    	}
;;;677    	else
;;;678    	{
;;;679    		SSPx->DMACR &= (~DMAMode) & SSP_DMA_BITMASK;
000052  6a60              LDR      r0,[r4,#0x24]
000054  2103              MOVS     r1,#3
000056  43a9              BICS     r1,r1,r5
000058  4008              ANDS     r0,r0,r1
00005a  6260              STR      r0,[r4,#0x24]
                  |L4.92|
;;;680    	}
;;;681    }
00005c  bd70              POP      {r4-r6,pc}
;;;682    
                          ENDP

00005e  0000              DCW      0x0000
                  |L4.96|
                          DCD      0x40088000
                  |L4.100|
                          DCD      0x40030000
                  |L4.104|
000068  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_ssp.c",0
00006c  44726976
000070  6572735c
000074  736f7572
000078  63655c6c
00007c  70633137
000080  78785f73
000084  73702e63
000088  00      
000089  00                DCB      0
00008a  00                DCB      0
00008b  00                DCB      0

                          AREA ||i.SSP_DeInit||, CODE, READONLY, ALIGN=2

                  SSP_DeInit PROC
;;;171     **********************************************************************/
;;;172    void SSP_DeInit(LPC_SSP_TypeDef* SSPx)
000000  b510              PUSH     {r4,lr}
;;;173    {
000002  4604              MOV      r4,r0
;;;174    	CHECK_PARAM(PARAM_SSPx(SSPx));
000004  480d              LDR      r0,|L5.60|
000006  4284              CMP      r4,r0
000008  d002              BEQ      |L5.16|
00000a  480d              LDR      r0,|L5.64|
00000c  4284              CMP      r4,r0
00000e  d100              BNE      |L5.18|
                  |L5.16|
000010  e003              B        |L5.26|
                  |L5.18|
000012  21ae              MOVS     r1,#0xae
000014  a00b              ADR      r0,|L5.68|
000016  f7fffffe          BL       check_failed
                  |L5.26|
;;;175    
;;;176    	if (SSPx == LPC_SSP0){
00001a  4808              LDR      r0,|L5.60|
00001c  4284              CMP      r4,r0
00001e  d105              BNE      |L5.44|
;;;177    		/* Set up clock and power for SSP0 module */
;;;178    		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCSSP0, DISABLE);
000020  2100              MOVS     r1,#0
000022  f44f1000          MOV      r0,#0x200000
000026  f7fffffe          BL       CLKPWR_ConfigPPWR
00002a  e006              B        |L5.58|
                  |L5.44|
;;;179    	} else if (SSPx == LPC_SSP1) {
00002c  4804              LDR      r0,|L5.64|
00002e  4284              CMP      r4,r0
000030  d103              BNE      |L5.58|
;;;180    		/* Set up clock and power for SSP1 module */
;;;181    		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCSSP1, DISABLE);
000032  2100              MOVS     r1,#0
000034  1500              ASRS     r0,r0,#20
000036  f7fffffe          BL       CLKPWR_ConfigPPWR
                  |L5.58|
;;;182    	}
;;;183    }
00003a  bd10              POP      {r4,pc}
;;;184    
                          ENDP

                  |L5.60|
                          DCD      0x40088000
                  |L5.64|
                          DCD      0x40030000
                  |L5.68|
000044  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_ssp.c",0
000048  44726976
00004c  6572735c
000050  736f7572
000054  63655c6c
000058  70633137
00005c  78785f73
000060  73702e63
000064  00      
000065  00                DCB      0
000066  00                DCB      0
000067  00                DCB      0

                          AREA ||i.SSP_GetDataSize||, CODE, READONLY, ALIGN=2

                  SSP_GetDataSize PROC
;;;195    *******************************************************************************/
;;;196    uint8_t SSP_GetDataSize(LPC_SSP_TypeDef* SSPx)
000000  b510              PUSH     {r4,lr}
;;;197    {
000002  4604              MOV      r4,r0
;;;198    	CHECK_PARAM(PARAM_SSPx(SSPx));
000004  4807              LDR      r0,|L6.36|
000006  4284              CMP      r4,r0
000008  d002              BEQ      |L6.16|
00000a  4807              LDR      r0,|L6.40|
00000c  4284              CMP      r4,r0
00000e  d100              BNE      |L6.18|
                  |L6.16|
000010  e003              B        |L6.26|
                  |L6.18|
000012  21c6              MOVS     r1,#0xc6
000014  a005              ADR      r0,|L6.44|
000016  f7fffffe          BL       check_failed
                  |L6.26|
;;;199    	return (SSPx->CR0 & (0xF));
00001a  6820              LDR      r0,[r4,#0]
00001c  f000000f          AND      r0,r0,#0xf
;;;200    }
000020  bd10              POP      {r4,pc}
;;;201    
                          ENDP

000022  0000              DCW      0x0000
                  |L6.36|
                          DCD      0x40088000
                  |L6.40|
                          DCD      0x40030000
                  |L6.44|
00002c  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_ssp.c",0
000030  44726976
000034  6572735c
000038  736f7572
00003c  63655c6c
000040  70633137
000044  78785f73
000048  73702e63
00004c  00      
00004d  00                DCB      0
00004e  00                DCB      0
00004f  00                DCB      0

                          AREA ||i.SSP_GetIntStatus||, CODE, READONLY, ALIGN=2

                  SSP_GetIntStatus PROC
;;;624     **********************************************************************/
;;;625    IntStatus SSP_GetIntStatus (LPC_SSP_TypeDef *SSPx, uint32_t IntType)
000000  b570              PUSH     {r4-r6,lr}
;;;626    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;627    	CHECK_PARAM(PARAM_SSPx(SSPx));
000006  4810              LDR      r0,|L7.72|
000008  4285              CMP      r5,r0
00000a  d002              BEQ      |L7.18|
00000c  480f              LDR      r0,|L7.76|
00000e  4285              CMP      r5,r0
000010  d100              BNE      |L7.20|
                  |L7.18|
000012  e004              B        |L7.30|
                  |L7.20|
000014  f2402173          MOV      r1,#0x273
000018  a00d              ADR      r0,|L7.80|
00001a  f7fffffe          BL       check_failed
                  |L7.30|
;;;628    	CHECK_PARAM(PARAM_SSP_INTSTAT(IntType));
00001e  2c01              CMP      r4,#1
000020  d005              BEQ      |L7.46|
000022  2c02              CMP      r4,#2
000024  d003              BEQ      |L7.46|
000026  2c04              CMP      r4,#4
000028  d001              BEQ      |L7.46|
00002a  2c08              CMP      r4,#8
00002c  d100              BNE      |L7.48|
                  |L7.46|
00002e  e004              B        |L7.58|
                  |L7.48|
000030  f44f711d          MOV      r1,#0x274
000034  a006              ADR      r0,|L7.80|
000036  f7fffffe          BL       check_failed
                  |L7.58|
;;;629    
;;;630    	return ((SSPx->MIS & IntType) ? SET :RESET);
00003a  69e8              LDR      r0,[r5,#0x1c]
00003c  4020              ANDS     r0,r0,r4
00003e  b108              CBZ      r0,|L7.68|
000040  2001              MOVS     r0,#1
                  |L7.66|
;;;631    }
000042  bd70              POP      {r4-r6,pc}
                  |L7.68|
000044  2000              MOVS     r0,#0                 ;630
000046  e7fc              B        |L7.66|
;;;632    
                          ENDP

                  |L7.72|
                          DCD      0x40088000
                  |L7.76|
                          DCD      0x40030000
                  |L7.80|
000050  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_ssp.c",0
000054  44726976
000058  6572735c
00005c  736f7572
000060  63655c6c
000064  70633137
000068  78785f73
00006c  73702e63
000070  00      
000071  00                DCB      0
000072  00                DCB      0
000073  00                DCB      0

                          AREA ||i.SSP_GetRawIntStatus||, CODE, READONLY, ALIGN=2

                  SSP_GetRawIntStatus PROC
;;;588     **********************************************************************/
;;;589    IntStatus SSP_GetRawIntStatus(LPC_SSP_TypeDef *SSPx, uint32_t RawIntType)
000000  b570              PUSH     {r4-r6,lr}
;;;590    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;591    	CHECK_PARAM(PARAM_SSPx(SSPx));
000006  4810              LDR      r0,|L8.72|
000008  4285              CMP      r5,r0
00000a  d002              BEQ      |L8.18|
00000c  480f              LDR      r0,|L8.76|
00000e  4285              CMP      r5,r0
000010  d100              BNE      |L8.20|
                  |L8.18|
000012  e004              B        |L8.30|
                  |L8.20|
000014  f240214f          MOV      r1,#0x24f
000018  a00d              ADR      r0,|L8.80|
00001a  f7fffffe          BL       check_failed
                  |L8.30|
;;;592    	CHECK_PARAM(PARAM_SSP_INTSTAT_RAW(RawIntType));
00001e  2c01              CMP      r4,#1
000020  d005              BEQ      |L8.46|
000022  2c02              CMP      r4,#2
000024  d003              BEQ      |L8.46|
000026  2c04              CMP      r4,#4
000028  d001              BEQ      |L8.46|
00002a  2c08              CMP      r4,#8
00002c  d100              BNE      |L8.48|
                  |L8.46|
00002e  e004              B        |L8.58|
                  |L8.48|
000030  f44f7114          MOV      r1,#0x250
000034  a006              ADR      r0,|L8.80|
000036  f7fffffe          BL       check_failed
                  |L8.58|
;;;593    
;;;594    	return ((SSPx->RIS & RawIntType) ? SET : RESET);
00003a  69a8              LDR      r0,[r5,#0x18]
00003c  4020              ANDS     r0,r0,r4
00003e  b108              CBZ      r0,|L8.68|
000040  2001              MOVS     r0,#1
                  |L8.66|
;;;595    }
000042  bd70              POP      {r4-r6,pc}
                  |L8.68|
000044  2000              MOVS     r0,#0                 ;594
000046  e7fc              B        |L8.66|
;;;596    
                          ENDP

                  |L8.72|
                          DCD      0x40088000
                  |L8.76|
                          DCD      0x40030000
                  |L8.80|
000050  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_ssp.c",0
000054  44726976
000058  6572735c
00005c  736f7572
000060  63655c6c
000064  70633137
000068  78785f73
00006c  73702e63
000070  00      
000071  00                DCB      0
000072  00                DCB      0
000073  00                DCB      0

                          AREA ||i.SSP_GetRawIntStatusReg||, CODE, READONLY, ALIGN=2

                  SSP_GetRawIntStatusReg PROC
;;;603     **********************************************************************/
;;;604    uint32_t SSP_GetRawIntStatusReg(LPC_SSP_TypeDef *SSPx)
000000  b510              PUSH     {r4,lr}
;;;605    {
000002  4604              MOV      r4,r0
;;;606    	CHECK_PARAM(PARAM_SSPx(SSPx));
000004  4806              LDR      r0,|L9.32|
000006  4284              CMP      r4,r0
000008  d002              BEQ      |L9.16|
00000a  4806              LDR      r0,|L9.36|
00000c  4284              CMP      r4,r0
00000e  d100              BNE      |L9.18|
                  |L9.16|
000010  e004              B        |L9.28|
                  |L9.18|
000012  f240215e          MOV      r1,#0x25e
000016  a004              ADR      r0,|L9.40|
000018  f7fffffe          BL       check_failed
                  |L9.28|
;;;607    	return (SSPx->RIS);
00001c  69a0              LDR      r0,[r4,#0x18]
;;;608    }
00001e  bd10              POP      {r4,pc}
;;;609    
                          ENDP

                  |L9.32|
                          DCD      0x40088000
                  |L9.36|
                          DCD      0x40030000
                  |L9.40|
000028  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_ssp.c",0
00002c  44726976
000030  6572735c
000034  736f7572
000038  63655c6c
00003c  70633137
000040  78785f73
000044  73702e63
000048  00      
000049  00                DCB      0
00004a  00                DCB      0
00004b  00                DCB      0

                          AREA ||i.SSP_GetStatus||, CODE, READONLY, ALIGN=2

                  SSP_GetStatus PROC
;;;535     **********************************************************************/
;;;536    FlagStatus SSP_GetStatus(LPC_SSP_TypeDef* SSPx, uint32_t FlagType)
000000  b570              PUSH     {r4-r6,lr}
;;;537    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;538    	CHECK_PARAM(PARAM_SSPx(SSPx));
000006  4811              LDR      r0,|L10.76|
000008  4285              CMP      r5,r0
00000a  d002              BEQ      |L10.18|
00000c  4810              LDR      r0,|L10.80|
00000e  4285              CMP      r5,r0
000010  d100              BNE      |L10.20|
                  |L10.18|
000012  e004              B        |L10.30|
                  |L10.20|
000014  f240211a          MOV      r1,#0x21a
000018  a00e              ADR      r0,|L10.84|
00001a  f7fffffe          BL       check_failed
                  |L10.30|
;;;539    	CHECK_PARAM(PARAM_SSP_STAT(FlagType));
00001e  2c01              CMP      r4,#1
000020  d007              BEQ      |L10.50|
000022  2c02              CMP      r4,#2
000024  d005              BEQ      |L10.50|
000026  2c04              CMP      r4,#4
000028  d003              BEQ      |L10.50|
00002a  2c08              CMP      r4,#8
00002c  d001              BEQ      |L10.50|
00002e  2c10              CMP      r4,#0x10
000030  d100              BNE      |L10.52|
                  |L10.50|
000032  e004              B        |L10.62|
                  |L10.52|
000034  f240211b          MOV      r1,#0x21b
000038  a006              ADR      r0,|L10.84|
00003a  f7fffffe          BL       check_failed
                  |L10.62|
;;;540    
;;;541    	return ((SSPx->SR & FlagType) ? SET : RESET);
00003e  68e8              LDR      r0,[r5,#0xc]
000040  4020              ANDS     r0,r0,r4
000042  b108              CBZ      r0,|L10.72|
000044  2001              MOVS     r0,#1
                  |L10.70|
;;;542    }
000046  bd70              POP      {r4-r6,pc}
                  |L10.72|
000048  2000              MOVS     r0,#0                 ;541
00004a  e7fc              B        |L10.70|
;;;543    
                          ENDP

                  |L10.76|
                          DCD      0x40088000
                  |L10.80|
                          DCD      0x40030000
                  |L10.84|
000054  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_ssp.c",0
000058  44726976
00005c  6572735c
000060  736f7572
000064  63655c6c
000068  70633137
00006c  78785f73
000070  73702e63
000074  00      
000075  00                DCB      0
000076  00                DCB      0
000077  00                DCB      0

                          AREA ||i.SSP_Init||, CODE, READONLY, ALIGN=2

                  SSP_Init PROC
;;;130     *********************************************************************/
;;;131    void SSP_Init(LPC_SSP_TypeDef *SSPx, SSP_CFG_Type *SSP_ConfigStruct)
000000  b570              PUSH     {r4-r6,lr}
;;;132    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;133    	uint32_t tmp;
;;;134    
;;;135    	CHECK_PARAM(PARAM_SSPx(SSPx));
000006  4817              LDR      r0,|L11.100|
000008  4284              CMP      r4,r0
00000a  d002              BEQ      |L11.18|
00000c  4816              LDR      r0,|L11.104|
00000e  4284              CMP      r4,r0
000010  d100              BNE      |L11.20|
                  |L11.18|
000012  e003              B        |L11.28|
                  |L11.20|
000014  2187              MOVS     r1,#0x87
000016  a015              ADR      r0,|L11.108|
000018  f7fffffe          BL       check_failed
                  |L11.28|
;;;136    
;;;137    	if(SSPx == LPC_SSP0) {
00001c  4811              LDR      r0,|L11.100|
00001e  4284              CMP      r4,r0
000020  d104              BNE      |L11.44|
;;;138    		/* Set up clock and power for SSP0 module */
;;;139    		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCSSP0, ENABLE);
000022  2101              MOVS     r1,#1
000024  0548              LSLS     r0,r1,#21
000026  f7fffffe          BL       CLKPWR_ConfigPPWR
00002a  e008              B        |L11.62|
                  |L11.44|
;;;140    	} else if(SSPx == LPC_SSP1) {
00002c  480e              LDR      r0,|L11.104|
00002e  4284              CMP      r4,r0
000030  d104              BNE      |L11.60|
;;;141    		/* Set up clock and power for SSP1 module */
;;;142    		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCSSP1, ENABLE);
000032  2101              MOVS     r1,#1
000034  1500              ASRS     r0,r0,#20
000036  f7fffffe          BL       CLKPWR_ConfigPPWR
00003a  e000              B        |L11.62|
                  |L11.60|
;;;143    	} else {
;;;144    		return;
;;;145    	}
;;;146    
;;;147    	/* Configure SSP, interrupt is disable, LoopBack mode is disable,
;;;148    	 * SSP is disable, Slave output is disable as default
;;;149    	 */
;;;150    	tmp = ((SSP_ConfigStruct->CPHA) | (SSP_ConfigStruct->CPOL) \
;;;151    		| (SSP_ConfigStruct->FrameFormat) | (SSP_ConfigStruct->Databit))
;;;152    		& SSP_CR0_BITMASK;
;;;153    	// write back to SSP control register
;;;154    	SSPx->CR0 = tmp;
;;;155    
;;;156    	tmp = SSP_ConfigStruct->Mode & SSP_CR1_BITMASK;
;;;157    	// Write back to CR1
;;;158    	SSPx->CR1 = tmp;
;;;159    
;;;160    	// Set clock rate for SSP peripheral
;;;161    	setSSPclock(SSPx, SSP_ConfigStruct->ClockRate);
;;;162    }
00003c  bd70              POP      {r4-r6,pc}
                  |L11.62|
00003e  88a8              LDRH     r0,[r5,#4]            ;150
000040  8929              LDRH     r1,[r5,#8]            ;150
000042  4308              ORRS     r0,r0,r1              ;150
000044  8a29              LDRH     r1,[r5,#0x10]         ;150
000046  4308              ORRS     r0,r0,r1              ;150
000048  8829              LDRH     r1,[r5,#0]            ;150
00004a  4308              ORRS     r0,r0,r1              ;150
00004c  b286              UXTH     r6,r0                 ;150
00004e  6026              STR      r6,[r4,#0]            ;154
000050  7b28              LDRB     r0,[r5,#0xc]          ;156
000052  f000060f          AND      r6,r0,#0xf            ;156
000056  6066              STR      r6,[r4,#4]            ;158
000058  4620              MOV      r0,r4                 ;161
00005a  6969              LDR      r1,[r5,#0x14]         ;161
00005c  f7fffffe          BL       setSSPclock
000060  bf00              NOP      
000062  e7eb              B        |L11.60|
;;;163    
                          ENDP

                  |L11.100|
                          DCD      0x40088000
                  |L11.104|
                          DCD      0x40030000
                  |L11.108|
00006c  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_ssp.c",0
000070  44726976
000074  6572735c
000078  736f7572
00007c  63655c6c
000080  70633137
000084  78785f73
000088  73702e63
00008c  00      
00008d  00                DCB      0
00008e  00                DCB      0
00008f  00                DCB      0

                          AREA ||i.SSP_IntConfig||, CODE, READONLY, ALIGN=2

                  SSP_IntConfig PROC
;;;559     **********************************************************************/
;;;560    void SSP_IntConfig(LPC_SSP_TypeDef *SSPx, uint32_t IntType, FunctionalState NewState)
000000  b570              PUSH     {r4-r6,lr}
;;;561    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;562    	CHECK_PARAM(PARAM_SSPx(SSPx));
000008  480b              LDR      r0,|L12.56|
00000a  4284              CMP      r4,r0
00000c  d002              BEQ      |L12.20|
00000e  480b              LDR      r0,|L12.60|
000010  4284              CMP      r4,r0
000012  d100              BNE      |L12.22|
                  |L12.20|
000014  e004              B        |L12.32|
                  |L12.22|
000016  f2402132          MOV      r1,#0x232
00001a  a009              ADR      r0,|L12.64|
00001c  f7fffffe          BL       check_failed
                  |L12.32|
;;;563    
;;;564    	if (NewState == ENABLE)
000020  2e01              CMP      r6,#1
000022  d103              BNE      |L12.44|
;;;565    	{
;;;566    		SSPx->IMSC |= IntType;
000024  6960              LDR      r0,[r4,#0x14]
000026  4328              ORRS     r0,r0,r5
000028  6160              STR      r0,[r4,#0x14]
00002a  e004              B        |L12.54|
                  |L12.44|
;;;567    	}
;;;568    	else
;;;569    	{
;;;570    		SSPx->IMSC &= (~IntType) & SSP_IMSC_BITMASK;
00002c  6960              LDR      r0,[r4,#0x14]
00002e  210f              MOVS     r1,#0xf
000030  43a9              BICS     r1,r1,r5
000032  4008              ANDS     r0,r0,r1
000034  6160              STR      r0,[r4,#0x14]
                  |L12.54|
;;;571    	}
;;;572    }
000036  bd70              POP      {r4-r6,pc}
;;;573    
                          ENDP

                  |L12.56|
                          DCD      0x40088000
                  |L12.60|
                          DCD      0x40030000
                  |L12.64|
000040  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_ssp.c",0
000044  44726976
000048  6572735c
00004c  736f7572
000050  63655c6c
000054  70633137
000058  78785f73
00005c  73702e63
000060  00      
000061  00                DCB      0
000062  00                DCB      0
000063  00                DCB      0

                          AREA ||i.SSP_LoopBackCmd||, CODE, READONLY, ALIGN=2

                  SSP_LoopBackCmd PROC
;;;257     **********************************************************************/
;;;258    void SSP_LoopBackCmd(LPC_SSP_TypeDef* SSPx, FunctionalState NewState)
000000  b570              PUSH     {r4-r6,lr}
;;;259    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;260    	CHECK_PARAM(PARAM_SSPx(SSPx));
000006  4810              LDR      r0,|L13.72|
000008  4284              CMP      r4,r0
00000a  d002              BEQ      |L13.18|
00000c  480f              LDR      r0,|L13.76|
00000e  4284              CMP      r4,r0
000010  d100              BNE      |L13.20|
                  |L13.18|
000012  e004              B        |L13.30|
                  |L13.20|
000014  f44f7182          MOV      r1,#0x104
000018  a00d              ADR      r0,|L13.80|
00001a  f7fffffe          BL       check_failed
                  |L13.30|
;;;261    	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
00001e  b10d              CBZ      r5,|L13.36|
000020  2d01              CMP      r5,#1
000022  d100              BNE      |L13.38|
                  |L13.36|
000024  e004              B        |L13.48|
                  |L13.38|
000026  f2401105          MOV      r1,#0x105
00002a  a009              ADR      r0,|L13.80|
00002c  f7fffffe          BL       check_failed
                  |L13.48|
;;;262    
;;;263    	if (NewState == ENABLE)
000030  2d01              CMP      r5,#1
000032  d104              BNE      |L13.62|
;;;264    	{
;;;265    		SSPx->CR1 |= SSP_CR1_LBM_EN;
000034  6860              LDR      r0,[r4,#4]
000036  f0400001          ORR      r0,r0,#1
00003a  6060              STR      r0,[r4,#4]
00003c  e003              B        |L13.70|
                  |L13.62|
;;;266    	}
;;;267    	else
;;;268    	{
;;;269    		SSPx->CR1 &= (~SSP_CR1_LBM_EN) & SSP_CR1_BITMASK;
00003e  6860              LDR      r0,[r4,#4]
000040  f000000e          AND      r0,r0,#0xe
000044  6060              STR      r0,[r4,#4]
                  |L13.70|
;;;270    	}
;;;271    }
000046  bd70              POP      {r4-r6,pc}
;;;272    
                          ENDP

                  |L13.72|
                          DCD      0x40088000
                  |L13.76|
                          DCD      0x40030000
                  |L13.80|
000050  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_ssp.c",0
000054  44726976
000058  6572735c
00005c  736f7572
000060  63655c6c
000064  70633137
000068  78785f73
00006c  73702e63
000070  00      
000071  00                DCB      0
000072  00                DCB      0
000073  00                DCB      0

                          AREA ||i.SSP_ReadWrite||, CODE, READONLY, ALIGN=1

                  SSP_ReadWrite PROC
;;;350     ***********************************************************************/
;;;351    int32_t SSP_ReadWrite (LPC_SSP_TypeDef *SSPx, SSP_DATA_SETUP_Type *dataCfg, \
000000  e92d4ff7          PUSH     {r0-r2,r4-r11,lr}
;;;352    						SSP_TRANSFER_Type xfType)
;;;353    {
000004  b082              SUB      sp,sp,#8
000006  4606              MOV      r6,r0
000008  460c              MOV      r4,r1
;;;354    	uint8_t *rdata8;
;;;355        uint8_t *wdata8;
;;;356    	uint16_t *rdata16;
;;;357        uint16_t *wdata16;
;;;358        uint32_t stat;
;;;359        uint32_t tmp;
;;;360        int32_t dataword;
;;;361    
;;;362        dataCfg->rx_cnt = 0;
00000a  2000              MOVS     r0,#0
00000c  60e0              STR      r0,[r4,#0xc]
;;;363        dataCfg->tx_cnt = 0;
00000e  6060              STR      r0,[r4,#4]
;;;364        dataCfg->status = 0;
000010  6160              STR      r0,[r4,#0x14]
;;;365    
;;;366    
;;;367    	/* Clear all remaining data in RX FIFO */
;;;368    	while (SSPx->SR & SSP_SR_RNE){
000012  e003              B        |L14.28|
                  |L14.20|
;;;369    		tmp = (uint32_t) SSP_ReceiveData(SSPx);
000014  4630              MOV      r0,r6
000016  f7fffffe          BL       SSP_ReceiveData
00001a  4607              MOV      r7,r0
                  |L14.28|
00001c  68f0              LDR      r0,[r6,#0xc]          ;368
00001e  f0000004          AND      r0,r0,#4              ;368
000022  2800              CMP      r0,#0                 ;368
000024  d1f6              BNE      |L14.20|
;;;370    	}
;;;371    
;;;372    	// Clear status
;;;373    	SSPx->ICR = SSP_ICR_BITMASK;
000026  2003              MOVS     r0,#3
000028  6230              STR      r0,[r6,#0x20]
;;;374    	if(SSP_GetDataSize(SSPx)>SSP_DATABIT_8)
00002a  4630              MOV      r0,r6
00002c  f7fffffe          BL       SSP_GetDataSize
000030  2807              CMP      r0,#7
000032  d901              BLS      |L14.56|
;;;375    		dataword = 1;
000034  2501              MOVS     r5,#1
000036  e000              B        |L14.58|
                  |L14.56|
;;;376    	else dataword = 0;
000038  2500              MOVS     r5,#0
                  |L14.58|
;;;377    
;;;378    	// Polling mode ----------------------------------------------------------------------
;;;379    	if (xfType == SSP_TRANSFER_POLLING){
00003a  9804              LDR      r0,[sp,#0x10]
00003c  2800              CMP      r0,#0
00003e  d17a              BNE      |L14.310|
;;;380    		if (dataword == 0){
000040  b925              CBNZ     r5,|L14.76|
;;;381    			rdata8 = (uint8_t *)dataCfg->rx_data;
000042  f8d49008          LDR      r9,[r4,#8]
;;;382    			wdata8 = (uint8_t *)dataCfg->tx_data;
000046  f8d4a000          LDR      r10,[r4,#0]
00004a  e003              B        |L14.84|
                  |L14.76|
;;;383    		} else {
;;;384    			rdata16 = (uint16_t *)dataCfg->rx_data;
00004c  f8d4b008          LDR      r11,[r4,#8]
;;;385    			wdata16 = (uint16_t *)dataCfg->tx_data;
000050  6820              LDR      r0,[r4,#0]
000052  9001              STR      r0,[sp,#4]
                  |L14.84|
;;;386    		}
;;;387    		while ((dataCfg->tx_cnt < dataCfg->length) || (dataCfg->rx_cnt < dataCfg->length)){
000054  e060              B        |L14.280|
                  |L14.86|
;;;388    			if ((SSPx->SR & SSP_SR_TNF) && (dataCfg->tx_cnt < dataCfg->length)){
000056  68f0              LDR      r0,[r6,#0xc]
000058  f0000002          AND      r0,r0,#2
00005c  b310              CBZ      r0,|L14.164|
00005e  6921              LDR      r1,[r4,#0x10]
000060  6860              LDR      r0,[r4,#4]
000062  4288              CMP      r0,r1
000064  d22a              BCS      |L14.188|
;;;389    				// Write data to buffer
;;;390    				if(dataCfg->tx_data == NULL){
000066  6820              LDR      r0,[r4,#0]
000068  b988              CBNZ     r0,|L14.142|
;;;391    					if (dataword == 0){
00006a  b93d              CBNZ     r5,|L14.124|
;;;392    						SSP_SendData(SSPx, 0xFF);
00006c  21ff              MOVS     r1,#0xff
00006e  4630              MOV      r0,r6
000070  f7fffffe          BL       SSP_SendData
;;;393    						dataCfg->tx_cnt++;
000074  6860              LDR      r0,[r4,#4]
000076  1c40              ADDS     r0,r0,#1
000078  6060              STR      r0,[r4,#4]
00007a  e01f              B        |L14.188|
                  |L14.124|
;;;394    					} else {
;;;395    						SSP_SendData(SSPx, 0xFFFF);
00007c  f64f71ff          MOV      r1,#0xffff
000080  4630              MOV      r0,r6
000082  f7fffffe          BL       SSP_SendData
;;;396    						dataCfg->tx_cnt += 2;
000086  6860              LDR      r0,[r4,#4]
000088  1c80              ADDS     r0,r0,#2
00008a  6060              STR      r0,[r4,#4]
00008c  e016              B        |L14.188|
                  |L14.142|
;;;397    					}
;;;398    				} else {
;;;399    					if (dataword == 0){
00008e  b955              CBNZ     r5,|L14.166|
;;;400    						SSP_SendData(SSPx, *wdata8);
000090  f89a1000          LDRB     r1,[r10,#0]
000094  4630              MOV      r0,r6
000096  f7fffffe          BL       SSP_SendData
;;;401    						wdata8++;
00009a  f10a0a01          ADD      r10,r10,#1
;;;402    						dataCfg->tx_cnt++;
00009e  6860              LDR      r0,[r4,#4]
0000a0  1c40              ADDS     r0,r0,#1
0000a2  6060              STR      r0,[r4,#4]
                  |L14.164|
0000a4  e00a              B        |L14.188|
                  |L14.166|
;;;403    					} else {
;;;404    						SSP_SendData(SSPx, *wdata16);
0000a6  9801              LDR      r0,[sp,#4]
0000a8  8801              LDRH     r1,[r0,#0]
0000aa  4630              MOV      r0,r6
0000ac  f7fffffe          BL       SSP_SendData
;;;405    						wdata16++;
0000b0  9801              LDR      r0,[sp,#4]
0000b2  1c80              ADDS     r0,r0,#2
0000b4  9001              STR      r0,[sp,#4]
;;;406    						dataCfg->tx_cnt += 2;
0000b6  6860              LDR      r0,[r4,#4]
0000b8  1c80              ADDS     r0,r0,#2
0000ba  6060              STR      r0,[r4,#4]
                  |L14.188|
;;;407    					}
;;;408    				}
;;;409    			}
;;;410    
;;;411    			// Check overrun error
;;;412    			if ((stat = SSPx->RIS) & SSP_RIS_ROR){
0000bc  f8d68018          LDR      r8,[r6,#0x18]
0000c0  f0080001          AND      r0,r8,#1
0000c4  b138              CBZ      r0,|L14.214|
;;;413    				// save status and return
;;;414    				dataCfg->status = stat | SSP_STAT_ERROR;
0000c6  f4487000          ORR      r0,r8,#0x200
0000ca  6160              STR      r0,[r4,#0x14]
;;;415    				return (-1);
0000cc  f04f30ff          MOV      r0,#0xffffffff
                  |L14.208|
;;;416    			}
;;;417    
;;;418    			// Check for any data available in RX FIFO
;;;419    			while ((SSPx->SR & SSP_SR_RNE) && (dataCfg->rx_cnt < dataCfg->length)){
;;;420    				// Read data from SSP data
;;;421    				tmp = SSP_ReceiveData(SSPx);
;;;422    
;;;423    				// Store data to destination
;;;424    				if (dataCfg->rx_data != NULL)
;;;425    				{
;;;426    					if (dataword == 0){
;;;427    						*(rdata8) = (uint8_t) tmp;
;;;428    						rdata8++;
;;;429    					} else {
;;;430    						*(rdata16) = (uint16_t) tmp;
;;;431    						rdata16++;
;;;432    					}
;;;433    				}
;;;434    				// Increase counter
;;;435    				if (dataword == 0){
;;;436    					dataCfg->rx_cnt++;
;;;437    				} else {
;;;438    					dataCfg->rx_cnt += 2;
;;;439    				}
;;;440    			}
;;;441    		}
;;;442    
;;;443    		// save status
;;;444    		dataCfg->status = SSP_STAT_DONE;
;;;445    
;;;446    		if (dataCfg->tx_data != NULL){
;;;447    			return dataCfg->tx_cnt;
;;;448    		} else if (dataCfg->rx_data != NULL){
;;;449    			return dataCfg->rx_cnt;
;;;450    		} else {
;;;451    			return (0);
;;;452    		}
;;;453    	}
;;;454    
;;;455    	// Interrupt mode ----------------------------------------------------------------------
;;;456    	else if (xfType == SSP_TRANSFER_INTERRUPT){
;;;457    
;;;458    		while ((SSPx->SR & SSP_SR_TNF) && (dataCfg->tx_cnt < dataCfg->length)){
;;;459    			// Write data to buffer
;;;460    			if(dataCfg->tx_data == NULL){
;;;461    				if (dataword == 0){
;;;462    					SSP_SendData(SSPx, 0xFF);
;;;463    					dataCfg->tx_cnt++;
;;;464    				} else {
;;;465    					SSP_SendData(SSPx, 0xFFFF);
;;;466    					dataCfg->tx_cnt += 2;
;;;467    				}
;;;468    			} else {
;;;469    				if (dataword == 0){
;;;470    					SSP_SendData(SSPx, (*(uint8_t *)((uint32_t)dataCfg->tx_data + dataCfg->tx_cnt)));
;;;471    					dataCfg->tx_cnt++;
;;;472    				} else {
;;;473    					SSP_SendData(SSPx, (*(uint16_t *)((uint32_t)dataCfg->tx_data + dataCfg->tx_cnt)));
;;;474    					dataCfg->tx_cnt += 2;
;;;475    				}
;;;476    			}
;;;477    
;;;478    			// Check error
;;;479    			if ((stat = SSPx->RIS) & SSP_RIS_ROR){
;;;480    				// save status and return
;;;481    				dataCfg->status = stat | SSP_STAT_ERROR;
;;;482    				return (-1);
;;;483    			}
;;;484    
;;;485    			// Check for any data available in RX FIFO
;;;486    			while ((SSPx->SR & SSP_SR_RNE) && (dataCfg->rx_cnt < dataCfg->length)){
;;;487    				// Read data from SSP data
;;;488    				tmp = SSP_ReceiveData(SSPx);
;;;489    
;;;490    				// Store data to destination
;;;491    				if (dataCfg->rx_data != NULL)
;;;492    				{
;;;493    					if (dataword == 0){
;;;494    						*(uint8_t *)((uint32_t)dataCfg->rx_data + dataCfg->rx_cnt) = (uint8_t) tmp;
;;;495    					} else {
;;;496    						*(uint16_t *)((uint32_t)dataCfg->rx_data + dataCfg->rx_cnt) = (uint16_t) tmp;
;;;497    					}
;;;498    				}
;;;499    				// Increase counter
;;;500    				if (dataword == 0){
;;;501    					dataCfg->rx_cnt++;
;;;502    				} else {
;;;503    					dataCfg->rx_cnt += 2;
;;;504    				}
;;;505    			}
;;;506    		}
;;;507    
;;;508    		// If there more data to sent or receive
;;;509    		if ((dataCfg->rx_cnt < dataCfg->length) || (dataCfg->tx_cnt < dataCfg->length)){
;;;510    			// Enable all interrupt
;;;511    			SSPx->IMSC = SSP_IMSC_BITMASK;
;;;512    		} else {
;;;513    			// Save status
;;;514    			dataCfg->status = SSP_STAT_DONE;
;;;515    		}
;;;516    		return (0);
;;;517    	}
;;;518    
;;;519    	return (-1);
;;;520    }
0000d0  b005              ADD      sp,sp,#0x14
0000d2  e8bd8ff0          POP      {r4-r11,pc}
                  |L14.214|
0000d6  e017              B        |L14.264|
                  |L14.216|
0000d8  4630              MOV      r0,r6                 ;421
0000da  f7fffffe          BL       SSP_ReceiveData
0000de  4607              MOV      r7,r0                 ;421
0000e0  68a0              LDR      r0,[r4,#8]            ;424
0000e2  b148              CBZ      r0,|L14.248|
0000e4  b925              CBNZ     r5,|L14.240|
0000e6  f8897000          STRB     r7,[r9,#0]            ;427
0000ea  f1090901          ADD      r9,r9,#1              ;428
0000ee  e003              B        |L14.248|
                  |L14.240|
0000f0  f8ab7000          STRH     r7,[r11,#0]           ;430
0000f4  f10b0b02          ADD      r11,r11,#2            ;431
                  |L14.248|
0000f8  b91d              CBNZ     r5,|L14.258|
0000fa  68e0              LDR      r0,[r4,#0xc]          ;436
0000fc  1c40              ADDS     r0,r0,#1              ;436
0000fe  60e0              STR      r0,[r4,#0xc]          ;436
000100  e002              B        |L14.264|
                  |L14.258|
000102  68e0              LDR      r0,[r4,#0xc]          ;438
000104  1c80              ADDS     r0,r0,#2              ;438
000106  60e0              STR      r0,[r4,#0xc]          ;438
                  |L14.264|
000108  68f0              LDR      r0,[r6,#0xc]          ;419
00010a  f0000004          AND      r0,r0,#4              ;419
00010e  b118              CBZ      r0,|L14.280|
000110  e9d40103          LDRD     r0,r1,[r4,#0xc]       ;419
000114  4288              CMP      r0,r1                 ;419
000116  d3df              BCC      |L14.216|
                  |L14.280|
000118  6921              LDR      r1,[r4,#0x10]         ;387
00011a  6860              LDR      r0,[r4,#4]            ;387
00011c  4288              CMP      r0,r1                 ;387
00011e  d39a              BCC      |L14.86|
000120  e9d40103          LDRD     r0,r1,[r4,#0xc]       ;387
000124  4288              CMP      r0,r1                 ;387
000126  d396              BCC      |L14.86|
000128  f44f7080          MOV      r0,#0x100             ;444
00012c  6160              STR      r0,[r4,#0x14]         ;444
00012e  6820              LDR      r0,[r4,#0]            ;446
000130  b110              CBZ      r0,|L14.312|
000132  6860              LDR      r0,[r4,#4]            ;447
000134  e7cc              B        |L14.208|
                  |L14.310|
000136  e005              B        |L14.324|
                  |L14.312|
000138  68a0              LDR      r0,[r4,#8]            ;448
00013a  b108              CBZ      r0,|L14.320|
00013c  68e0              LDR      r0,[r4,#0xc]          ;449
00013e  e7c7              B        |L14.208|
                  |L14.320|
000140  2000              MOVS     r0,#0                 ;451
000142  e7c5              B        |L14.208|
                  |L14.324|
000144  9804              LDR      r0,[sp,#0x10]         ;456
000146  2801              CMP      r0,#1                 ;456
000148  d16a              BNE      |L14.544|
00014a  e051              B        |L14.496|
                  |L14.332|
00014c  6820              LDR      r0,[r4,#0]            ;460
00014e  b988              CBNZ     r0,|L14.372|
000150  b93d              CBNZ     r5,|L14.354|
000152  21ff              MOVS     r1,#0xff              ;462
000154  4630              MOV      r0,r6                 ;462
000156  f7fffffe          BL       SSP_SendData
00015a  6860              LDR      r0,[r4,#4]            ;463
00015c  1c40              ADDS     r0,r0,#1              ;463
00015e  6060              STR      r0,[r4,#4]            ;463
000160  e01c              B        |L14.412|
                  |L14.354|
000162  f64f71ff          MOV      r1,#0xffff            ;465
000166  4630              MOV      r0,r6                 ;465
000168  f7fffffe          BL       SSP_SendData
00016c  6860              LDR      r0,[r4,#4]            ;466
00016e  1c80              ADDS     r0,r0,#2              ;466
000170  6060              STR      r0,[r4,#4]            ;466
000172  e013              B        |L14.412|
                  |L14.372|
000174  b94d              CBNZ     r5,|L14.394|
000176  e9d40200          LDRD     r0,r2,[r4,#0]         ;470
00017a  5c81              LDRB     r1,[r0,r2]            ;470
00017c  4630              MOV      r0,r6                 ;470
00017e  f7fffffe          BL       SSP_SendData
000182  6860              LDR      r0,[r4,#4]            ;471
000184  1c40              ADDS     r0,r0,#1              ;471
000186  6060              STR      r0,[r4,#4]            ;471
000188  e008              B        |L14.412|
                  |L14.394|
00018a  e9d40200          LDRD     r0,r2,[r4,#0]         ;473
00018e  5a81              LDRH     r1,[r0,r2]            ;473
000190  4630              MOV      r0,r6                 ;473
000192  f7fffffe          BL       SSP_SendData
000196  6860              LDR      r0,[r4,#4]            ;474
000198  1c80              ADDS     r0,r0,#2              ;474
00019a  6060              STR      r0,[r4,#4]            ;474
                  |L14.412|
00019c  f8d68018          LDR      r8,[r6,#0x18]         ;479
0001a0  f0080001          AND      r0,r8,#1              ;479
0001a4  b128              CBZ      r0,|L14.434|
0001a6  f4487000          ORR      r0,r8,#0x200          ;481
0001aa  6160              STR      r0,[r4,#0x14]         ;481
0001ac  f04f30ff          MOV      r0,#0xffffffff        ;482
0001b0  e78e              B        |L14.208|
                  |L14.434|
0001b2  e015              B        |L14.480|
                  |L14.436|
0001b4  4630              MOV      r0,r6                 ;488
0001b6  f7fffffe          BL       SSP_ReceiveData
0001ba  4607              MOV      r7,r0                 ;488
0001bc  68a0              LDR      r0,[r4,#8]            ;491
0001be  b138              CBZ      r0,|L14.464|
0001c0  b91d              CBNZ     r5,|L14.458|
0001c2  e9d41202          LDRD     r1,r2,[r4,#8]         ;494
0001c6  548f              STRB     r7,[r1,r2]            ;494
0001c8  e002              B        |L14.464|
                  |L14.458|
0001ca  e9d41202          LDRD     r1,r2,[r4,#8]         ;496
0001ce  528f              STRH     r7,[r1,r2]            ;496
                  |L14.464|
0001d0  b91d              CBNZ     r5,|L14.474|
0001d2  68e0              LDR      r0,[r4,#0xc]          ;501
0001d4  1c40              ADDS     r0,r0,#1              ;501
0001d6  60e0              STR      r0,[r4,#0xc]          ;501
0001d8  e002              B        |L14.480|
                  |L14.474|
0001da  68e0              LDR      r0,[r4,#0xc]          ;503
0001dc  1c80              ADDS     r0,r0,#2              ;503
0001de  60e0              STR      r0,[r4,#0xc]          ;503
                  |L14.480|
0001e0  68f0              LDR      r0,[r6,#0xc]          ;486
0001e2  f0000004          AND      r0,r0,#4              ;486
0001e6  b118              CBZ      r0,|L14.496|
0001e8  e9d40103          LDRD     r0,r1,[r4,#0xc]       ;486
0001ec  4288              CMP      r0,r1                 ;486
0001ee  d3e1              BCC      |L14.436|
                  |L14.496|
0001f0  68f0              LDR      r0,[r6,#0xc]          ;458
0001f2  f0000002          AND      r0,r0,#2              ;458
0001f6  b118              CBZ      r0,|L14.512|
0001f8  6921              LDR      r1,[r4,#0x10]         ;458
0001fa  6860              LDR      r0,[r4,#4]            ;458
0001fc  4288              CMP      r0,r1                 ;458
0001fe  d3a5              BCC      |L14.332|
                  |L14.512|
000200  e9d40103          LDRD     r0,r1,[r4,#0xc]       ;509
000204  4288              CMP      r0,r1                 ;509
000206  d303              BCC      |L14.528|
000208  6921              LDR      r1,[r4,#0x10]         ;509
00020a  6860              LDR      r0,[r4,#4]            ;509
00020c  4288              CMP      r0,r1                 ;509
00020e  d202              BCS      |L14.534|
                  |L14.528|
000210  200f              MOVS     r0,#0xf               ;511
000212  6170              STR      r0,[r6,#0x14]         ;511
000214  e002              B        |L14.540|
                  |L14.534|
000216  f44f7080          MOV      r0,#0x100             ;514
00021a  6160              STR      r0,[r4,#0x14]         ;514
                  |L14.540|
00021c  2000              MOVS     r0,#0                 ;516
00021e  e757              B        |L14.208|
                  |L14.544|
000220  f04f30ff          MOV      r0,#0xffffffff        ;519
000224  e754              B        |L14.208|
;;;521    
                          ENDP


                          AREA ||i.SSP_ReceiveData||, CODE, READONLY, ALIGN=2

                  SSP_ReceiveData PROC
;;;327     **********************************************************************/
;;;328    uint16_t SSP_ReceiveData(LPC_SSP_TypeDef* SSPx)
000000  b510              PUSH     {r4,lr}
;;;329    {
000002  4604              MOV      r4,r0
;;;330    	CHECK_PARAM(PARAM_SSPx(SSPx));
000004  4807              LDR      r0,|L15.36|
000006  4284              CMP      r4,r0
000008  d002              BEQ      |L15.16|
00000a  4807              LDR      r0,|L15.40|
00000c  4284              CMP      r4,r0
00000e  d100              BNE      |L15.18|
                  |L15.16|
000010  e004              B        |L15.28|
                  |L15.18|
000012  f44f71a5          MOV      r1,#0x14a
000016  a005              ADR      r0,|L15.44|
000018  f7fffffe          BL       check_failed
                  |L15.28|
;;;331    
;;;332    	return ((uint16_t) (SSP_DR_BITMASK(SSPx->DR)));
00001c  68a0              LDR      r0,[r4,#8]
00001e  b280              UXTH     r0,r0
;;;333    }
000020  bd10              POP      {r4,pc}
;;;334    
                          ENDP

000022  0000              DCW      0x0000
                  |L15.36|
                          DCD      0x40088000
                  |L15.40|
                          DCD      0x40030000
                  |L15.44|
00002c  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_ssp.c",0
000030  44726976
000034  6572735c
000038  736f7572
00003c  63655c6c
000040  70633137
000044  78785f73
000048  73702e63
00004c  00      
00004d  00                DCB      0
00004e  00                DCB      0
00004f  00                DCB      0

                          AREA ||i.SSP_SendData||, CODE, READONLY, ALIGN=2

                  SSP_SendData PROC
;;;311     **********************************************************************/
;;;312    void SSP_SendData(LPC_SSP_TypeDef* SSPx, uint16_t Data)
000000  b570              PUSH     {r4-r6,lr}
;;;313    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;314    	CHECK_PARAM(PARAM_SSPx(SSPx));
000006  4807              LDR      r0,|L16.36|
000008  4284              CMP      r4,r0
00000a  d002              BEQ      |L16.18|
00000c  4806              LDR      r0,|L16.40|
00000e  4284              CMP      r4,r0
000010  d100              BNE      |L16.20|
                  |L16.18|
000012  e004              B        |L16.30|
                  |L16.20|
000014  f44f719d          MOV      r1,#0x13a
000018  a004              ADR      r0,|L16.44|
00001a  f7fffffe          BL       check_failed
                  |L16.30|
;;;315    
;;;316    	SSPx->DR = SSP_DR_BITMASK(Data);
00001e  b2a8              UXTH     r0,r5
000020  60a0              STR      r0,[r4,#8]
;;;317    }
000022  bd70              POP      {r4-r6,pc}
;;;318    
                          ENDP

                  |L16.36|
                          DCD      0x40088000
                  |L16.40|
                          DCD      0x40030000
                  |L16.44|
00002c  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_ssp.c",0
000030  44726976
000034  6572735c
000038  736f7572
00003c  63655c6c
000040  70633137
000044  78785f73
000048  73702e63
00004c  00      
00004d  00                DCB      0
00004e  00                DCB      0
00004f  00                DCB      0

                          AREA ||i.SSP_SlaveOutputCmd||, CODE, READONLY, ALIGN=2

                  SSP_SlaveOutputCmd PROC
;;;285     **********************************************************************/
;;;286    void SSP_SlaveOutputCmd(LPC_SSP_TypeDef* SSPx, FunctionalState NewState)
000000  b570              PUSH     {r4-r6,lr}
;;;287    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;288    	CHECK_PARAM(PARAM_SSPx(SSPx));
000006  4810              LDR      r0,|L17.72|
000008  4284              CMP      r4,r0
00000a  d002              BEQ      |L17.18|
00000c  480f              LDR      r0,|L17.76|
00000e  4284              CMP      r4,r0
000010  d100              BNE      |L17.20|
                  |L17.18|
000012  e004              B        |L17.30|
                  |L17.20|
000014  f44f7190          MOV      r1,#0x120
000018  a00d              ADR      r0,|L17.80|
00001a  f7fffffe          BL       check_failed
                  |L17.30|
;;;289    	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
00001e  b10d              CBZ      r5,|L17.36|
000020  2d01              CMP      r5,#1
000022  d100              BNE      |L17.38|
                  |L17.36|
000024  e004              B        |L17.48|
                  |L17.38|
000026  f2401121          MOV      r1,#0x121
00002a  a009              ADR      r0,|L17.80|
00002c  f7fffffe          BL       check_failed
                  |L17.48|
;;;290    
;;;291    	if (NewState == ENABLE)
000030  2d01              CMP      r5,#1
000032  d104              BNE      |L17.62|
;;;292    	{
;;;293    		SSPx->CR1 &= (~SSP_CR1_SO_DISABLE) & SSP_CR1_BITMASK;
000034  6860              LDR      r0,[r4,#4]
000036  f0000007          AND      r0,r0,#7
00003a  6060              STR      r0,[r4,#4]
00003c  e003              B        |L17.70|
                  |L17.62|
;;;294    	}
;;;295    	else
;;;296    	{
;;;297    		SSPx->CR1 |= SSP_CR1_SO_DISABLE;
00003e  6860              LDR      r0,[r4,#4]
000040  f0400008          ORR      r0,r0,#8
000044  6060              STR      r0,[r4,#4]
                  |L17.70|
;;;298    	}
;;;299    }
000046  bd70              POP      {r4-r6,pc}
;;;300    
                          ENDP

                  |L17.72|
                          DCD      0x40088000
                  |L17.76|
                          DCD      0x40030000
                  |L17.80|
000050  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_ssp.c",0
000054  44726976
000058  6572735c
00005c  736f7572
000060  63655c6c
000064  70633137
000068  78785f73
00006c  73702e63
000070  00      
000071  00                DCB      0
000072  00                DCB      0
000073  00                DCB      0

                          AREA ||i.setSSPclock||, CODE, READONLY, ALIGN=2

                  setSSPclock PROC
;;;68      ***********************************************************************/
;;;69     static void setSSPclock (LPC_SSP_TypeDef *SSPx, uint32_t target_clock)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;70     {
000004  4604              MOV      r4,r0
000006  4688              MOV      r8,r1
;;;71         uint32_t prescale, cr0_div, cmp_clk, ssp_clk;
;;;72     
;;;73         CHECK_PARAM(PARAM_SSPx(SSPx));
000008  481e              LDR      r0,|L18.132|
00000a  4284              CMP      r4,r0
00000c  d002              BEQ      |L18.20|
00000e  481e              LDR      r0,|L18.136|
000010  4284              CMP      r4,r0
000012  d100              BNE      |L18.22|
                  |L18.20|
000014  e003              B        |L18.30|
                  |L18.22|
000016  2149              MOVS     r1,#0x49
000018  a01c              ADR      r0,|L18.140|
00001a  f7fffffe          BL       check_failed
                  |L18.30|
;;;74     
;;;75         /* The SSP clock is derived from the (main system oscillator / 2),
;;;76            so compute the best divider from that clock */
;;;77         if (SSPx == LPC_SSP0){
00001e  4819              LDR      r0,|L18.132|
000020  4284              CMP      r4,r0
000022  d104              BNE      |L18.46|
;;;78         	ssp_clk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_SSP0);
000024  202a              MOVS     r0,#0x2a
000026  f7fffffe          BL       CLKPWR_GetPCLK
00002a  4607              MOV      r7,r0
00002c  e009              B        |L18.66|
                  |L18.46|
;;;79         } else if (SSPx == LPC_SSP1) {
00002e  4816              LDR      r0,|L18.136|
000030  4284              CMP      r4,r0
000032  d104              BNE      |L18.62|
;;;80         	ssp_clk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_SSP1);
000034  2014              MOVS     r0,#0x14
000036  f7fffffe          BL       CLKPWR_GetPCLK
00003a  4607              MOV      r7,r0
00003c  e001              B        |L18.66|
                  |L18.62|
;;;81         } else {
;;;82         	return;
;;;83         }
;;;84     
;;;85     	/* Find closest divider to get at or under the target frequency.
;;;86     	   Use smallest prescale possible and rely on the divider to get
;;;87     	   the closest target frequency */
;;;88     	cr0_div = 0;
;;;89     	cmp_clk = 0xFFFFFFFF;
;;;90     	prescale = 2;
;;;91     	while (cmp_clk > target_clock)
;;;92     	{
;;;93     		cmp_clk = ssp_clk / ((cr0_div + 1) * prescale);
;;;94     		if (cmp_clk > target_clock)
;;;95     		{
;;;96     			cr0_div++;
;;;97     			if (cr0_div > 0xFF)
;;;98     			{
;;;99     				cr0_div = 0;
;;;100    				prescale += 2;
;;;101    			}
;;;102    		}
;;;103    	}
;;;104    
;;;105        /* Write computed prescaler and divider back to register */
;;;106        SSPx->CR0 &= (~SSP_CR0_SCR(0xFF)) & SSP_CR0_BITMASK;
;;;107        SSPx->CR0 |= (SSP_CR0_SCR(cr0_div)) & SSP_CR0_BITMASK;
;;;108        SSPx->CPSR = prescale & SSP_CPSR_BITMASK;
;;;109    }
00003e  e8bd87f0          POP      {r4-r10,pc}
                  |L18.66|
000042  2500              MOVS     r5,#0                 ;88
000044  f04f39ff          MOV      r9,#0xffffffff        ;89
000048  2602              MOVS     r6,#2                 ;90
00004a  e00a              B        |L18.98|
                  |L18.76|
00004c  1c68              ADDS     r0,r5,#1              ;93
00004e  4370              MULS     r0,r6,r0              ;93
000050  fbb7f9f0          UDIV     r9,r7,r0              ;93
000054  45c1              CMP      r9,r8                 ;94
000056  d904              BLS      |L18.98|
000058  1c6d              ADDS     r5,r5,#1              ;96
00005a  2dff              CMP      r5,#0xff              ;97
00005c  d901              BLS      |L18.98|
00005e  2500              MOVS     r5,#0                 ;99
000060  1cb6              ADDS     r6,r6,#2              ;100
                  |L18.98|
000062  45c1              CMP      r9,r8                 ;91
000064  d8f2              BHI      |L18.76|
000066  6820              LDR      r0,[r4,#0]            ;106
000068  b2c0              UXTB     r0,r0                 ;106
00006a  6020              STR      r0,[r4,#0]            ;106
00006c  6820              LDR      r0,[r4,#0]            ;107
00006e  f64f71ff          MOV      r1,#0xffff            ;107
000072  ea012105          AND      r1,r1,r5,LSL #8       ;107
000076  4308              ORRS     r0,r0,r1              ;107
000078  6020              STR      r0,[r4,#0]            ;107
00007a  b2f0              UXTB     r0,r6                 ;108
00007c  6120              STR      r0,[r4,#0x10]         ;108
00007e  bf00              NOP      
000080  e7dd              B        |L18.62|
;;;110    
                          ENDP

000082  0000              DCW      0x0000
                  |L18.132|
                          DCD      0x40088000
                  |L18.136|
                          DCD      0x40030000
                  |L18.140|
00008c  4c69625c          DCB      "Lib\\Drivers\\source\\lpc17xx_ssp.c",0
000090  44726976
000094  6572735c
000098  736f7572
00009c  63655c6c
0000a0  70633137
0000a4  78785f73
0000a8  73702e63
0000ac  00      
0000ad  00                DCB      0
0000ae  00                DCB      0
0000af  00                DCB      0

;*** Start embedded assembler ***

#line 1 "Lib\\Drivers\\source\\lpc17xx_ssp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_lpc17xx_ssp_c_SSP_Init____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_lpc17xx_ssp_c_SSP_Init____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_lpc17xx_ssp_c_SSP_Init____REVSH|
#line 144
|__asm___13_lpc17xx_ssp_c_SSP_Init____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
