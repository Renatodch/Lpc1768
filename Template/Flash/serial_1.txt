; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\serial_1.o --asm_dir=.\Flash\ --list_dir=.\Flash\ --depend=.\flash\serial_1.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\Lib\Drivers\include -I.\Inc -I.\Lib\Usb_Drivers\Inc -I.\Lib\CLib__1_0_0_4\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\NXP\LPC17xx -D__UVISION_VERSION=525 --omf_browse=.\flash\serial_1.crf Lib\CLib__1_0_0_4\src\Serial.c]
                          THUMB

                          AREA ||i.Serial_Events||, CODE, READONLY, ALIGN=1

                  Serial_Events PROC
;;;20     *******************************************************************************/
;;;21     void Serial_Events(Serial *p)
000000  b530              PUSH     {r4,r5,lr}
;;;22     {
000002  f5ad7d01          SUB      sp,sp,#0x204
000006  4605              MOV      r5,r0
;;;23     	uint32_t length;
;;;24     	char buffer[512]={0};
000008  f44f7100          MOV      r1,#0x200
00000c  a801              ADD      r0,sp,#4
00000e  f7fffffe          BL       __aeabi_memclr4
;;;25     	
;;;26     	if( Fifo_OnInactive( &p->fifo ) )
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       Fifo_OnInactive
000018  b160              CBZ      r0,|L1.52|
;;;27     	{		
;;;28     			length = Fifo_Read( &p->fifo,buffer,FIFO_SIZE); 
00001a  f44f7200          MOV      r2,#0x200
00001e  a901              ADD      r1,sp,#4
000020  4628              MOV      r0,r5
000022  f7fffffe          BL       Fifo_Read
000026  4604              MOV      r4,r0
;;;29     		
;;;30     			if (length)
000028  b124              CBZ      r4,|L1.52|
;;;31     			{
;;;32     				p->receiver_EventHandler(buffer, length);	
00002a  4621              MOV      r1,r4
00002c  a801              ADD      r0,sp,#4
00002e  f8d52424          LDR      r2,[r5,#0x424]
000032  4790              BLX      r2
                  |L1.52|
;;;33     			}
;;;34     	}	
;;;35     }
000034  f50d7d01          ADD      sp,sp,#0x204
000038  bd30              POP      {r4,r5,pc}
;;;36     
                          ENDP


                          AREA ||i.Serial_Init||, CODE, READONLY, ALIGN=1

                  Serial_Init PROC
;;;58     *******************************************************************************/
;;;59     void Serial_Init(Serial *p, Receiver_EventHandler receiver_EventHandler)
000000  b570              PUSH     {r4-r6,lr}
;;;60     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;61     	Fifo_Init(&p->fifo);
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       Fifo_Init
;;;62     	p->receiver_EventHandler = receiver_EventHandler;
00000c  f8c45424          STR      r5,[r4,#0x424]
;;;63     
;;;64     }
000010  bd70              POP      {r4-r6,pc}
;;;65     
                          ENDP


                          AREA ||i.Serial_Send||, CODE, READONLY, ALIGN=1

                  Serial_Send PROC
;;;44     *******************************************************************************/
;;;45     void Serial_Send(Serial *p, char *msg)
000000  4770              BX       lr
;;;46     {
;;;47     //	USART_TX(p->Port, msg);
;;;48     }
;;;49     
                          ENDP


                          AREA ||i.Usb_InitVar||, CODE, READONLY, ALIGN=1

                  Usb_InitVar PROC
;;;65     
;;;66     void Usb_InitVar(Serial *p, Receiver_EventHandler receiver_EventHandler)
000000  b570              PUSH     {r4-r6,lr}
;;;67     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;68     p->fifo.head = 0;
000006  2000              MOVS     r0,#0
000008  f5046480          ADD      r4,r4,#0x400
00000c  6020              STR      r0,[r4,#0]
;;;69     p->fifo.tail = 0;
00000e  6060              STR      r0,[r4,#4]
;;;70     p->fifo.size = FIFO_SIZE;
000010  f44f7000          MOV      r0,#0x200
000014  60a0              STR      r0,[r4,#8]
;;;71     p->fifo.cnt_FreeWrite = 0;
000016  2000              MOVS     r0,#0
000018  60e0              STR      r0,[r4,#0xc]
;;;72     p->fifo.tmr_Inactive = 10;
00001a  200a              MOVS     r0,#0xa
00001c  6160              STR      r0,[r4,#0x14]
;;;73     p->fifo.cnt_FreeRead = 0;
00001e  2000              MOVS     r0,#0
000020  6120              STR      r0,[r4,#0x10]
;;;74     Timer_Init(&p->fifo.inactive_Timer, p->fifo.tmr_Inactive);
000022  6961              LDR      r1,[r4,#0x14]
000024  f5a46480          SUB      r4,r4,#0x400
000028  f5046083          ADD      r0,r4,#0x418
00002c  f7fffffe          BL       Timer_Init
;;;75     p->receiver_EventHandler = receiver_EventHandler;
000030  f8c45424          STR      r5,[r4,#0x424]
;;;76     }
000034  bd70              POP      {r4-r6,pc}
                          ENDP


;*** Start embedded assembler ***

#line 1 "Lib\\CLib__1_0_0_4\\src\\Serial.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_Serial_c_7c51883f____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___8_Serial_c_7c51883f____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_Serial_c_7c51883f____REVSH|
#line 144
|__asm___8_Serial_c_7c51883f____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
