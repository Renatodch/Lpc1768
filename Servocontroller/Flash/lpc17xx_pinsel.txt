; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\lpc17xx_pinsel.o --asm_dir=.\Flash\ --list_dir=.\Flash\ --depend=.\flash\lpc17xx_pinsel.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\Lib\Drivers\include -I.\Inc -I.\Lib\Usb_Drivers\Inc -I.\Lib\CLib__1_0_0_4\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\NXP\LPC17xx -D__UVISION_VERSION=525 --omf_browse=.\flash\lpc17xx_pinsel.crf Lib\Drivers\source\lpc17xx_pinsel.c]
                          THUMB

                          AREA ||i.PINSEL_ConfigPin||, CODE, READONLY, ALIGN=1

                  PINSEL_ConfigPin PROC
;;;301     **********************************************************************/
;;;302    void PINSEL_ConfigPin(PINSEL_CFG_Type *PinCfg)
000000  b510              PUSH     {r4,lr}
;;;303    {
000002  4604              MOV      r4,r0
;;;304    	set_PinFunc(PinCfg->Portnum, PinCfg->Pinnum, PinCfg->Funcnum);
000004  78a2              LDRB     r2,[r4,#2]
000006  7861              LDRB     r1,[r4,#1]
000008  7820              LDRB     r0,[r4,#0]
00000a  f7fffffe          BL       set_PinFunc
;;;305    	set_ResistorMode(PinCfg->Portnum, PinCfg->Pinnum, PinCfg->Pinmode);
00000e  78e2              LDRB     r2,[r4,#3]
000010  7861              LDRB     r1,[r4,#1]
000012  7820              LDRB     r0,[r4,#0]
000014  f7fffffe          BL       set_ResistorMode
;;;306    	set_OpenDrainMode(PinCfg->Portnum, PinCfg->Pinnum, PinCfg->OpenDrain);
000018  7922              LDRB     r2,[r4,#4]
00001a  7861              LDRB     r1,[r4,#1]
00001c  7820              LDRB     r0,[r4,#0]
00001e  f7fffffe          BL       set_OpenDrainMode
;;;307    }
000022  bd10              POP      {r4,pc}
;;;308    
                          ENDP


                          AREA ||i.PINSEL_ConfigTraceFunc||, CODE, READONLY, ALIGN=2

                  PINSEL_ConfigTraceFunc PROC
;;;256     **********************************************************************/
;;;257    void PINSEL_ConfigTraceFunc(FunctionalState NewState)
000000  2801              CMP      r0,#1
;;;258    {
;;;259    	if (NewState == ENABLE) {
000002  d106              BNE      |L2.18|
;;;260    		LPC_PINCON->PINSEL10 |= (0x01UL << 3);
000004  4907              LDR      r1,|L2.36|
000006  6a89              LDR      r1,[r1,#0x28]
000008  f0410108          ORR      r1,r1,#8
00000c  4a05              LDR      r2,|L2.36|
00000e  6291              STR      r1,[r2,#0x28]
000010  e006              B        |L2.32|
                  |L2.18|
;;;261    	} else if (NewState == DISABLE) {
000012  b928              CBNZ     r0,|L2.32|
;;;262    		LPC_PINCON->PINSEL10 &= ~(0x01UL << 3);
000014  4903              LDR      r1,|L2.36|
000016  6a89              LDR      r1,[r1,#0x28]
000018  f0210108          BIC      r1,r1,#8
00001c  4a01              LDR      r2,|L2.36|
00001e  6291              STR      r1,[r2,#0x28]
                  |L2.32|
;;;263    	}
;;;264    }
000020  4770              BX       lr
;;;265    
                          ENDP

000022  0000              DCW      0x0000
                  |L2.36|
                          DCD      0x4002c000

                          AREA ||i.PINSEL_SetI2C0Pins||, CODE, READONLY, ALIGN=2

                  PINSEL_SetI2C0Pins PROC
;;;278     **********************************************************************/
;;;279    void PINSEL_SetI2C0Pins(uint8_t i2cPinMode, FunctionalState filterSlewRateEnable)
000000  2801              CMP      r0,#1
;;;280    {
;;;281    	uint32_t regVal;
;;;282    
;;;283    	if (i2cPinMode == PINSEL_I2C_Fast_Mode){
000002  d100              BNE      |L3.6|
;;;284    		regVal = PINSEL_I2CPADCFG_SCLDRV0 | PINSEL_I2CPADCFG_SDADRV0;
000004  2205              MOVS     r2,#5
                  |L3.6|
;;;285    	}
;;;286    
;;;287    	if (filterSlewRateEnable == DISABLE){
000006  b901              CBNZ     r1,|L3.10|
;;;288    		regVal = PINSEL_I2CPADCFG_SCLI2C0 | PINSEL_I2CPADCFG_SDAI2C0;
000008  220a              MOVS     r2,#0xa
                  |L3.10|
;;;289    	}
;;;290    	LPC_PINCON->I2CPADCFG = regVal;
00000a  4b01              LDR      r3,|L3.16|
00000c  67da              STR      r2,[r3,#0x7c]
;;;291    }
00000e  4770              BX       lr
;;;292    
                          ENDP

                  |L3.16|
                          DCD      0x4002c000

                          AREA ||i.set_OpenDrainMode||, CODE, READONLY, ALIGN=2

                  set_OpenDrainMode PROC
;;;230     **********************************************************************/
;;;231    void set_OpenDrainMode( uint8_t portnum, uint8_t pinnum, uint8_t modenum)
000000  b530              PUSH     {r4,r5,lr}
;;;232    {
000002  460b              MOV      r3,r1
;;;233    	uint32_t *pPinCon = (uint32_t *)&LPC_PINCON->PINMODE_OD0;
000004  4909              LDR      r1,|L4.44|
;;;234    
;;;235    	if (modenum == PINSEL_PINMODE_OPENDRAIN){
000006  2a01              CMP      r2,#1
000008  d107              BNE      |L4.26|
;;;236    		*(uint32_t *)(pPinCon + portnum) |= (0x01UL << pinnum);
00000a  f8514020          LDR      r4,[r1,r0,LSL #2]
00000e  2501              MOVS     r5,#1
000010  409d              LSLS     r5,r5,r3
000012  432c              ORRS     r4,r4,r5
000014  f8414020          STR      r4,[r1,r0,LSL #2]
000018  e006              B        |L4.40|
                  |L4.26|
;;;237    	} else {
;;;238    		*(uint32_t *)(pPinCon + portnum) &= ~(0x01UL << pinnum);
00001a  f8514020          LDR      r4,[r1,r0,LSL #2]
00001e  2501              MOVS     r5,#1
000020  409d              LSLS     r5,r5,r3
000022  43ac              BICS     r4,r4,r5
000024  f8414020          STR      r4,[r1,r0,LSL #2]
                  |L4.40|
;;;239    	}
;;;240    }
000028  bd30              POP      {r4,r5,pc}
;;;241    
                          ENDP

00002a  0000              DCW      0x0000
                  |L4.44|
                          DCD      0x4002c068

                          AREA ||i.set_PinFunc||, CODE, READONLY, ALIGN=2

                  set_PinFunc PROC
;;;99      **********************************************************************/
;;;100    static void set_PinFunc ( uint8_t portnum, uint8_t pinnum, uint8_t funcnum)
000000  b5f0              PUSH     {r4-r7,lr}
;;;101    {
000002  4604              MOV      r4,r0
000004  460b              MOV      r3,r1
000006  4615              MOV      r5,r2
;;;102    	uint32_t pinnum_t = pinnum;
000008  4619              MOV      r1,r3
;;;103    	uint32_t pinselreg_idx = 2 * portnum;
00000a  0060              LSLS     r0,r4,#1
;;;104    	uint32_t *pPinCon = (uint32_t *)&LPC_PINCON->PINSEL0;
00000c  4a0b              LDR      r2,|L5.60|
;;;105    
;;;106    	if (pinnum_t >= 16) {
00000e  2910              CMP      r1,#0x10
000010  d301              BCC      |L5.22|
;;;107    		pinnum_t -= 16;
000012  3910              SUBS     r1,r1,#0x10
;;;108    		pinselreg_idx++;
000014  1c40              ADDS     r0,r0,#1
                  |L5.22|
;;;109    	}
;;;110    	*(uint32_t *)(pPinCon + pinselreg_idx) &= ~(0x03UL << (pinnum_t * 2));
000016  f8526020          LDR      r6,[r2,r0,LSL #2]
00001a  ea4f0c41          LSL      r12,r1,#1
00001e  2703              MOVS     r7,#3
000020  fa07f70c          LSL      r7,r7,r12
000024  43be              BICS     r6,r6,r7
000026  f8426020          STR      r6,[r2,r0,LSL #2]
;;;111    	*(uint32_t *)(pPinCon + pinselreg_idx) |= ((uint32_t)funcnum) << (pinnum_t * 2);
00002a  f8526020          LDR      r6,[r2,r0,LSL #2]
00002e  004f              LSLS     r7,r1,#1
000030  fa05f707          LSL      r7,r5,r7
000034  433e              ORRS     r6,r6,r7
000036  f8426020          STR      r6,[r2,r0,LSL #2]
;;;112    }
00003a  bdf0              POP      {r4-r7,pc}
;;;113    
                          ENDP

                  |L5.60|
                          DCD      0x4002c000

                          AREA ||i.set_ResistorMode||, CODE, READONLY, ALIGN=2

                  set_ResistorMode PROC
;;;164     **********************************************************************/
;;;165    void set_ResistorMode ( uint8_t portnum, uint8_t pinnum, uint8_t modenum)
000000  b5f0              PUSH     {r4-r7,lr}
;;;166    {
000002  4604              MOV      r4,r0
000004  460b              MOV      r3,r1
000006  4615              MOV      r5,r2
;;;167    	uint32_t pinnum_t = pinnum;
000008  4619              MOV      r1,r3
;;;168    	uint32_t pinmodereg_idx = 2 * portnum;
00000a  0060              LSLS     r0,r4,#1
;;;169    	uint32_t *pPinCon = (uint32_t *)&LPC_PINCON->PINMODE0;
00000c  4a0b              LDR      r2,|L6.60|
;;;170    
;;;171    	if (pinnum_t >= 16) {
00000e  2910              CMP      r1,#0x10
000010  d301              BCC      |L6.22|
;;;172    		pinnum_t -= 16;
000012  3910              SUBS     r1,r1,#0x10
;;;173    		pinmodereg_idx++ ;
000014  1c40              ADDS     r0,r0,#1
                  |L6.22|
;;;174    	}
;;;175    
;;;176    	*(uint32_t *)(pPinCon + pinmodereg_idx) &= ~(0x03UL << (pinnum_t * 2));
000016  f8526020          LDR      r6,[r2,r0,LSL #2]
00001a  ea4f0c41          LSL      r12,r1,#1
00001e  2703              MOVS     r7,#3
000020  fa07f70c          LSL      r7,r7,r12
000024  43be              BICS     r6,r6,r7
000026  f8426020          STR      r6,[r2,r0,LSL #2]
;;;177    	*(uint32_t *)(pPinCon + pinmodereg_idx) |= ((uint32_t)modenum) << (pinnum_t * 2);
00002a  f8526020          LDR      r6,[r2,r0,LSL #2]
00002e  004f              LSLS     r7,r1,#1
000030  fa05f707          LSL      r7,r5,r7
000034  433e              ORRS     r6,r6,r7
000036  f8426020          STR      r6,[r2,r0,LSL #2]
;;;178    }
00003a  bdf0              POP      {r4-r7,pc}
;;;179    
                          ENDP

                  |L6.60|
                          DCD      0x4002c040

;*** Start embedded assembler ***

#line 1 "Lib\\Drivers\\source\\lpc17xx_pinsel.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_lpc17xx_pinsel_c_5ef00b0e____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_lpc17xx_pinsel_c_5ef00b0e____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_lpc17xx_pinsel_c_5ef00b0e____REVSH|
#line 144
|__asm___16_lpc17xx_pinsel_c_5ef00b0e____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
